vec.cpp:95:16: error: no class named '__va_list_tag' in the global namespace
typedef class::__va_list_tag __va_list[1];
             ~~^
vec.cpp:96:16: error: no class named '__va_list_tag' in the global namespace
typedef class::__va_list_tag __gnuc_va_list[1];
             ~~^
vec.cpp:99:59: error: no matching literal operator for call to 'operator""_x' with arguments of types 'const char *' and 'unsigned long', and no matching literal operator template
unsigned int __bswap32_var(unsigned int _x){"bswap %0""+r"_x;
                                                          ^
vec.cpp:102:61: error: no matching literal operator for call to 'operator""_x' with arguments of types 'const char *' and 'unsigned long', and no matching literal operator template
unsigned long __bswap64_var(unsigned long _x){"bswap %0""+r"_x;
                                                            ^
vec.cpp:216:7: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
if((_c==0)){return 0;};
    ~~^~~
vec.cpp:216:7: note: remove extraneous parentheses around the comparison to silence this warning
if((_c==0)){return 0;};
   ~  ^  ~
vec.cpp:216:7: note: use '=' to turn this equality comparison into an assignment
if((_c==0)){return 0;};
      ^~
      =
vec.cpp:223:16: error: no class named '__va_list_tag' in the global namespace
typedef class::__va_list_tag va_list[1];
             ~~^
vec.cpp:247:67: error: no class named '__va_list_tag' in the global namespace
extern"C"{int vfwprintf(class::__sFILE(*),wchar_t const(*),class::__va_list_tag(*));};
                                                                ~~^
vec.cpp:248:76: error: no class named '__va_list_tag' in the global namespace
extern"C"{int vswprintf(wchar_t(*),unsigned long n,wchar_t const(*),class::__va_list_tag(*));};
                                                                         ~~^
vec.cpp:249:48: error: no class named '__va_list_tag' in the global namespace
extern"C"{int vwprintf(wchar_t const(*),class::__va_list_tag(*));};
                                             ~~^
vec.cpp:283:66: error: no class named '__va_list_tag' in the global namespace
extern"C"{int vfwscanf(class::__sFILE(*),wchar_t const(*),class::__va_list_tag(*));};
                                                               ~~^
vec.cpp:284:65: error: no class named '__va_list_tag' in the global namespace
extern"C"{int vswscanf(wchar_t const(*),wchar_t const(*),class::__va_list_tag(*));};
                                                              ~~^
vec.cpp:285:47: error: no class named '__va_list_tag' in the global namespace
extern"C"{int vwscanf(wchar_t const(*),class::__va_list_tag(*));};
                                            ~~^
vec.cpp:313:16: error: functions that differ only in their return type cannot be overloaded
wchar_t const(*wcschr(wchar_t const(*__s),wchar_t __c)){return(__libcpp_wcschr(__s,__c));
               ^
vec.cpp:252:20: note: previous declaration is here
extern"C"{wchar_t(*wcschr(wchar_t const(*),wchar_t));};
                   ^
vec.cpp:319:16: error: functions that differ only in their return type cannot be overloaded
wchar_t const(*wcspbrk(wchar_t const(*__s1),wchar_t const(*__s2))){return(__libcpp_wcspbrk(__s1,__s2));
               ^
vec.cpp:262:20: note: previous declaration is here
extern"C"{wchar_t(*wcspbrk(wchar_t const(*),wchar_t const(*)));};
                   ^
vec.cpp:325:16: error: functions that differ only in their return type cannot be overloaded
wchar_t const(*wcsrchr(wchar_t const(*__s),wchar_t __c)){return(__libcpp_wcsrchr(__s,__c));
               ^
vec.cpp:263:20: note: previous declaration is here
extern"C"{wchar_t(*wcsrchr(wchar_t const(*),wchar_t));};
                   ^
vec.cpp:331:16: error: functions that differ only in their return type cannot be overloaded
wchar_t const(*wcsstr(wchar_t const(*__s1),wchar_t const(*__s2))){return(__libcpp_wcsstr(__s1,__s2));
               ^
vec.cpp:266:20: note: previous declaration is here
extern"C"{wchar_t(*wcsstr(wchar_t const(*),wchar_t const(*)));};
                   ^
vec.cpp:337:16: error: functions that differ only in their return type cannot be overloaded
wchar_t const(*wmemchr(wchar_t const(*__s),wchar_t __c,unsigned long __n)){return(__libcpp_wmemchr(__s,__c,__n));
               ^
vec.cpp:273:20: note: previous declaration is here
extern"C"{wchar_t(*wmemchr(wchar_t const(*),wchar_t,unsigned long));};
                   ^
vec.cpp:345:1: error: extraneous 'template<>' in declaration of class 'char_traits'
template<>class char_traits;
^
vec.cpp:345:17: error: redefinition of 'char_traits' as different kind of symbol
template<>class char_traits;
                ^
vec.cpp:343:53: note: previous definition is here
template<typename __xcodeml_template_type_0_0>class char_traits;
                                                    ^
vec.cpp:346:1: error: extraneous 'template<>' in declaration of class 'char_traits'
template<>class char_traits;
^
vec.cpp:346:17: error: redefinition of 'char_traits' as different kind of symbol
template<>class char_traits;
                ^
vec.cpp:343:53: note: previous definition is here
template<typename __xcodeml_template_type_0_0>class char_traits;
                                                    ^
vec.cpp:347:1: error: extraneous 'template<>' in declaration of class 'char_traits'
template<>class char_traits;
^
vec.cpp:347:17: error: redefinition of 'char_traits' as different kind of symbol
template<>class char_traits;
                ^
vec.cpp:343:53: note: previous definition is here
template<typename __xcodeml_template_type_0_0>class char_traits;
                                                    ^
vec.cpp:348:1: error: extraneous 'template<>' in declaration of class 'char_traits'
template<>class char_traits;
^
vec.cpp:348:17: error: redefinition of 'char_traits' as different kind of symbol
template<>class char_traits;
                ^
vec.cpp:343:53: note: previous definition is here
template<typename __xcodeml_template_type_0_0>class char_traits;
                                                    ^
vec.cpp:350:17: error: template 'allocator' cannot be referenced with a class specifier
template<>class allocator template<>class allocator template<>class allocator<int>{public:
                ^
vec.cpp:349:53: note: declared here
template<typename __xcodeml_template_type_0_0>class allocator;
                                                    ^
vec.cpp:350:27: error: expected unqualified-id
template<>class allocator template<>class allocator template<>class allocator<int>{public:
                          ^
vec.cpp:382:17: error: template 'basic_ios' cannot be referenced with a class specifier
template<>class basic_ios template<>class basic_ios;
                ^
vec.cpp:381:90: note: declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class basic_ios;
                                                                                         ^
vec.cpp:382:27: error: expected unqualified-id
template<>class basic_ios template<>class basic_ios;
                          ^
vec.cpp:384:17: error: template 'basic_streambuf' cannot be referenced with a class specifier
template<>class basic_streambuf template<>class basic_streambuf;
                ^
vec.cpp:383:90: note: declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class basic_streambuf;
                                                                                         ^
vec.cpp:384:33: error: expected unqualified-id
template<>class basic_streambuf template<>class basic_streambuf;
                                ^
vec.cpp:386:17: error: template 'basic_istream' cannot be referenced with a class specifier
template<>class basic_istream template<>class basic_istream;
                ^
vec.cpp:385:90: note: declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class basic_istream;
                                                                                         ^
vec.cpp:386:31: error: expected unqualified-id
template<>class basic_istream template<>class basic_istream;
                              ^
vec.cpp:388:17: error: template 'basic_ostream' cannot be referenced with a class specifier
template<>class basic_ostream template<>class basic_ostream;
                ^
vec.cpp:387:90: note: declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class basic_ostream;
                                                                                         ^
vec.cpp:388:31: error: expected unqualified-id
template<>class basic_ostream template<>class basic_ostream;
                              ^
vec.cpp:390:17: error: template 'basic_iostream' cannot be referenced with a class specifier
template<>class basic_iostream template<>class basic_iostream;
                ^
vec.cpp:389:90: note: declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class basic_iostream;
                                                                                         ^
vec.cpp:390:32: error: expected unqualified-id
template<>class basic_iostream template<>class basic_iostream;
                               ^
vec.cpp:392:17: error: template 'basic_stringbuf' cannot be referenced with a class specifier
template<>class basic_stringbuf template<>class basic_stringbuf;
                ^
vec.cpp:391:127: note: declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class basic_stringbuf;
                                                                                                                              ^
vec.cpp:392:33: error: expected unqualified-id
template<>class basic_stringbuf template<>class basic_stringbuf;
                                ^
vec.cpp:394:17: error: template 'basic_istringstream' cannot be referenced with a class specifier
template<>class basic_istringstream template<>class basic_istringstream;
                ^
vec.cpp:393:127: note: declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class basic_istringstream;
                                                                                                                              ^
vec.cpp:394:37: error: expected unqualified-id
template<>class basic_istringstream template<>class basic_istringstream;
                                    ^
vec.cpp:396:17: error: template 'basic_ostringstream' cannot be referenced with a class specifier
template<>class basic_ostringstream template<>class basic_ostringstream;
                ^
vec.cpp:395:127: note: declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class basic_ostringstream;
                                                                                                                              ^
vec.cpp:396:37: error: expected unqualified-id
template<>class basic_ostringstream template<>class basic_ostringstream;
                                    ^
vec.cpp:398:17: error: template 'basic_stringstream' cannot be referenced with a class specifier
template<>class basic_stringstream template<>class basic_stringstream;
                ^
vec.cpp:397:127: note: declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class basic_stringstream;
                                                                                                                              ^
vec.cpp:398:36: error: expected unqualified-id
template<>class basic_stringstream template<>class basic_stringstream;
                                   ^
vec.cpp:400:17: error: template 'basic_filebuf' cannot be referenced with a class specifier
template<>class basic_filebuf template<>class basic_filebuf;
                ^
vec.cpp:399:90: note: declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class basic_filebuf;
                                                                                         ^
vec.cpp:400:31: error: expected unqualified-id
template<>class basic_filebuf template<>class basic_filebuf;
                              ^
vec.cpp:402:17: error: template 'basic_ifstream' cannot be referenced with a class specifier
template<>class basic_ifstream template<>class basic_ifstream;
                ^
vec.cpp:401:90: note: declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class basic_ifstream;
                                                                                         ^
vec.cpp:402:32: error: expected unqualified-id
template<>class basic_ifstream template<>class basic_ifstream;
                               ^
vec.cpp:404:17: error: template 'basic_ofstream' cannot be referenced with a class specifier
template<>class basic_ofstream template<>class basic_ofstream;
                ^
vec.cpp:403:90: note: declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class basic_ofstream;
                                                                                         ^
vec.cpp:404:32: error: expected unqualified-id
template<>class basic_ofstream template<>class basic_ofstream;
                               ^
vec.cpp:406:17: error: template 'basic_fstream' cannot be referenced with a class specifier
template<>class basic_fstream template<>class basic_fstream;
                ^
vec.cpp:405:90: note: declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class basic_fstream;
                                                                                         ^
vec.cpp:406:31: error: expected unqualified-id
template<>class basic_fstream template<>class basic_fstream;
                              ^
vec.cpp:438:1: error: extraneous 'template<>' in declaration of class 'fpos'
template<>class fpos;
^
vec.cpp:438:17: error: redefinition of 'fpos' as different kind of symbol
template<>class fpos;
                ^
vec.cpp:437:53: note: previous definition is here
template<typename __xcodeml_template_type_0_0>class fpos;
                                                    ^
vec.cpp:445:17: error: template 'basic_string' cannot be referenced with a class specifier
template<>class basic_string template<>class basic_string;
                ^
vec.cpp:444:127: note: declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class basic_string;
                                                                                                                              ^
vec.cpp:445:30: error: expected unqualified-id
template<>class basic_string template<>class basic_string;
                             ^
vec.cpp:449:70: error: no template named '__vector_base'
template<>class vector<int,class::std::__1::allocator<int> >:private __vector_base<int,class::std::__1::allocator<int> >{private:
                                                                     ^
vec.cpp:450:34: error: explicit specialization of non-template class '__vector_base'
private:typedef class::std::__1::__vector_base<int,class::std::__1::allocator<int> >__base;
                                 ^            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:450:34: error: no class named '__vector_base' in namespace 'std::__1'
private:typedef class::std::__1::__vector_base<int,class::std::__1::allocator<int> >__base;
                     ~~~~~~~~~~~~^
vec.cpp:456:33: error: explicit specialization of non-template class 'allocator_traits'
public:typedef class::std::__1::allocator_traits<class::std::__1::allocator<int> >__alloc_traits;
                                ^               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:456:33: error: no class named 'allocator_traits' in namespace 'std::__1'
public:typedef class::std::__1::allocator_traits<class::std::__1::allocator<int> >__alloc_traits;
                    ~~~~~~~~~~~~^
vec.cpp:463:33: error: explicit specialization of non-template class '__wrap_iter'
public:typedef class::std::__1::__wrap_iter<int(*)>iterator;
                                ^          ~~~~~~~~
vec.cpp:463:33: error: no class named '__wrap_iter' in namespace 'std::__1'
public:typedef class::std::__1::__wrap_iter<int(*)>iterator;
                    ~~~~~~~~~~~~^
vec.cpp:464:33: error: explicit specialization of non-template class '__wrap_iter'
public:typedef class::std::__1::__wrap_iter<int const(*)>const_iterator;
                                ^          ~~~~~~~~~~~~~~
vec.cpp:464:33: error: no class named '__wrap_iter' in namespace 'std::__1'
public:typedef class::std::__1::__wrap_iter<int const(*)>const_iterator;
                    ~~~~~~~~~~~~^
vec.cpp:465:67: error: explicit specialization of non-template class '__wrap_iter'
public:typedef class::std::__1::reverse_iterator<class::std::__1::__wrap_iter<int(*)> >reverse_iterator;
                                                                  ^          ~~~~~~~~
vec.cpp:465:67: error: no class named '__wrap_iter' in namespace 'std::__1'
public:typedef class::std::__1::reverse_iterator<class::std::__1::__wrap_iter<int(*)> >reverse_iterator;
                                                      ~~~~~~~~~~~~^
vec.cpp:465:33: error: explicit specialization of non-template class 'reverse_iterator'
public:typedef class::std::__1::reverse_iterator<class::std::__1::__wrap_iter<int(*)> >reverse_iterator;
                                ^
vec.cpp:465:33: error: no class named 'reverse_iterator' in namespace 'std::__1'
public:typedef class::std::__1::reverse_iterator<class::std::__1::__wrap_iter<int(*)> >reverse_iterator;
                    ~~~~~~~~~~~~^
vec.cpp:466:67: error: explicit specialization of non-template class '__wrap_iter'
public:typedef class::std::__1::reverse_iterator<class::std::__1::__wrap_iter<int const(*)> >const_reverse_iterator;
                                                                  ^          ~~~~~~~~~~~~~~
vec.cpp:466:67: error: no class named '__wrap_iter' in namespace 'std::__1'
public:typedef class::std::__1::reverse_iterator<class::std::__1::__wrap_iter<int const(*)> >const_reverse_iterator;
                                                      ~~~~~~~~~~~~^
vec.cpp:466:33: error: explicit specialization of non-template class 'reverse_iterator'
public:typedef class::std::__1::reverse_iterator<class::std::__1::__wrap_iter<int const(*)> >const_reverse_iterator;
                                ^
vec.cpp:466:33: error: no class named 'reverse_iterator' in namespace 'std::__1'
public:typedef class::std::__1::reverse_iterator<class::std::__1::__wrap_iter<int const(*)> >const_reverse_iterator;
                    ~~~~~~~~~~~~^
vec.cpp:471:21: error: template 'allocator' cannot be referenced with a class specifier
public:vector(class allocator const&__a);
                    ^
vec.cpp:349:53: note: declared here
template<typename __xcodeml_template_type_0_0>class allocator;
                                                    ^
vec.cpp:476:116: error: use of undeclared identifier 'expression'
public:template<typename __xcodeml_template_type_0_0>vector(__xcodeml_template_type_0_0 __first,typename enable_if<expression,__xcodeml_template_type_0_0>::type __last)
                                                                                                                   ^
vec.cpp:476:157: error: parameter declarator cannot be qualified
public:template<typename __xcodeml_template_type_0_0>vector(__xcodeml_template_type_0_0 __first,typename enable_if<expression,__xcodeml_template_type_0_0>::type __last)
                                                                                                                                                          ~~^
vec.cpp:476:162: error: expected ')'
public:template<typename __xcodeml_template_type_0_0>vector(__xcodeml_template_type_0_0 __first,typename enable_if<expression,__xcodeml_template_type_0_0>::type __last)
                                                                                                                                                                 ^
vec.cpp:476:60: note: to match this '('
public:template<typename __xcodeml_template_type_0_0>vector(__xcodeml_template_type_0_0 __first,typename enable_if<expression,__xcodeml_template_type_0_0>::type __last)
                                                           ^
vec.cpp:476:169: error: expected ';' at end of declaration list
public:template<typename __xcodeml_template_type_0_0>vector(__xcodeml_template_type_0_0 __first,typename enable_if<expression,__xcodeml_template_type_0_0>::type __last)
                                                                                                                                                                        ^
                                                                                                                                                                        ;
vec.cpp:485:27: error: explicit specialization of non-template class 'initializer_list'
public:vector(class::std::initializer_list<int>__il);
                          ^               ~~~~~
vec.cpp:485:27: error: no class named 'initializer_list' in namespace 'std'
public:vector(class::std::initializer_list<int>__il);
                   ~~~~~~~^
vec.cpp:486:27: error: explicit specialization of non-template class 'initializer_list'
public:vector(class::std::initializer_list<int>__il,class allocator const&__a);
                          ^               ~~~~~
vec.cpp:486:27: error: no class named 'initializer_list' in namespace 'std'
public:vector(class::std::initializer_list<int>__il,class allocator const&__a);
                   ~~~~~~~^
vec.cpp:490:92: error: explicit specialization of non-template class 'initializer_list'
public:class::std::__1::vector<int,class::std::__1::allocator<int> >&operator=(class::std::initializer_list<int>__il);
                                                                                           ^               ~~~~~
vec.cpp:490:92: error: no class named 'initializer_list' in namespace 'std'
public:class::std::__1::vector<int,class::std::__1::allocator<int> >&operator=(class::std::initializer_list<int>__il);
                                                                                    ~~~~~~~^
vec.cpp:491:73: error: use of undeclared identifier 'expression'
public:template<typename __xcodeml_template_type_0_0>typename enable_if<expression,void>::type assign(__xcodeml_template_type_0_0 __first,__xcodeml_template_type_0_0 __last)
                                                                        ^
vec.cpp:491:91: error: member 'type' declared as a template
public:template<typename __xcodeml_template_type_0_0>typename enable_if<expression,void>::type assign(__xcodeml_template_type_0_0 __first,__xcodeml_template_type_0_0 __last)
       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                     ^
vec.cpp:491:95: error: expected ';' at end of declaration list
public:template<typename __xcodeml_template_type_0_0>typename enable_if<expression,void>::type assign(__xcodeml_template_type_0_0 __first,__xcodeml_template_type_0_0 __last)
                                                                                              ^
                                                                                              ;
vec.cpp:494:32: error: explicit specialization of non-template class 'initializer_list'
public:void assign(class::std::initializer_list<int>__il);
                               ^               ~~~~~
vec.cpp:494:32: error: no class named 'initializer_list' in namespace 'std'
public:void assign(class::std::initializer_list<int>__il);
                        ~~~~~~~^
vec.cpp:496:25: error: explicit specialization of non-template class '__wrap_iter'
public:class::std::__1::__wrap_iter<int(*)>begin();
                        ^          ~~~~~~~~
vec.cpp:496:25: error: no class named '__wrap_iter' in namespace 'std::__1'
public:class::std::__1::__wrap_iter<int(*)>begin();
            ~~~~~~~~~~~~^
vec.cpp:497:25: error: explicit specialization of non-template class '__wrap_iter'
public:class::std::__1::__wrap_iter<int const(*)>begin()const;
                        ^          ~~~~~~~~~~~~~~
vec.cpp:497:25: error: no class named '__wrap_iter' in namespace 'std::__1'
public:class::std::__1::__wrap_iter<int const(*)>begin()const;
            ~~~~~~~~~~~~^
vec.cpp:498:25: error: explicit specialization of non-template class '__wrap_iter'
public:class::std::__1::__wrap_iter<int(*)>end();
                        ^          ~~~~~~~~
vec.cpp:498:25: error: no class named '__wrap_iter' in namespace 'std::__1'
public:class::std::__1::__wrap_iter<int(*)>end();
            ~~~~~~~~~~~~^
vec.cpp:499:25: error: explicit specialization of non-template class '__wrap_iter'
public:class::std::__1::__wrap_iter<int const(*)>end()const;
                        ^          ~~~~~~~~~~~~~~
vec.cpp:499:25: error: no class named '__wrap_iter' in namespace 'std::__1'
public:class::std::__1::__wrap_iter<int const(*)>end()const;
            ~~~~~~~~~~~~^
vec.cpp:500:59: error: explicit specialization of non-template class '__wrap_iter'
public:class::std::__1::reverse_iterator<class::std::__1::__wrap_iter<int(*)> >rbegin();
                                                          ^          ~~~~~~~~
vec.cpp:500:59: error: no class named '__wrap_iter' in namespace 'std::__1'
public:class::std::__1::reverse_iterator<class::std::__1::__wrap_iter<int(*)> >rbegin();
                                              ~~~~~~~~~~~~^
vec.cpp:500:25: error: explicit specialization of non-template class 'reverse_iterator'
public:class::std::__1::reverse_iterator<class::std::__1::__wrap_iter<int(*)> >rbegin();
                        ^
vec.cpp:500:25: error: no class named 'reverse_iterator' in namespace 'std::__1'
public:class::std::__1::reverse_iterator<class::std::__1::__wrap_iter<int(*)> >rbegin();
            ~~~~~~~~~~~~^
vec.cpp:501:59: error: explicit specialization of non-template class '__wrap_iter'
public:class::std::__1::reverse_iterator<class::std::__1::__wrap_iter<int const(*)> >rbegin()const;
                                                          ^          ~~~~~~~~~~~~~~
vec.cpp:501:59: error: no class named '__wrap_iter' in namespace 'std::__1'
public:class::std::__1::reverse_iterator<class::std::__1::__wrap_iter<int const(*)> >rbegin()const;
                                              ~~~~~~~~~~~~^
vec.cpp:501:25: error: explicit specialization of non-template class 'reverse_iterator'
public:class::std::__1::reverse_iterator<class::std::__1::__wrap_iter<int const(*)> >rbegin()const;
                        ^
vec.cpp:501:25: error: no class named 'reverse_iterator' in namespace 'std::__1'
public:class::std::__1::reverse_iterator<class::std::__1::__wrap_iter<int const(*)> >rbegin()const;
            ~~~~~~~~~~~~^
vec.cpp:502:59: error: explicit specialization of non-template class '__wrap_iter'
public:class::std::__1::reverse_iterator<class::std::__1::__wrap_iter<int(*)> >rend();
                                                          ^          ~~~~~~~~
vec.cpp:502:59: error: no class named '__wrap_iter' in namespace 'std::__1'
public:class::std::__1::reverse_iterator<class::std::__1::__wrap_iter<int(*)> >rend();
                                              ~~~~~~~~~~~~^
vec.cpp:502:25: error: explicit specialization of non-template class 'reverse_iterator'
public:class::std::__1::reverse_iterator<class::std::__1::__wrap_iter<int(*)> >rend();
                        ^
vec.cpp:502:25: error: no class named 'reverse_iterator' in namespace 'std::__1'
public:class::std::__1::reverse_iterator<class::std::__1::__wrap_iter<int(*)> >rend();
            ~~~~~~~~~~~~^
vec.cpp:503:59: error: explicit specialization of non-template class '__wrap_iter'
public:class::std::__1::reverse_iterator<class::std::__1::__wrap_iter<int const(*)> >rend()const;
                                                          ^          ~~~~~~~~~~~~~~
vec.cpp:503:59: error: no class named '__wrap_iter' in namespace 'std::__1'
public:class::std::__1::reverse_iterator<class::std::__1::__wrap_iter<int const(*)> >rend()const;
                                              ~~~~~~~~~~~~^
vec.cpp:503:25: error: explicit specialization of non-template class 'reverse_iterator'
public:class::std::__1::reverse_iterator<class::std::__1::__wrap_iter<int const(*)> >rend()const;
                        ^
vec.cpp:503:25: error: no class named 'reverse_iterator' in namespace 'std::__1'
public:class::std::__1::reverse_iterator<class::std::__1::__wrap_iter<int const(*)> >rend()const;
            ~~~~~~~~~~~~^
vec.cpp:504:25: error: explicit specialization of non-template class '__wrap_iter'
public:class::std::__1::__wrap_iter<int const(*)>cbegin()const;
                        ^          ~~~~~~~~~~~~~~
vec.cpp:504:25: error: no class named '__wrap_iter' in namespace 'std::__1'
public:class::std::__1::__wrap_iter<int const(*)>cbegin()const;
            ~~~~~~~~~~~~^
vec.cpp:505:25: error: explicit specialization of non-template class '__wrap_iter'
public:class::std::__1::__wrap_iter<int const(*)>cend()const;
                        ^          ~~~~~~~~~~~~~~
vec.cpp:505:25: error: no class named '__wrap_iter' in namespace 'std::__1'
public:class::std::__1::__wrap_iter<int const(*)>cend()const;
            ~~~~~~~~~~~~^
vec.cpp:506:59: error: explicit specialization of non-template class '__wrap_iter'
public:class::std::__1::reverse_iterator<class::std::__1::__wrap_iter<int const(*)> >crbegin()const;
                                                          ^          ~~~~~~~~~~~~~~
vec.cpp:506:59: error: no class named '__wrap_iter' in namespace 'std::__1'
public:class::std::__1::reverse_iterator<class::std::__1::__wrap_iter<int const(*)> >crbegin()const;
                                              ~~~~~~~~~~~~^
vec.cpp:506:25: error: explicit specialization of non-template class 'reverse_iterator'
public:class::std::__1::reverse_iterator<class::std::__1::__wrap_iter<int const(*)> >crbegin()const;
                        ^
vec.cpp:506:25: error: no class named 'reverse_iterator' in namespace 'std::__1'
public:class::std::__1::reverse_iterator<class::std::__1::__wrap_iter<int const(*)> >crbegin()const;
            ~~~~~~~~~~~~^
vec.cpp:507:59: error: explicit specialization of non-template class '__wrap_iter'
public:class::std::__1::reverse_iterator<class::std::__1::__wrap_iter<int const(*)> >crend()const;
                                                          ^          ~~~~~~~~~~~~~~
vec.cpp:507:59: error: no class named '__wrap_iter' in namespace 'std::__1'
public:class::std::__1::reverse_iterator<class::std::__1::__wrap_iter<int const(*)> >crend()const;
                                              ~~~~~~~~~~~~^
vec.cpp:507:25: error: explicit specialization of non-template class 'reverse_iterator'
public:class::std::__1::reverse_iterator<class::std::__1::__wrap_iter<int const(*)> >crend()const;
                        ^
vec.cpp:507:25: error: no class named 'reverse_iterator' in namespace 'std::__1'
public:class::std::__1::reverse_iterator<class::std::__1::__wrap_iter<int const(*)> >crend()const;
            ~~~~~~~~~~~~^
vec.cpp:530:110: error: expected ';' at end of declaration list
public:template<typename __xcodeml_template_type_0_0>void __emplace_back(__xcodeml_template_type_0_0(*__arg))
                                                                                                             ^
                                                                                                             ;
vec.cpp:538:87: error: expected ';' at end of declaration list
public:template<typename __xcodeml_template_type_0_0>void emplace_back(void/*__args*/)
                                                                                      ^
                                                                                      ;
vec.cpp:540:25: error: explicit specialization of non-template class '__wrap_iter'
public:class::std::__1::__wrap_iter<int(*)>insert(class::std::__1::__wrap_iter<int const(*)>__position,int const&__x);
                        ^          ~~~~~~~~
vec.cpp:540:25: error: no class named '__wrap_iter' in namespace 'std::__1'
public:class::std::__1::__wrap_iter<int(*)>insert(class::std::__1::__wrap_iter<int const(*)>__position,int const&__x);
            ~~~~~~~~~~~~^
vec.cpp:540:68: error: explicit specialization of non-template class '__wrap_iter'
public:class::std::__1::__wrap_iter<int(*)>insert(class::std::__1::__wrap_iter<int const(*)>__position,int const&__x);
                                                                   ^          ~~~~~~~~~~~~~~
vec.cpp:540:68: error: no class named '__wrap_iter' in namespace 'std::__1'
public:class::std::__1::__wrap_iter<int(*)>insert(class::std::__1::__wrap_iter<int const(*)>__position,int const&__x);
                                                       ~~~~~~~~~~~~^
vec.cpp:541:25: error: explicit specialization of non-template class '__wrap_iter'
public:class::std::__1::__wrap_iter<int(*)>insert(class::std::__1::__wrap_iter<int const(*)>__position,int(*__x));
                        ^          ~~~~~~~~
vec.cpp:541:25: error: no class named '__wrap_iter' in namespace 'std::__1'
public:class::std::__1::__wrap_iter<int(*)>insert(class::std::__1::__wrap_iter<int const(*)>__position,int(*__x));
            ~~~~~~~~~~~~^
vec.cpp:541:68: error: explicit specialization of non-template class '__wrap_iter'
public:class::std::__1::__wrap_iter<int(*)>insert(class::std::__1::__wrap_iter<int const(*)>__position,int(*__x));
                                                                   ^          ~~~~~~~~~~~~~~
vec.cpp:541:68: error: no class named '__wrap_iter' in namespace 'std::__1'
public:class::std::__1::__wrap_iter<int(*)>insert(class::std::__1::__wrap_iter<int const(*)>__position,int(*__x));
                                                       ~~~~~~~~~~~~^
vec.cpp:542:71: error: explicit specialization of non-template class '__wrap_iter'
public:template<typename __xcodeml_template_type_0_0>class::std::__1::__wrap_iter<int(*)>emplace(class::std::__1::__wrap_iter<int const(*)>__position,void/*__args*/)
                                                                      ^          ~~~~~~~~
vec.cpp:542:71: error: no class named '__wrap_iter' in namespace 'std::__1'
public:template<typename __xcodeml_template_type_0_0>class::std::__1::__wrap_iter<int(*)>emplace(class::std::__1::__wrap_iter<int const(*)>__position,void/*__args*/)
                                                          ~~~~~~~~~~~~^
vec.cpp:542:115: error: explicit specialization of non-template class '__wrap_iter'
public:template<typename __xcodeml_template_type_0_0>class::std::__1::__wrap_iter<int(*)>emplace(class::std::__1::__wrap_iter<int const(*)>__position,void/*__args*/)
                                                                                                                  ^          ~~~~~~~~~~~~~~
vec.cpp:542:115: error: no class named '__wrap_iter' in namespace 'std::__1'
public:template<typename __xcodeml_template_type_0_0>class::std::__1::__wrap_iter<int(*)>emplace(class::std::__1::__wrap_iter<int const(*)>__position,void/*__args*/)
                                                                                                      ~~~~~~~~~~~~^
vec.cpp:542:97: error: 'void' must be the first and only parameter if specified
public:template<typename __xcodeml_template_type_0_0>class::std::__1::__wrap_iter<int(*)>emplace(class::std::__1::__wrap_iter<int const(*)>__position,void/*__args*/)
                                                                                                ^
vec.cpp:542:166: error: expected ';' at end of declaration list
public:template<typename __xcodeml_template_type_0_0>class::std::__1::__wrap_iter<int(*)>emplace(class::std::__1::__wrap_iter<int const(*)>__position,void/*__args*/)
                                                                                                                                                                     ^
                                                                                                                                                                     ;
vec.cpp:544:73: error: use of undeclared identifier 'expression'
public:template<typename __xcodeml_template_type_0_0>typename enable_if<expression,class::std::__1::__wrap_iter<int(*)> >::type insert(class::std::__1::__wrap_iter<int const(*)>__position,__xcodeml_template_type_0_0 __first,__xcodeml_template_type_0_0 __last)
                                                                        ^
vec.cpp:544:121: error: expected member name or ';' after declaration specifiers
public:template<typename __xcodeml_template_type_0_0>typename enable_if<expression,class::std::__1::__wrap_iter<int(*)> >::type insert(class::std::__1::__wrap_iter<int const(*)>__position,__xcodeml_template_type_0_0 __first,__xcodeml_template_type_0_0 __last)
                                                                                                                        ^
vec.cpp:547:25: error: explicit specialization of non-template class '__wrap_iter'
public:class::std::__1::__wrap_iter<int(*)>erase(class::std::__1::__wrap_iter<int const(*)>__position);
                        ^          ~~~~~~~~
vec.cpp:547:25: error: no class named '__wrap_iter' in namespace 'std::__1'
public:class::std::__1::__wrap_iter<int(*)>erase(class::std::__1::__wrap_iter<int const(*)>__position);
            ~~~~~~~~~~~~^
vec.cpp:547:67: error: explicit specialization of non-template class '__wrap_iter'
public:class::std::__1::__wrap_iter<int(*)>erase(class::std::__1::__wrap_iter<int const(*)>__position);
                                                                  ^          ~~~~~~~~~~~~~~
vec.cpp:547:67: error: no class named '__wrap_iter' in namespace 'std::__1'
public:class::std::__1::__wrap_iter<int(*)>erase(class::std::__1::__wrap_iter<int const(*)>__position);
                                                      ~~~~~~~~~~~~^
vec.cpp:548:25: error: explicit specialization of non-template class '__wrap_iter'
public:class::std::__1::__wrap_iter<int(*)>erase(class::std::__1::__wrap_iter<int const(*)>__first,class::std::__1::__wrap_iter<int const(*)>__last);
                        ^          ~~~~~~~~
vec.cpp:548:25: error: no class named '__wrap_iter' in namespace 'std::__1'
public:class::std::__1::__wrap_iter<int(*)>erase(class::std::__1::__wrap_iter<int const(*)>__first,class::std::__1::__wrap_iter<int const(*)>__last);
            ~~~~~~~~~~~~^
vec.cpp:548:67: error: explicit specialization of non-template class '__wrap_iter'
public:class::std::__1::__wrap_iter<int(*)>erase(class::std::__1::__wrap_iter<int const(*)>__first,class::std::__1::__wrap_iter<int const(*)>__last);
                                                                  ^          ~~~~~~~~~~~~~~
vec.cpp:548:67: error: no class named '__wrap_iter' in namespace 'std::__1'
public:class::std::__1::__wrap_iter<int(*)>erase(class::std::__1::__wrap_iter<int const(*)>__first,class::std::__1::__wrap_iter<int const(*)>__last);
                                                      ~~~~~~~~~~~~^
vec.cpp:548:117: error: explicit specialization of non-template class '__wrap_iter'
public:class::std::__1::__wrap_iter<int(*)>erase(class::std::__1::__wrap_iter<int const(*)>__first,class::std::__1::__wrap_iter<int const(*)>__last);
                                                                                                                    ^          ~~~~~~~~~~~~~~
vec.cpp:548:117: error: no class named '__wrap_iter' in namespace 'std::__1'
public:class::std::__1::__wrap_iter<int(*)>erase(class::std::__1::__wrap_iter<int const(*)>__first,class::std::__1::__wrap_iter<int const(*)>__last);
                                                                                                        ~~~~~~~~~~~~^
vec.cpp:567:74: error: use of undeclared identifier 'expression'
private:template<typename __xcodeml_template_type_0_0>typename enable_if<expression,void>::type __construct_at_end(__xcodeml_template_type_0_0 __first,__xcodeml_template_type_0_0 __last,unsigned long __n)
                                                                         ^
vec.cpp:567:92: error: member 'type' declared as a template
private:template<typename __xcodeml_template_type_0_0>typename enable_if<expression,void>::type __construct_at_end(__xcodeml_template_type_0_0 __first,__xcodeml_template_type_0_0 __last,unsigned long __n)
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                     ^
vec.cpp:567:96: error: expected ';' at end of declaration list
private:template<typename __xcodeml_template_type_0_0>typename enable_if<expression,void>::type __construct_at_end(__xcodeml_template_type_0_0 __first,__xcodeml_template_type_0_0 __last,unsigned long __n)
                                                                                               ^
                                                                                               ;
vec.cpp:570:26: error: explicit specialization of non-template class '__wrap_iter'
private:class::std::__1::__wrap_iter<int(*)>__make_iter(int(*__p));
                         ^          ~~~~~~~~
vec.cpp:570:26: error: no class named '__wrap_iter' in namespace 'std::__1'
private:class::std::__1::__wrap_iter<int(*)>__make_iter(int(*__p));
             ~~~~~~~~~~~~^
vec.cpp:571:26: error: explicit specialization of non-template class '__wrap_iter'
private:class::std::__1::__wrap_iter<int const(*)>__make_iter(int const(*__p))const;
                         ^          ~~~~~~~~~~~~~~
vec.cpp:571:26: error: no class named '__wrap_iter' in namespace 'std::__1'
private:class::std::__1::__wrap_iter<int const(*)>__make_iter(int const(*__p))const;
             ~~~~~~~~~~~~^
vec.cpp:572:58: error: explicit specialization of non-template class '__split_buffer'
private:void __swap_out_circular_buffer(class::std::__1::__split_buffer<int,class::std::__1::allocator<int>&>&__v){(this->__annotate_delete());
                                                         ^             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:572:58: error: no class named '__split_buffer' in namespace 'std::__1'
private:void __swap_out_circular_buffer(class::std::__1::__split_buffer<int,class::std::__1::allocator<int>&>&__v){(this->__annotate_delete());
                                             ~~~~~~~~~~~~^
vec.cpp:581:58: error: explicit specialization of non-template class '__split_buffer'
private:int(*__swap_out_circular_buffer(class::std::__1::__split_buffer<int,class::std::__1::allocator<int>&>&__v,int(*__p)));
                                                         ^             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:581:58: error: no class named '__split_buffer' in namespace 'std::__1'
private:int(*__swap_out_circular_buffer(class::std::__1::__split_buffer<int,class::std::__1::allocator<int>&>&__v,int(*__p)));
                                             ~~~~~~~~~~~~^
vec.cpp:583:111: error: explicit specialization of non-template class 'integral_constant'
private:void __move_assign(class::std::__1::vector<int,class::std::__1::allocator<int> >&__c,class::std::__1::integral_constant<bool,1>);
                                                                                                              ^                ~~~~~~~~
vec.cpp:583:111: error: no class named 'integral_constant' in namespace 'std::__1'
private:void __move_assign(class::std::__1::vector<int,class::std::__1::allocator<int> >&__c,class::std::__1::integral_constant<bool,1>);
                                                                                                  ~~~~~~~~~~~~^
vec.cpp:584:111: error: explicit specialization of non-template class 'integral_constant'
private:void __move_assign(class::std::__1::vector<int,class::std::__1::allocator<int> >&__c,class::std::__1::integral_constant<bool,0>);
                                                                                                              ^                ~~~~~~~~
vec.cpp:584:111: error: no class named 'integral_constant' in namespace 'std::__1'
private:void __move_assign(class::std::__1::vector<int,class::std::__1::allocator<int> >&__c,class::std::__1::integral_constant<bool,0>);
                                                                                                  ~~~~~~~~~~~~^
vec.cpp:586:116: error: expected ';' at end of declaration list
private:template<typename __xcodeml_template_type_0_0>void __push_back_slow_path(__xcodeml_template_type_0_0(*__x))
                                                                                                                   ^
                                                                                                                   ;
vec.cpp:470:17: error: member initializer '__vector_base' does not name a non-static data member or base class
public:vector():__vector_base(){}
                ^~~~~~~~~~~~~~~
vec.cpp:508:75: error: no member named '__end_' in 'std::__1::vector<int, class ::std::__1::allocator<int> >'
public:unsigned long size()const{return static_cast<unsigned long>((this->__end_-this->__begin_));
                                                                    ~~~~  ^
vec.cpp:508:88: error: no member named '__begin_' in 'std::__1::vector<int, class ::std::__1::allocator<int> >'
public:unsigned long size()const{return static_cast<unsigned long>((this->__end_-this->__begin_));
                                                                                 ~~~~  ^
vec.cpp:510:51: error: use of undeclared identifier '__vector_base'
public:unsigned long capacity()const{return(this->__vector_base::capacity());
                                                  ^
vec.cpp:513:55: error: no member named 'min' in namespace 'std::__1'
public:unsigned long max_size()const{return(std::__1::min<unsigned long>((allocator_traits::max_size((this->__alloc()))),(numeric_limits::max())));
                                            ~~~~~~~~~~^
vec.cpp:513:68: error: expected '(' for function-style cast or type construction
public:unsigned long max_size()const{return(std::__1::min<unsigned long>((allocator_traits::max_size((this->__alloc()))),(numeric_limits::max())));
                                                          ~~~~~~~~ ^
vec.cpp:518:14: error: no member named '__begin_' in 'std::__1::vector<int, class ::std::__1::allocator<int> >'
return(this->__begin_)[__n];
       ~~~~  ^
vec.cpp:528:49: error: no member named '__to_raw_pointer' in namespace 'std::__1'
public:int const(*data()const){return(std::__1::__to_raw_pointer(this->__begin_));
                                      ~~~~~~~~~~^
vec.cpp:528:72: error: no member named '__begin_' in 'std::__1::vector<int, class ::std::__1::allocator<int> >'
public:int const(*data()const){return(std::__1::__to_raw_pointer(this->__begin_));
                                                                 ~~~~  ^
vec.cpp:532:44: error: no member named '__end_' in 'std::__1::vector<int, class ::std::__1::allocator<int> >'
public:void push_back(int(*__x)){if((this->__end_<(this->__end_cap()))){{class::std::__1::vector<int,class::std::__1::allocator<int> >::__RAII_IncreaseAnnotator __annotator((*this),1);
                                     ~~~~  ^
vec.cpp:532:58: error: no member named '__end_cap' in 'std::__1::vector<int, class ::std::__1::allocator<int> >'
public:void push_back(int(*__x)){if((this->__end_<(this->__end_cap()))){{class::std::__1::vector<int,class::std::__1::allocator<int> >::__RAII_IncreaseAnnotator __annotator((*this),1);
                                                   ~~~~  ^
vec.cpp:533:2: error: use of undeclared identifier 'allocator_traits'
(allocator_traits::construct((this->__alloc()),(std::__1::__to_raw_pointer(this->__end_)),(std::__1::move(__x))));
 ^
vec.cpp:533:37: error: no member named '__alloc' in 'std::__1::vector<int, class ::std::__1::allocator<int> >'
(allocator_traits::construct((this->__alloc()),(std::__1::__to_raw_pointer(this->__end_)),(std::__1::move(__x))));
                              ~~~~  ^
vec.cpp:533:59: error: no member named '__to_raw_pointer' in namespace 'std::__1'
(allocator_traits::construct((this->__alloc()),(std::__1::__to_raw_pointer(this->__end_)),(std::__1::move(__x))));
                                                ~~~~~~~~~~^
vec.cpp:533:82: error: no member named '__end_' in 'std::__1::vector<int, class ::std::__1::allocator<int> >'
(allocator_traits::construct((this->__alloc()),(std::__1::__to_raw_pointer(this->__end_)),(std::__1::move(__x))));
                                                                           ~~~~  ^
vec.cpp:533:102: error: no member named 'move' in namespace 'std::__1'
(allocator_traits::construct((this->__alloc()),(std::__1::__to_raw_pointer(this->__end_)),(std::__1::move(__x))));
                                                                                           ~~~~~~~~~~^
vec.cpp:535:10: error: no member named '__end_' in 'std::__1::vector<int, class ::std::__1::allocator<int> >'
(++this->__end_);
   ~~~~  ^
vec.cpp:536:49: error: no member named 'move' in namespace 'std::__1'
};}else{(this->__push_back_slow_path((std::__1::move(__x))));};
                                      ~~~~~~~~~~^
vec.cpp:560:30: error: no member named '__throw_length_error' in 'std::__1::vector<int, class ::std::__1::allocator<int> >'
if((__new_size>__ms)){(this->__throw_length_error());};
                       ~~~~  ^
vec.cpp:563:18: error: no member named 'max' in namespace 'std::__1'
return(std::__1::max<unsigned long>((2*__cap),__new_size));
       ~~~~~~~~~~^
vec.cpp:563:31: error: expected '(' for function-style cast or type construction
return(std::__1::max<unsigned long>((2*__cap),__new_size));
                     ~~~~~~~~ ^
vec.cpp:572:123: error: no member named '__annotate_delete' in 'std::__1::vector<int, class ::std::__1::allocator<int> >'
private:void __swap_out_circular_buffer(class::std::__1::__split_buffer<int,class::std::__1::allocator<int>&>&__v){(this->__annotate_delete());
                                                                                                                    ~~~~  ^
vec.cpp:573:2: error: use of undeclared identifier 'allocator_traits'
(allocator_traits::__construct_backward((this->__alloc()),this->__begin_,this->__end_,__v.__begin_));
 ^
vec.cpp:573:48: error: no member named '__alloc' in 'std::__1::vector<int, class ::std::__1::allocator<int> >'
(allocator_traits::__construct_backward((this->__alloc()),this->__begin_,this->__end_,__v.__begin_));
                                         ~~~~  ^
vec.cpp:573:65: error: no member named '__begin_' in 'std::__1::vector<int, class ::std::__1::allocator<int> >'
(allocator_traits::__construct_backward((this->__alloc()),this->__begin_,this->__end_,__v.__begin_));
                                                          ~~~~  ^
vec.cpp:573:80: error: no member named '__end_' in 'std::__1::vector<int, class ::std::__1::allocator<int> >'
(allocator_traits::__construct_backward((this->__alloc()),this->__begin_,this->__end_,__v.__begin_));
                                                                         ~~~~  ^
vec.cpp:574:12: error: no member named 'swap' in namespace 'std::__1'
(std::__1::swap(this->__begin_,__v.__begin_));
 ~~~~~~~~~~^
vec.cpp:574:23: error: no member named '__begin_' in 'std::__1::vector<int, class ::std::__1::allocator<int> >'
(std::__1::swap(this->__begin_,__v.__begin_));
                ~~~~  ^
vec.cpp:575:12: error: no member named 'swap' in namespace 'std::__1'
(std::__1::swap(this->__end_,__v.__end_));
 ~~~~~~~~~~^
vec.cpp:575:23: error: no member named '__end_' in 'std::__1::vector<int, class ::std::__1::allocator<int> >'
(std::__1::swap(this->__end_,__v.__end_));
                ~~~~  ^
vec.cpp:576:12: error: no member named 'swap' in namespace 'std::__1'
(std::__1::swap((this->__end_cap()),(__v.__end_cap())));
 ~~~~~~~~~~^
vec.cpp:576:24: error: no member named '__end_cap' in 'std::__1::vector<int, class ::std::__1::allocator<int> >'
(std::__1::swap((this->__end_cap()),(__v.__end_cap())));
                 ~~~~  ^
vec.cpp:578:8: error: no member named '__annotate_new' in 'std::__1::vector<int, class ::std::__1::allocator<int> >'
(this->__annotate_new((this->size())));
 ~~~~  ^
vec.cpp:613:23: error: unknown type name 'nullptr_t'
namespace std{typedef nullptr_t nullptr_t;
                      ^
vec.cpp:615:31: error: expected unqualified-id
namespace std{namespace __1{::;
                              ^
vec.cpp:616:3: error: expected unqualified-id
::;
  ^
vec.cpp:617:3: error: expected unqualified-id
::;
  ^
vec.cpp:621:59: error: no template named '__non_trivially_copyable_base'
template<>class pair<unsigned long,unsigned long>:private __non_trivially_copyable_base<unsigned long,unsigned long>{public:typedef unsigned long first_type;
                                                          ^
vec.cpp:627:61: error: use of undeclared identifier 'expression'
public:template<bool _Val>using _EnableB=typename enable_if<expression,bool>::type;
                                                            ^
vec.cpp:627:79: error: expected ';' after alias declaration
public:template<bool _Val>using _EnableB=typename enable_if<expression,bool>::type;
                                                                              ^
                                                                              ;
vec.cpp:628:145: error: expected ';' at end of declaration list
public:class _CheckArgs{public:template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>static bool __enable_default()
                                                                                                                                                ^
                                                                                                                                                ;
vec.cpp:641:76: error: use of undeclared identifier 'expression'
public:template<bool _MaybeEnable>using _CheckArgsDep=typename conditional<expression,class::std::__1::pair<unsigned long,unsigned long>::_CheckArgs,class::std::__1::__check_tuple_constructor_fail>::type;
                                                                           ^
vec.cpp:641:139: error: expected ';' after alias declaration
public:template<bool _MaybeEnable>using _CheckArgsDep=typename conditional<expression,class::std::__1::pair<unsigned long,unsigned long>::_CheckArgs,class::std::__1::__check_tuple_constructor_fail>::type;
                                                                                                                                          ^
                                                                                                                                          ;
vec.cpp:643:91: error: use of undeclared identifier 'expression'
public:template<typename __xcodeml_template_type_0_0>using _CheckTLC=typename conditional<expression,class::std::__1::pair<unsigned long,unsigned long>::_CheckTupleLikeConstructor,class::std::__1::__check_tuple_constructor_fail>::type;
                                                                                          ^
vec.cpp:643:154: error: expected ';' after alias declaration
public:template<typename __xcodeml_template_type_0_0>using _CheckTLC=typename conditional<expression,class::std::__1::pair<unsigned long,unsigned long>::_CheckTupleLikeConstructor,class::std::__1::__check_tuple_constructor_fail>::type;
                                                                                                                                                         ^
                                                                                                                                                         ;
vec.cpp:644:53: error: use of undeclared identifier 'expression'
public:template<bool _Dummy=true,typename enable_if<expression,bool>::type=false>pair()
                                                    ^
vec.cpp:644:71: error: parameter declarator cannot be qualified
public:template<bool _Dummy=true,typename enable_if<expression,bool>::type=false>pair()
                                                                    ~~^
vec.cpp:644:88: error: expected ';' at end of declaration list
public:template<bool _Dummy=true,typename enable_if<expression,bool>::type=false>pair()
                                                                                       ^
                                                                                       ;
vec.cpp:665:73: error: use of undeclared identifier 'expression'
public:template<typename __xcodeml_template_type_0_0,typename enable_if<expression,bool>::type=false>class::std::__1::pair<unsigned long,unsigned long>&operator=(__xcodeml_template_type_0_0(*__p))
                                                                        ^
vec.cpp:665:91: error: parameter declarator cannot be qualified
public:template<typename __xcodeml_template_type_0_0,typename enable_if<expression,bool>::type=false>class::std::__1::pair<unsigned long,unsigned long>&operator=(__xcodeml_template_type_0_0(*__p))
                                                                                        ~~^
vec.cpp:665:197: error: expected ';' at end of declaration list
public:template<typename __xcodeml_template_type_0_0,typename enable_if<expression,bool>::type=false>class::std::__1::pair<unsigned long,unsigned long>&operator=(__xcodeml_template_type_0_0(*__p))
                                                                                                                                                                                                    ^
                                                                                                                                                                                                    ;
vec.cpp:668:150: error: no class named 'piecewise_construct_t' in namespace 'std::__1'
private:template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,unsigned long _I1,unsigned long _I2>pair(class::std::__1::piecewise_construct_t,tuple<...>,tuple<...>,__tuple_indices<...>,__tuple_indices<...>)
                                                                                                                                         ~~~~~~~~~~~~^
vec.cpp:668:178: error: expected expression
private:template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,unsigned long _I1,unsigned long _I2>pair(class::std::__1::piecewise_construct_t,tuple<...>,tuple<...>,__tuple_indices<...>,__tuple_indices<...>)
                                                                                                                                                                                 ^
vec.cpp:668:189: error: expected expression
private:template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,unsigned long _I1,unsigned long _I2>pair(class::std::__1::piecewise_construct_t,tuple<...>,tuple<...>,__tuple_indices<...>,__tuple_indices<...>)
                                                                                                                                                                                            ^
vec.cpp:668:210: error: expected expression
private:template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,unsigned long _I1,unsigned long _I2>pair(class::std::__1::piecewise_construct_t,tuple<...>,tuple<...>,__tuple_indices<...>,__tuple_indices<...>)
                                                                                                                                                                                                                 ^
vec.cpp:668:231: error: expected expression
private:template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,unsigned long _I1,unsigned long _I2>pair(class::std::__1::piecewise_construct_t,tuple<...>,tuple<...>,__tuple_indices<...>,__tuple_indices<...>)
                                                                                                                                                                                                                                      ^
vec.cpp:668:236: error: expected ';' at end of declaration list
private:template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,unsigned long _I1,unsigned long _I2>pair(class::std::__1::piecewise_construct_t,tuple<...>,tuple<...>,__tuple_indices<...>,__tuple_indices<...>)
                                                                                                                                                                                                                                           ^
                                                                                                                                                                                                                                           ;
vec.cpp:626:68: error: member initializer '__non_trivially_copyable_base' does not name a non-static data member or base class
public:pair(class::std::__1::pair<unsigned long,unsigned long>(*)):__non_trivially_copyable_base(),first(),second(){}
                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:661:151: error: no member named 'forward' in namespace 'std::__1'
public:class::std::__1::pair<unsigned long,unsigned long>&operator=(class::std::__1::pair<unsigned long,unsigned long>(*__p)){(this->first=(std::__1::forward<unsigned long>(__p.first)));
                                                                                                                                            ~~~~~~~~~~^
vec.cpp:661:168: error: expected '(' for function-style cast or type construction
public:class::std::__1::pair<unsigned long,unsigned long>&operator=(class::std::__1::pair<unsigned long,unsigned long>(*__p)){(this->first=(std::__1::forward<unsigned long>(__p.first)));
                                                                                                                                                              ~~~~~~~~ ^
vec.cpp:662:26: error: no member named 'forward' in namespace 'std::__1'
(this->second=(std::__1::forward<unsigned long>(__p.second)));
               ~~~~~~~~~~^
vec.cpp:662:43: error: expected '(' for function-style cast or type construction
(this->second=(std::__1::forward<unsigned long>(__p.second)));
                                 ~~~~~~~~ ^
vec.cpp:689:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:695:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:696:102: error: use of undeclared identifier '__v'
template<>class integral_constant<unsigned long,0>{public:constexpr static unsigned long const value=__v;
                                                                                                     ^
vec.cpp:701:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:702:102: error: use of undeclared identifier '__v'
template<>class integral_constant<unsigned long,2>{public:constexpr static unsigned long const value=__v;
                                                                                                     ^
vec.cpp:707:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:708:49: warning: integer literal is too large to be represented in a signed integer type, interpreting as unsigned [-Wimplicitly-unsigned-literal]
template<>class integral_constant<unsigned long,9223372036854775808>{public:constexpr static unsigned long const value=__v;
                                                ^
vec.cpp:708:120: error: use of undeclared identifier '__v'
template<>class integral_constant<unsigned long,9223372036854775808>{public:constexpr static unsigned long const value=__v;
                                                                                                                       ^
vec.cpp:710:65: warning: integer literal is too large to be represented in a signed integer type, interpreting as unsigned [-Wimplicitly-unsigned-literal]
public:typedef class::std::__1::integral_constant<unsigned long,9223372036854775808>type;
                                                                ^
vec.cpp:713:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:714:82: error: use of undeclared identifier '__v'
template<>class integral_constant<int,0>{public:constexpr static int const value=__v;
                                                                                 ^
vec.cpp:719:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:720:82: error: use of undeclared identifier '__v'
template<>class integral_constant<int,1>{public:constexpr static int const value=__v;
                                                                                 ^
vec.cpp:725:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:726:82: error: use of undeclared identifier '__v'
template<>class integral_constant<int,2>{public:constexpr static int const value=__v;
                                                                                 ^
vec.cpp:731:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:732:102: error: use of undeclared identifier '__v'
template<>class integral_constant<unsigned long,8>{public:constexpr static unsigned long const value=__v;
                                                                                                     ^
vec.cpp:737:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:738:103: error: use of undeclared identifier '__v'
template<>class integral_constant<unsigned long,16>{public:constexpr static unsigned long const value=__v;
                                                                                                      ^
vec.cpp:745:11: error: unknown type name '__xcodeml_template_type_0_0'
constexpr __xcodeml_template_type_0_0 const integral_constant::value;
          ^
vec.cpp:745:45: error: 'integral_constant' is not a class, namespace, or enumeration
constexpr __xcodeml_template_type_0_0 const integral_constant::value;
                                            ^
vec.cpp:675:85: note: 'integral_constant' declared here
template<typename __xcodeml_template_type_0_0,__xcodeml_template_type_0_0 __v>class integral_constant{public:constexpr static __xcodeml_template_type_0_0 const value=__v;
                                                                                    ^
vec.cpp:748:63: error: use of undeclared identifier 'expression'
template<bool _Val>using _BoolConstant=integral_constant<bool,expression>;
                                                              ^
vec.cpp:752:77: error: expected a type
public:template<typename __xcodeml_template_type_0_2>using _SelectApplyImpl=<...>;
                                                                            ^
vec.cpp:752:77: error: expected ';' after alias declaration
public:template<typename __xcodeml_template_type_0_2>using _SelectApplyImpl=<...>;
                                                                            ^
                                                                            ;
vec.cpp:761:77: error: expected a type
public:template<typename __xcodeml_template_type_0_2>using _SelectApplyImpl=<...>;
                                                                            ^
vec.cpp:761:77: error: expected ';' after alias declaration
public:template<typename __xcodeml_template_type_0_2>using _SelectApplyImpl=<...>;
                                                                            ^
                                                                            ;
vec.cpp:770:88: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>class _Not:public integral_constant<bool,expression>{}
                                                                                       ^
vec.cpp:775:65: error: expected class name
template<typename __xcodeml_template_type_0_1>class _Lazy:public<...>{}
                                                                ^
vec.cpp:778:112: error: expected ';' at end of declaration
template<typename __xcodeml_template_type_0_1>class::std::__1::integral_constant<bool,1>__sfinae_test_impl(int)
                                                                                                               ^
                                                                                                               ;
vec.cpp:779:112: error: expected ';' at end of declaration
template<typename __xcodeml_template_type_0_1>class::std::__1::integral_constant<bool,0>__sfinae_test_impl(...)
                                                                                                               ^
                                                                                                               ;
vec.cpp:780:81: error: expected expression
template<typename __xcodeml_template_type_0_1>using _IsValidExpansion=decltype ();
                                                                                ^
vec.cpp:785:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:787:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:789:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:791:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:798:45: error: no member named '__builtin_new_allocator' in namespace 'std::__1'
template<>class __identity<class::std::__1::__builtin_new_allocator::__builtin_new_deleter>{public:typedef class::std::__1::__builtin_new_allocator::__builtin_new_deleter type;
                                ~~~~~~~~~~~~^
vec.cpp:803:96: error: no member named '__builtin_new_allocator' in namespace 'std::__1'
template<>class __dependent_type<class::std::__1::__unique_ptr_deleter_sfinae<class::std::__1::__builtin_new_allocator::__builtin_new_deleter>,1>:public __unique_ptr_deleter_sfinae<class::std::__1::__builtin_new_allocator::__builtin_new_deleter>{}
                                                                                   ~~~~~~~~~~~~^
vec.cpp:803:51: error: explicit specialization of non-template class '__unique_ptr_deleter_sfinae'
template<>class __dependent_type<class::std::__1::__unique_ptr_deleter_sfinae<class::std::__1::__builtin_new_allocator::__builtin_new_deleter>,1>:public __unique_ptr_deleter_sfinae<class::std::__1::__builtin_new_allocator::__builtin_new_deleter>{}
                                                  ^
vec.cpp:803:51: error: no class named '__unique_ptr_deleter_sfinae' in namespace 'std::__1'
template<>class __dependent_type<class::std::__1::__unique_ptr_deleter_sfinae<class::std::__1::__builtin_new_allocator::__builtin_new_deleter>,1>:public __unique_ptr_deleter_sfinae<class::std::__1::__builtin_new_allocator::__builtin_new_deleter>{}
                                      ~~~~~~~~~~~~^
vec.cpp:809:86: error: explicit specialization of non-template class '__compressed_pair_elem'
template<>class conditional<0,class __compressed_pair_elem const(*),class::std::__1::__compressed_pair_elem<void(*),0,0> >{public:typedef class::std::__1::__compressed_pair_elem<void(*),0,0>type;
                                                                                     ^                     ~~~~~~~~~~~~~
vec.cpp:809:156: error: explicit specialization of non-template class '__compressed_pair_elem'
template<>class conditional<0,class __compressed_pair_elem const(*),class::std::__1::__compressed_pair_elem<void(*),0,0> >{public:typedef class::std::__1::__compressed_pair_elem<void(*),0,0>type;
                                                                                                                                                           ^                     ~~~~~~~~~~~~~
vec.cpp:810:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:811:126: error: no member named '__builtin_new_allocator' in namespace 'std::__1'
template<>class conditional<0,class __compressed_pair_elem const(*),class::std::__1::__compressed_pair_elem<class::std::__1::__builtin_new_allocator::__builtin_new_deleter,1,0> >{public:typedef class::std::__1::__compressed_pair_elem<class::std::__1::__builtin_new_allocator::__builtin_new_deleter,1,0>type;
                                                                                                                 ~~~~~~~~~~~~^
vec.cpp:811:86: error: explicit specialization of non-template class '__compressed_pair_elem'
template<>class conditional<0,class __compressed_pair_elem const(*),class::std::__1::__compressed_pair_elem<class::std::__1::__builtin_new_allocator::__builtin_new_deleter,1,0> >{public:typedef class::std::__1::__compressed_pair_elem<class::std::__1::__builtin_new_allocator::__builtin_new_deleter,1,0>type;
                                                                                     ^
vec.cpp:811:17: error: redefinition of 'conditional<false, const std::__1::__compressed_pair_elem *, std::__1::__compressed_pair_elem>'
template<>class conditional<0,class __compressed_pair_elem const(*),class::std::__1::__compressed_pair_elem<class::std::__1::__builtin_new_allocator::__builtin_new_deleter,1,0> >{public:typedef class::std::__1::__compressed_pair_elem<class::std::__1::__builtin_new_allocator::__builtin_new_deleter,1,0>type;
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:809:17: note: previous definition is here
template<>class conditional<0,class __compressed_pair_elem const(*),class::std::__1::__compressed_pair_elem<void(*),0,0> >{public:typedef class::std::__1::__compressed_pair_elem<void(*),0,0>type;
                ^
vec.cpp:813:1: error: expected unqualified-id
template<>class conditional<0,class::std::__1::__compressed_pair_elem<void(*),0,0>(*),class::std::__1::__compressed_pair_elem<void(*),0,0> >{public:typedef class::std::__1::__compressed_pair_elem<void(*),0,0>type;
^
vec.cpp:855:134: error: use of undeclared identifier 'expression'
template<bool _Bp,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>using conditional_t=typename conditional<expression,__xcodeml_template_type_0_1,__xcodeml_template_type_0_2>::type;
                                                                                                                                     ^
vec.cpp:855:203: error: expected ';' after alias declaration
template<bool _Bp,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>using conditional_t=typename conditional<expression,__xcodeml_template_type_0_1,__xcodeml_template_type_0_2>::type;
                                                                                                                                                                                                          ^
                                                                                                                                                                                                          ;
vec.cpp:858:38: error: expected ';' after class
template<>class enable_if<0,double>{}
                                     ^
                                     ;
vec.cpp:859:35: error: expected ';' after class
template<>class enable_if<0,int>{}
                                  ^
                                  ;
vec.cpp:860:41: error: expected ';' after class
template<>class enable_if<0,long long>{}
                                        ^
                                        ;
vec.cpp:861:36: error: expected ';' after class
template<>class enable_if<0,long>{}
                                   ^
                                   ;
vec.cpp:862:36: error: expected ';' after class
template<>class enable_if<0,void>{}
                                   ^
                                   ;
vec.cpp:863:36: error: expected ';' after class
template<>class enable_if<0,bool>{}
                                   ^
                                   ;
vec.cpp:865:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:872:93: error: use of undeclared identifier 'expression'
template<bool _Bp,typename __xcodeml_template_type_0_1>using enable_if_t=typename enable_if<expression,__xcodeml_template_type_0_1>::type;
                                                                                            ^
vec.cpp:872:134: error: expected ';' after alias declaration
template<bool _Bp,typename __xcodeml_template_type_0_1>using enable_if_t=typename enable_if<expression,__xcodeml_template_type_0_1>::type;
                                                                                                                                     ^
                                                                                                                                     ;
vec.cpp:875:86: error: expected ';' after class
template<>class is_same<unsigned int,unsigned int>:public integral_constant<bool,1>{}
                                                                                     ^
                                                                                     ;
vec.cpp:876:50: error: no member named '__builtin_new_allocator' in namespace 'std::__1'
template<>class is_same<void(*),class::std::__1::__builtin_new_allocator::__builtin_new_deleter>:public integral_constant<bool,0>{}
                                     ~~~~~~~~~~~~^
vec.cpp:899:121: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>using _IsSame=integral_constant<bool,expression>;
                                                                                                                        ^
vec.cpp:900:124: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>using _IsNotSame=integral_constant<bool,expression>;
                                                                                                                           ^
vec.cpp:903:124: error: expected ';' at end of declaration
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0(*addressof(__xcodeml_template_type_0_0 const(*)))
                                                                                                                           ^
                                                                                                                           ;
vec.cpp:922:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:924:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:926:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:928:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:929:98: error: explicit specialization of non-template class '__compressed_pair_elem'
template<>class remove_const<class __compressed_pair_elem const>{public:typedef class::std::__1::__compressed_pair_elem<void(*),0,0>type;
                                                                                                 ^                     ~~~~~~~~~~~~~
vec.cpp:930:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:931:17: error: redefinition of 'remove_const<const std::__1::__compressed_pair_elem>'
template<>class remove_const<class __compressed_pair_elem const>{public:typedef class::std::__1::__compressed_pair_elem<class::std::__1::__builtin_new_allocator::__builtin_new_deleter,1,0>type;
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:929:17: note: previous definition is here
template<>class remove_const<class __compressed_pair_elem const>{public:typedef class::std::__1::__compressed_pair_elem<void(*),0,0>type;
                ^
vec.cpp:933:1: error: expected unqualified-id
template<>class remove_const<class::std::__1::__compressed_pair_elem<void(*),0,0> >{public:typedef class::std::__1::__compressed_pair_elem<void(*),0,0>type;
^
vec.cpp:986:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:988:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:990:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:992:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:993:50: error: explicit specialization of non-template class '__compressed_pair_elem'
template<>class remove_volatile<class::std::__1::__compressed_pair_elem<void(*),0,0> >{public:typedef class::std::__1::__compressed_pair_elem<void(*),0,0>type;
                                                 ^                     ~~~~~~~~~~~~~
vec.cpp:993:120: error: explicit specialization of non-template class '__compressed_pair_elem'
template<>class remove_volatile<class::std::__1::__compressed_pair_elem<void(*),0,0> >{public:typedef class::std::__1::__compressed_pair_elem<void(*),0,0>type;
                                                                                                                       ^                     ~~~~~~~~~~~~~
vec.cpp:994:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:995:90: error: no member named '__builtin_new_allocator' in namespace 'std::__1'
template<>class remove_volatile<class::std::__1::__compressed_pair_elem<class::std::__1::__builtin_new_allocator::__builtin_new_deleter,1,0> >{public:typedef class::std::__1::__compressed_pair_elem<class::std::__1::__builtin_new_allocator::__builtin_new_deleter,1,0>type;
                                                                             ~~~~~~~~~~~~^
vec.cpp:995:50: error: explicit specialization of non-template class '__compressed_pair_elem'
template<>class remove_volatile<class::std::__1::__compressed_pair_elem<class::std::__1::__builtin_new_allocator::__builtin_new_deleter,1,0> >{public:typedef class::std::__1::__compressed_pair_elem<class::std::__1::__builtin_new_allocator::__builtin_new_deleter,1,0>type;
                                                 ^
vec.cpp:995:17: error: redefinition of 'remove_volatile<std::__1::__compressed_pair_elem>'
template<>class remove_volatile<class::std::__1::__compressed_pair_elem<class::std::__1::__builtin_new_allocator::__builtin_new_deleter,1,0> >{public:typedef class::std::__1::__compressed_pair_elem<class::std::__1::__builtin_new_allocator::__builtin_new_deleter,1,0>type;
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:993:17: note: previous definition is here
template<>class remove_volatile<class::std::__1::__compressed_pair_elem<void(*),0,0> >{public:typedef class::std::__1::__compressed_pair_elem<void(*),0,0>type;
                ^
vec.cpp:997:1: error: expected unqualified-id
template<>class remove_volatile<class::std::__1::__compressed_pair<void(*),class::std::__1::__builtin_new_allocator::__builtin_new_deleter> >{public:typedef class::std::__1::__compressed_pair<void(*),class::std::__1::__builtin_new_allocator::__builtin_new_deleter>type;
^
vec.cpp:1040:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:1042:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:1044:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:1046:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:1047:95: error: explicit specialization of non-template class '__compressed_pair_elem'
template<>class remove_cv<class __compressed_pair_elem const>{public:typedef class::std::__1::__compressed_pair_elem<void(*),0,0>type;
                                                                                              ^                     ~~~~~~~~~~~~~
vec.cpp:1048:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:1049:17: error: redefinition of 'remove_cv<const std::__1::__compressed_pair_elem>'
template<>class remove_cv<class __compressed_pair_elem const>{public:typedef class::std::__1::__compressed_pair_elem<class::std::__1::__builtin_new_allocator::__builtin_new_deleter,1,0>type;
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:1047:17: note: previous definition is here
template<>class remove_cv<class __compressed_pair_elem const>{public:typedef class::std::__1::__compressed_pair_elem<void(*),0,0>type;
                ^
vec.cpp:1051:1: error: expected unqualified-id
template<>class remove_cv<class::std::__1::__compressed_pair_elem<void(*),0,0> >{public:typedef class::std::__1::__compressed_pair_elem<void(*),0,0>type;
^
vec.cpp:1099:51: error: explicit specialization of non-template class '__compressed_pair_elem'
template<>class __libcpp_is_void<class::std::__1::__compressed_pair_elem<void(*),0,0> >:public integral_constant<bool,0>{}
                                                  ^                     ~~~~~~~~~~~~~
vec.cpp:1099:123: error: expected ';' after class
template<>class __libcpp_is_void<class::std::__1::__compressed_pair_elem<void(*),0,0> >:public integral_constant<bool,0>{}
                                                                                                                          ^
                                                                                                                          ;
vec.cpp:1100:91: error: no member named '__builtin_new_allocator' in namespace 'std::__1'
template<>class __libcpp_is_void<class::std::__1::__compressed_pair_elem<class::std::__1::__builtin_new_allocator::__builtin_new_deleter,1,0> >:public integral_constant<bool,0>{}
                                                                              ~~~~~~~~~~~~^
vec.cpp:1100:51: error: explicit specialization of non-template class '__compressed_pair_elem'
template<>class __libcpp_is_void<class::std::__1::__compressed_pair_elem<class::std::__1::__builtin_new_allocator::__builtin_new_deleter,1,0> >:public integral_constant<bool,0>{}
                                                  ^
vec.cpp:1100:17: error: redefinition of '__libcpp_is_void<std::__1::__compressed_pair_elem>'
template<>class __libcpp_is_void<class::std::__1::__compressed_pair_elem<class::std::__1::__builtin_new_allocator::__builtin_new_deleter,1,0> >:public integral_constant<bool,0>{}
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:1099:17: note: previous definition is here
template<>class __libcpp_is_void<class::std::__1::__compressed_pair_elem<void(*),0,0> >:public integral_constant<bool,0>{}
                ^
vec.cpp:1101:1: error: expected unqualified-id
template<>class __libcpp_is_void<class::std::__1::__compressed_pair<void(*),class::std::__1::__builtin_new_allocator::__builtin_new_deleter> >:public integral_constant<bool,0>{}
^
vec.cpp:1123:102: error: explicit specialization of non-template class '__compressed_pair_elem'
template<>class is_void<class __compressed_pair_elem const>:public __libcpp_is_void<class::std::__1::__compressed_pair_elem<void(*),0,0> >{}
                                                                                                     ^                     ~~~~~~~~~~~~~
vec.cpp:1123:141: error: expected ';' after class
template<>class is_void<class __compressed_pair_elem const>:public __libcpp_is_void<class::std::__1::__compressed_pair_elem<void(*),0,0> >{}
                                                                                                                                            ^
                                                                                                                                            ;
vec.cpp:1124:17: error: redefinition of 'is_void<const std::__1::__compressed_pair_elem>'
template<>class is_void<class __compressed_pair_elem const>:public __libcpp_is_void<class::std::__1::__compressed_pair_elem<class::std::__1::__builtin_new_allocator::__builtin_new_deleter,1,0> >{}
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:1123:17: note: previous definition is here
template<>class is_void<class __compressed_pair_elem const>:public __libcpp_is_void<class::std::__1::__compressed_pair_elem<void(*),0,0> >{}
                ^
vec.cpp:1124:142: error: no member named '__builtin_new_allocator' in namespace 'std::__1'
template<>class is_void<class __compressed_pair_elem const>:public __libcpp_is_void<class::std::__1::__compressed_pair_elem<class::std::__1::__builtin_new_allocator::__builtin_new_deleter,1,0> >{}
                                                                                                                                 ~~~~~~~~~~~~^
vec.cpp:1124:102: error: explicit specialization of non-template class '__compressed_pair_elem'
template<>class is_void<class __compressed_pair_elem const>:public __libcpp_is_void<class::std::__1::__compressed_pair_elem<class::std::__1::__builtin_new_allocator::__builtin_new_deleter,1,0> >{}
                                                                                                     ^
vec.cpp:1125:1: error: expected unqualified-id
template<>class is_void<class::std::__1::__compressed_pair_elem<void(*),0,0> >:public __libcpp_is_void<class::std::__1::__compressed_pair_elem<void(*),0,0> >{}
^
vec.cpp:1150:54: error: explicit specialization of non-template class '__compressed_pair_elem'
template<>class __is_nullptr_t_impl<class::std::__1::__compressed_pair_elem<void(*),0,0> >:public integral_constant<bool,0>{}
                                                     ^                     ~~~~~~~~~~~~~
vec.cpp:1150:126: error: expected ';' after class
template<>class __is_nullptr_t_impl<class::std::__1::__compressed_pair_elem<void(*),0,0> >:public integral_constant<bool,0>{}
                                                                                                                             ^
                                                                                                                             ;
vec.cpp:1151:94: error: no member named '__builtin_new_allocator' in namespace 'std::__1'
template<>class __is_nullptr_t_impl<class::std::__1::__compressed_pair_elem<class::std::__1::__builtin_new_allocator::__builtin_new_deleter,1,0> >:public integral_constant<bool,0>{}
                                                                                 ~~~~~~~~~~~~^
vec.cpp:1151:54: error: explicit specialization of non-template class '__compressed_pair_elem'
template<>class __is_nullptr_t_impl<class::std::__1::__compressed_pair_elem<class::std::__1::__builtin_new_allocator::__builtin_new_deleter,1,0> >:public integral_constant<bool,0>{}
                                                     ^
vec.cpp:1151:17: error: redefinition of '__is_nullptr_t_impl<std::__1::__compressed_pair_elem>'
template<>class __is_nullptr_t_impl<class::std::__1::__compressed_pair_elem<class::std::__1::__builtin_new_allocator::__builtin_new_deleter,1,0> >:public integral_constant<bool,0>{}
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:1150:17: note: previous definition is here
template<>class __is_nullptr_t_impl<class::std::__1::__compressed_pair_elem<void(*),0,0> >:public integral_constant<bool,0>{}
                ^
vec.cpp:1152:1: error: expected unqualified-id
template<>class __is_nullptr_t_impl<class::std::__1::__compressed_pair<void(*),class::std::__1::__builtin_new_allocator::__builtin_new_deleter> >:public integral_constant<bool,0>{}
^
vec.cpp:1167:112: error: explicit specialization of non-template class '__compressed_pair_elem'
template<>class __is_nullptr_t<class __compressed_pair_elem const>:public __is_nullptr_t_impl<class::std::__1::__compressed_pair_elem<void(*),0,0> >{}
                                                                                                               ^                     ~~~~~~~~~~~~~
vec.cpp:1167:151: error: expected ';' after class
template<>class __is_nullptr_t<class __compressed_pair_elem const>:public __is_nullptr_t_impl<class::std::__1::__compressed_pair_elem<void(*),0,0> >{}
                                                                                                                                                      ^
                                                                                                                                                      ;
vec.cpp:1168:17: error: redefinition of '__is_nullptr_t<const std::__1::__compressed_pair_elem>'
template<>class __is_nullptr_t<class __compressed_pair_elem const>:public __is_nullptr_t_impl<class::std::__1::__compressed_pair_elem<class::std::__1::__builtin_new_allocator::__builtin_new_deleter,1,0> >{}
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:1167:17: note: previous definition is here
template<>class __is_nullptr_t<class __compressed_pair_elem const>:public __is_nullptr_t_impl<class::std::__1::__compressed_pair_elem<void(*),0,0> >{}
                ^
vec.cpp:1168:152: error: no member named '__builtin_new_allocator' in namespace 'std::__1'
template<>class __is_nullptr_t<class __compressed_pair_elem const>:public __is_nullptr_t_impl<class::std::__1::__compressed_pair_elem<class::std::__1::__builtin_new_allocator::__builtin_new_deleter,1,0> >{}
                                                                                                                                           ~~~~~~~~~~~~^
vec.cpp:1168:112: error: explicit specialization of non-template class '__compressed_pair_elem'
template<>class __is_nullptr_t<class __compressed_pair_elem const>:public __is_nullptr_t_impl<class::std::__1::__compressed_pair_elem<class::std::__1::__builtin_new_allocator::__builtin_new_deleter,1,0> >{}
                                                                                                               ^
vec.cpp:1169:1: error: expected unqualified-id
template<>class __is_nullptr_t<class::std::__1::__compressed_pair_elem<void(*),0,0> >:public __is_nullptr_t_impl<class::std::__1::__compressed_pair_elem<void(*),0,0> >{}
^
vec.cpp:1229:98: error: expected ';' after class
template<>class is_integral<unsigned long long>:public __libcpp_is_integral<unsigned long long>{}
                                                                                                 ^
                                                                                                 ;
vec.cpp:1230:86: error: expected ';' after class
template<>class is_integral<unsigned int>:public __libcpp_is_integral<unsigned int>{}
                                                                                     ^
                                                                                     ;
vec.cpp:1231:88: error: expected ';' after class
template<>class is_integral<unsigned long>:public __libcpp_is_integral<unsigned long>{}
                                                                                       ^
                                                                                       ;
vec.cpp:1232:74: error: expected ';' after class
template<>class is_integral<double>:public __libcpp_is_integral<double>{}
                                                                         ^
                                                                         ;
vec.cpp:1237:98: error: expected ';' after class
template<>class __libcpp_is_floating_point<unsigned long long>:public integral_constant<bool,0>{}
                                                                                                 ^
                                                                                                 ;
vec.cpp:1238:92: error: expected ';' after class
template<>class __libcpp_is_floating_point<unsigned int>:public integral_constant<bool,0>{}
                                                                                           ^
                                                                                           ;
vec.cpp:1239:93: error: expected ';' after class
template<>class __libcpp_is_floating_point<unsigned long>:public integral_constant<bool,0>{}
                                                                                            ^
                                                                                            ;
vec.cpp:1250:110: error: expected ';' after class
template<>class is_floating_point<unsigned long long>:public __libcpp_is_floating_point<unsigned long long>{}
                                                                                                             ^
                                                                                                             ;
vec.cpp:1251:98: error: expected ';' after class
template<>class is_floating_point<unsigned int>:public __libcpp_is_floating_point<unsigned int>{}
                                                                                                 ^
                                                                                                 ;
vec.cpp:1252:100: error: expected ';' after class
template<>class is_floating_point<unsigned long>:public __libcpp_is_floating_point<unsigned long>{}
                                                                                                   ^
                                                                                                   ;
vec.cpp:1257:96: error: expected ';' after class
template<>class is_array<class __compressed_pair_elem const>:public integral_constant<bool,0>{}
                                                                                               ^
                                                                                               ;
vec.cpp:1258:17: error: redefinition of 'is_array<const std::__1::__compressed_pair_elem>'
template<>class is_array<class __compressed_pair_elem const>:public integral_constant<bool,0>{}
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:1257:17: note: previous definition is here
template<>class is_array<class __compressed_pair_elem const>:public integral_constant<bool,0>{}
                ^
vec.cpp:1259:1: error: expected unqualified-id
template<>class is_array<class::std::__1::__compressed_pair_elem<void(*),0,0> >:public integral_constant<bool,0>{}
^
vec.cpp:1276:53: error: class template partial specialization does not specialize any template argument; to define the primary template, remove the template argument list
template<typename __xcodeml_template_type_0_0>class is_array<__xcodeml_template_type_0_0>:public integral_constant<bool,1>{}
                                                    ^       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:1276:53: error: redefinition of 'is_array'
vec.cpp:1255:53: note: previous definition is here
template<typename __xcodeml_template_type_0_0>class is_array:public integral_constant<bool,0>{}
                                                    ^
vec.cpp:1278:71: error: class template partial specialization does not specialize any template argument; to define the primary template, remove the template argument list
template<typename __xcodeml_template_type_0_0,unsigned long _Np>class is_array<__xcodeml_template_type_0_0>:public integral_constant<bool,1>{}
                                                                      ^       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:1278:1: error: too many template parameters in template redeclaration
template<typename __xcodeml_template_type_0_0,unsigned long _Np>class is_array<__xcodeml_template_type_0_0>:public integral_constant<bool,1>{}
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:1255:1: note: previous template declaration is here
template<typename __xcodeml_template_type_0_0>class is_array:public integral_constant<bool,0>{}
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:1282:54: error: no member named '__builtin_new_allocator' in namespace 'std::__1'
template<>class __libcpp_is_pointer<class::std::__1::__builtin_new_allocator::__builtin_new_deleter>:public integral_constant<bool,0>{}
                                         ~~~~~~~~~~~~^
vec.cpp:1289:66: error: no member named '__builtin_new_allocator' in namespace 'std::__1'
template<>class __libcpp_remove_objc_qualifiers<class::std::__1::__builtin_new_allocator::__builtin_new_deleter>{public:typedef class::std::__1::__builtin_new_allocator::__builtin_new_deleter type;
                                                     ~~~~~~~~~~~~^
vec.cpp:1294:45: error: no member named '__builtin_new_allocator' in namespace 'std::__1'
template<>class is_pointer<class::std::__1::__builtin_new_allocator::__builtin_new_deleter>:public __libcpp_is_pointer<class::std::__1::__builtin_new_allocator::__builtin_new_deleter>{}
                                ~~~~~~~~~~~~^
vec.cpp:1303:54: error: no member named '__builtin_new_allocator' in namespace 'std::__1'
template<>class is_rvalue_reference<class::std::__1::__builtin_new_allocator::__builtin_new_deleter>:public integral_constant<bool,0>{}
                                         ~~~~~~~~~~~~^
vec.cpp:1309:47: error: no member named '__builtin_new_allocator' in namespace 'std::__1'
template<>class is_reference<class::std::__1::__builtin_new_allocator::__builtin_new_deleter>:public integral_constant<bool,0>{}
                                  ~~~~~~~~~~~~^
vec.cpp:1332:92: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>class is_union:public integral_constant<bool,expression>{}
                                                                                           ^
vec.cpp:1334:96: error: expected ';' after class
template<>class is_union<class __compressed_pair_elem const>:public integral_constant<bool,0>{}
                                                                                               ^
                                                                                               ;
vec.cpp:1335:17: error: redefinition of 'is_union<const std::__1::__compressed_pair_elem>'
template<>class is_union<class __compressed_pair_elem const>:public integral_constant<bool,0>{}
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:1334:17: note: previous definition is here
template<>class is_union<class __compressed_pair_elem const>:public integral_constant<bool,0>{}
                ^
vec.cpp:1336:1: error: expected unqualified-id
template<>class is_union<class::std::__1::__compressed_pair_elem<void(*),0,0> >:public integral_constant<bool,0>{}
^
vec.cpp:1353:92: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>class is_class:public integral_constant<bool,expression>{}
                                                                                           ^
vec.cpp:1355:96: error: expected ';' after class
template<>class is_class<class __compressed_pair_elem const>:public integral_constant<bool,1>{}
                                                                                               ^
                                                                                               ;
vec.cpp:1356:17: error: redefinition of 'is_class<const std::__1::__compressed_pair_elem>'
template<>class is_class<class __compressed_pair_elem const>:public integral_constant<bool,1>{}
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:1355:17: note: previous definition is here
template<>class is_class<class __compressed_pair_elem const>:public integral_constant<bool,1>{}
                ^
vec.cpp:1357:1: error: expected unqualified-id
template<>class is_class<class::std::__1::__compressed_pair_elem<void(*),0,0> >:public integral_constant<bool,1>{}
^
vec.cpp:1376:90: error: expected ';' at end of declaration
template<typename __xcodeml_template_type_0_0>char __test(__xcodeml_template_type_0_0(*))
                                                                                         ^
                                                                                         ;
vec.cpp:1377:115: error: expected ';' at end of declaration
template<typename __xcodeml_template_type_0_0>char __test(class::std::__1::__libcpp_is_function_imp::__dummy_type)
                                                                                                                  ^
                                                                                                                  ;
vec.cpp:1378:81: error: expected ';' at end of declaration
template<typename __xcodeml_template_type_0_0>class::std::__1::__two __test(...)
                                                                                ^
                                                                                ;
vec.cpp:1379:35: error: no function template matches function template specialization '__test'
template <>class::std::__1::__two __test(...)
                                  ^
vec.cpp:1378:70: note: candidate template ignored: couldn't infer template argument '__xcodeml_template_type_0_0'
template<typename __xcodeml_template_type_0_0>class::std::__1::__two __test(...)
                                                                     ^
vec.cpp:1376:52: note: candidate template ignored: could not match 'char (__xcodeml_template_type_0_0 (*))' against 'class ::std::__1::__two (...)'
template<typename __xcodeml_template_type_0_0>char __test(__xcodeml_template_type_0_0(*))
                                                   ^
vec.cpp:1377:52: note: candidate template ignored: could not match 'char (class ::std::__1::__libcpp_is_function_imp::__dummy_type)' against 'class ::std::__1::__two (...)'
template<typename __xcodeml_template_type_0_0>char __test(class::std::__1::__libcpp_is_function_imp::__dummy_type)
                                                   ^
vec.cpp:1379:46: error: expected ';' at end of declaration
template <>class::std::__1::__two __test(...)
                                             ^
                                             ;
vec.cpp:1380:35: error: no function template matches function template specialization '__test'
template <>class::std::__1::__two __test(...)
                                  ^
vec.cpp:1378:70: note: candidate template ignored: couldn't infer template argument '__xcodeml_template_type_0_0'
template<typename __xcodeml_template_type_0_0>class::std::__1::__two __test(...)
                                                                     ^
vec.cpp:1376:52: note: candidate template ignored: could not match 'char (__xcodeml_template_type_0_0 (*))' against 'class ::std::__1::__two (...)'
template<typename __xcodeml_template_type_0_0>char __test(__xcodeml_template_type_0_0(*))
                                                   ^
vec.cpp:1377:52: note: candidate template ignored: could not match 'char (class ::std::__1::__libcpp_is_function_imp::__dummy_type)' against 'class ::std::__1::__two (...)'
template<typename __xcodeml_template_type_0_0>char __test(class::std::__1::__libcpp_is_function_imp::__dummy_type)
                                                   ^
vec.cpp:1380:46: error: expected ';' at end of declaration
template <>class::std::__1::__two __test(...)
                                             ^
                                             ;
vec.cpp:1381:88: error: expected ';' at end of declaration
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0&__source(int)
                                                                                       ^
                                                                                       ;
vec.cpp:1382:39: error: expected ';' at end of declaration
template <>unsigned long&__source(int)
                                      ^
                                      ;
vec.cpp:1383:33: error: expected ';' at end of declaration
template <>void(*&__source(int))
                                ^
                                ;
vec.cpp:1384:116: error: expected ';' at end of declaration
template<typename __xcodeml_template_type_0_0>class::std::__1::__libcpp_is_function_imp::__dummy_type __source(...)
                                                                                                                   ^
                                                                                                                   ;
vec.cpp:1385:68: error: no function template matches function template specialization '__source'
template <>class::std::__1::__libcpp_is_function_imp::__dummy_type __source(...)
                                                                   ^
vec.cpp:1384:103: note: candidate template ignored: couldn't infer template argument '__xcodeml_template_type_0_0'
template<typename __xcodeml_template_type_0_0>class::std::__1::__libcpp_is_function_imp::__dummy_type __source(...)
                                                                                                      ^
vec.cpp:1381:75: note: candidate template ignored: could not match '__xcodeml_template_type_0_0 &(int)' against 'class ::std::__1::__libcpp_is_function_imp::__dummy_type (...)'
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0&__source(int)
                                                                          ^
vec.cpp:1385:81: error: expected ';' at end of declaration
template <>class::std::__1::__libcpp_is_function_imp::__dummy_type __source(...)
                                                                                ^
                                                                                ;
vec.cpp:1386:68: error: no function template matches function template specialization '__source'
template <>class::std::__1::__libcpp_is_function_imp::__dummy_type __source(...)
                                                                   ^
vec.cpp:1384:103: note: candidate template ignored: couldn't infer template argument '__xcodeml_template_type_0_0'
template<typename __xcodeml_template_type_0_0>class::std::__1::__libcpp_is_function_imp::__dummy_type __source(...)
                                                                                                      ^
vec.cpp:1381:75: note: candidate template ignored: could not match '__xcodeml_template_type_0_0 &(int)' against 'class ::std::__1::__libcpp_is_function_imp::__dummy_type (...)'
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0&__source(int)
                                                                          ^
vec.cpp:1386:81: error: expected ';' at end of declaration
template <>class::std::__1::__libcpp_is_function_imp::__dummy_type __source(...)
                                                                                ^
                                                                                ;
vec.cpp:1388:355: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0,bool=((((is_class<__xcodeml_template_type_0_0>::value||is_union<__xcodeml_template_type_0_0>::value)||is_void<__xcodeml_template_type_0_0>::value)||is_reference<__xcodeml_template_type_0_0>::value)||__is_nullptr_t<__xcodeml_template_type_0_0>::value)>class __libcpp_is_function:public integral_constant<bool,expression>{}
                                                                                                                                                                                                                                                                                                                                                                  ^
vec.cpp:1390:110: error: expected ';' after class
template<>class __libcpp_is_function<class __compressed_pair_elem const,1>:public integral_constant<bool,0>{}
                                                                                                             ^
                                                                                                             ;
vec.cpp:1391:17: error: redefinition of '__libcpp_is_function<const std::__1::__compressed_pair_elem, true>'
template<>class __libcpp_is_function<class __compressed_pair_elem const,1>:public integral_constant<bool,0>{}
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:1390:17: note: previous definition is here
template<>class __libcpp_is_function<class __compressed_pair_elem const,1>:public integral_constant<bool,0>{}
                ^
vec.cpp:1392:1: error: expected unqualified-id
template<>class __libcpp_is_function<class::std::__1::__compressed_pair_elem<void(*),0,0>,1>:public integral_constant<bool,0>{}
^
vec.cpp:1411:121: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>class is_function:public __libcpp_is_function<__xcodeml_template_type_0_0,expression>{}
                                                                                                                        ^
vec.cpp:1413:132: error: expected ';' after class
template<>class is_function<class __compressed_pair_elem const>:public __libcpp_is_function<class __compressed_pair_elem const,1>{}
                                                                                                                                   ^
                                                                                                                                   ;
vec.cpp:1414:17: error: redefinition of 'is_function<const std::__1::__compressed_pair_elem>'
template<>class is_function<class __compressed_pair_elem const>:public __libcpp_is_function<class __compressed_pair_elem const,1>{}
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:1413:17: note: previous definition is here
template<>class is_function<class __compressed_pair_elem const>:public __libcpp_is_function<class __compressed_pair_elem const,1>{}
                ^
vec.cpp:1415:1: error: expected unqualified-id
template<>class is_function<class::std::__1::__compressed_pair_elem<void(*),0,0> >:public __libcpp_is_function<class::std::__1::__compressed_pair_elem<void(*),0,0>,1>{}
^
vec.cpp:1438:90: error: class template partial specialization contains a template parameter that cannot be deduced; this partial specialization will never be used [-Wunusable-partial-specialization]
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __libcpp_is_member_function_pointer<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)>:public is_function<__xcodeml_template_type_0_0>{}
                                                                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:1438:56: note: non-deducible template parameter '__xcodeml_template_type_0_1'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __libcpp_is_member_function_pointer<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)>:public is_function<__xcodeml_template_type_0_0>{}
                                                       ^
vec.cpp:1440:90: error: expected class name
template<typename __xcodeml_template_type_0_0>class is_member_function_pointer:public/**/{}
                                                                                         ^
vec.cpp:1446:90: error: class template partial specialization contains a template parameter that cannot be deduced; this partial specialization will never be used [-Wunusable-partial-specialization]
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __libcpp_is_member_pointer<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)>:public integral_constant<bool,1>{}
                                                                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:1446:56: note: non-deducible template parameter '__xcodeml_template_type_0_1'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __libcpp_is_member_pointer<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)>:public integral_constant<bool,1>{}
                                                       ^
vec.cpp:1451:108: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>class is_member_object_pointer:public integral_constant<bool,expression>{}
                                                                                                           ^
vec.cpp:1454:91: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>class is_enum:public integral_constant<bool,expression>{}
                                                                                          ^
vec.cpp:1456:30: error: ISO C++ forbids forward references to 'enum' types
template<>class is_enum<enum __legacy_memory_order>:public integral_constant<bool,1>{}
                             ^
vec.cpp:1456:87: error: expected ';' after class
template<>class is_enum<enum __legacy_memory_order>:public integral_constant<bool,1>{}
                                                                                      ^
                                                                                      ;
vec.cpp:1457:30: error: ISO C++ forbids forward references to 'enum' types
template<>class is_enum<enum memory_order>:public integral_constant<bool,1>{}
                             ^
vec.cpp:1459:97: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>class is_arithmetic:public integral_constant<bool,expression>{}
                                                                                                ^
vec.cpp:1461:85: error: expected ';' after class
template<>class is_arithmetic<unsigned long long>:public integral_constant<bool,1>{}
                                                                                    ^
                                                                                    ;
vec.cpp:1462:79: error: expected ';' after class
template<>class is_arithmetic<unsigned int>:public integral_constant<bool,1>{}
                                                                              ^
                                                                              ;
vec.cpp:1463:80: error: expected ';' after class
template<>class is_arithmetic<unsigned long>:public integral_constant<bool,1>{}
                                                                               ^
                                                                               ;
vec.cpp:1466:98: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>class is_fundamental:public integral_constant<bool,expression>{}
                                                                                                 ^
vec.cpp:1469:93: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>class is_scalar:public integral_constant<bool,expression>{}
                                                                                            ^
vec.cpp:1474:93: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>class is_object:public integral_constant<bool,expression>{}
                                                                                            ^
vec.cpp:1477:95: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>class is_compound:public integral_constant<bool,expression>{}
                                                                                              ^
vec.cpp:1480:130: error: expected ';' at end of declaration list
class __is_referenceable_impl{public:template<typename __xcodeml_template_type_0_0>static __xcodeml_template_type_0_0&__test(int)
                                                                                                                                 ^
                                                                                                                                 ;
vec.cpp:1529:102: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>class __is_referenceable:public integral_constant<bool,expression>{}
                                                                                                     ^
vec.cpp:1531:76: error: expected ';' after class
template<>class __is_referenceable<void>:public integral_constant<bool,0>{}
                                                                           ^
                                                                           ;
vec.cpp:1532:106: error: expected ';' after class
template<>class __is_referenceable<class __compressed_pair_elem const>:public integral_constant<bool,1>{}
                                                                                                         ^
                                                                                                         ;
vec.cpp:1533:17: error: redefinition of '__is_referenceable<const std::__1::__compressed_pair_elem>'
template<>class __is_referenceable<class __compressed_pair_elem const>:public integral_constant<bool,1>{}
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:1532:17: note: previous definition is here
template<>class __is_referenceable<class __compressed_pair_elem const>:public integral_constant<bool,1>{}
                ^
vec.cpp:1534:1: error: expected unqualified-id
template<>class __is_referenceable<class::std::__1::__compressed_pair_elem<void(*),0,0> >:public integral_constant<bool,1>{}
^
vec.cpp:1564:127: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>class add_const{public:typedef typename __add_const<__xcodeml_template_type_0_0,expression>::type type;
                                                                                                                              ^
vec.cpp:1564:140: error: non-friend class member 'type' cannot have a qualified name
template<typename __xcodeml_template_type_0_0>class add_const{public:typedef typename __add_const<__xcodeml_template_type_0_0,expression>::type type;
                                                                                                                                         ~~^
vec.cpp:1564:140: error: typedef declarator cannot be qualified
template<typename __xcodeml_template_type_0_0>class add_const{public:typedef typename __add_const<__xcodeml_template_type_0_0,expression>::type type;
                                                                                                                                         ~~^
vec.cpp:1564:144: error: expected ';' at end of declaration list
template<typename __xcodeml_template_type_0_0>class add_const{public:typedef typename __add_const<__xcodeml_template_type_0_0,expression>::type type;
                                                                                                                                               ^
                                                                                                                                               ;
vec.cpp:1578:133: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>class add_volatile{public:typedef typename __add_volatile<__xcodeml_template_type_0_0,expression>::type type;
                                                                                                                                    ^
vec.cpp:1578:146: error: non-friend class member 'type' cannot have a qualified name
template<typename __xcodeml_template_type_0_0>class add_volatile{public:typedef typename __add_volatile<__xcodeml_template_type_0_0,expression>::type type;
                                                                                                                                               ~~^
vec.cpp:1578:146: error: typedef declarator cannot be qualified
template<typename __xcodeml_template_type_0_0>class add_volatile{public:typedef typename __add_volatile<__xcodeml_template_type_0_0,expression>::type type;
                                                                                                                                               ~~^
vec.cpp:1578:150: error: expected ';' at end of declaration list
template<typename __xcodeml_template_type_0_0>class add_volatile{public:typedef typename __add_volatile<__xcodeml_template_type_0_0,expression>::type type;
                                                                                                                                                     ^
                                                                                                                                                     ;
vec.cpp:1591:51: error: no member named '__builtin_new_allocator' in namespace 'std::__1'
template<>class remove_reference<class::std::__1::__builtin_new_allocator::__builtin_new_deleter>{public:typedef class::std::__1::__builtin_new_allocator::__builtin_new_deleter type;
                                      ~~~~~~~~~~~~^
vec.cpp:1601:82: error: expected unqualified-id
template<>class remove_reference<class::std::__1::__compressed_pair_elem<void(*),0,0> >{public:typedef class::std::__1::__compressed_pair_elem<void(*),0,0>type;
                                                                                 ^
vec.cpp:1667:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:1669:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:1671:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:1673:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:1680:154: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>class add_lvalue_reference{public:typedef typename __add_lvalue_reference_impl<__xcodeml_template_type_0_0,expression>::type type;
                                                                                                                                                         ^
vec.cpp:1680:167: error: non-friend class member 'type' cannot have a qualified name
template<typename __xcodeml_template_type_0_0>class add_lvalue_reference{public:typedef typename __add_lvalue_reference_impl<__xcodeml_template_type_0_0,expression>::type type;
                                                                                                                                                                    ~~^
vec.cpp:1680:167: error: typedef declarator cannot be qualified
template<typename __xcodeml_template_type_0_0>class add_lvalue_reference{public:typedef typename __add_lvalue_reference_impl<__xcodeml_template_type_0_0,expression>::type type;
                                                                                                                                                                    ~~^
vec.cpp:1680:171: error: expected ';' at end of declaration list
template<typename __xcodeml_template_type_0_0>class add_lvalue_reference{public:typedef typename __add_lvalue_reference_impl<__xcodeml_template_type_0_0,expression>::type type;
                                                                                                                                                                          ^
                                                                                                                                                                          ;
vec.cpp:1684:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:1686:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:1688:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:1690:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:1699:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:1701:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:1708:154: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>class add_rvalue_reference{public:typedef typename __add_rvalue_reference_impl<__xcodeml_template_type_0_0,expression>::type type;
                                                                                                                                                         ^
vec.cpp:1708:167: error: non-friend class member 'type' cannot have a qualified name
template<typename __xcodeml_template_type_0_0>class add_rvalue_reference{public:typedef typename __add_rvalue_reference_impl<__xcodeml_template_type_0_0,expression>::type type;
                                                                                                                                                                    ~~^
vec.cpp:1708:167: error: typedef declarator cannot be qualified
template<typename __xcodeml_template_type_0_0>class add_rvalue_reference{public:typedef typename __add_rvalue_reference_impl<__xcodeml_template_type_0_0,expression>::type type;
                                                                                                                                                                    ~~^
vec.cpp:1708:171: error: expected ';' at end of declaration list
template<typename __xcodeml_template_type_0_0>class add_rvalue_reference{public:typedef typename __add_rvalue_reference_impl<__xcodeml_template_type_0_0,expression>::type type;
                                                                                                                                                                          ^
                                                                                                                                                                          ;
vec.cpp:1712:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:1714:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:1719:91: error: expected ';' at end of declaration
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0(*__declval(int))
                                                                                          ^
                                                                                          ;
vec.cpp:1720:26: error: no function template matches function template specialization '__declval'
template <>unsigned long&__declval(int)
                         ^
vec.cpp:1719:76: note: candidate template ignored: could not match 'type-parameter-0-0 *' against 'unsigned long &'
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0(*__declval(int))
                                                                           ^
vec.cpp:1720:40: error: expected ';' at end of declaration
template <>unsigned long&__declval(int)
                                       ^
                                       ;
vec.cpp:1721:32: error: no function template matches function template specialization '__declval'
template <>unsigned long const&__declval(int)
                               ^
vec.cpp:1719:76: note: candidate template ignored: could not match 'type-parameter-0-0 *' against 'const unsigned long &'
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0(*__declval(int))
                                                                           ^
vec.cpp:1721:46: error: expected ';' at end of declaration
template <>unsigned long const&__declval(int)
                                             ^
                                             ;
vec.cpp:1722:42: error: expected ';' at end of declaration
template <>unsigned long(*__declval(int))
                                         ^
                                         ;
vec.cpp:1723:60: error: expected ';' at end of declaration
template <>class::std::__1::allocator<int>(*__declval(int))
                                                           ^
                                                           ;
vec.cpp:1724:35: error: expected ';' at end of declaration
template <>int(*(*__declval(int)))
                                  ^
                                  ;
vec.cpp:1725:32: error: expected ';' at end of declaration
template <>int(*__declval(int))
                               ^
                               ;
vec.cpp:1726:18: error: template 'allocator' cannot be referenced with a class specifier
template <>class allocator const&__declval(int)
                 ^
vec.cpp:349:53: note: declared here
template<typename __xcodeml_template_type_0_0>class allocator;
                                                    ^
vec.cpp:1726:48: error: expected ';' at end of declaration
template <>class allocator const&__declval(int)
                                               ^
                                               ;
vec.cpp:1727:18: error: no function template matches function template specialization '__declval'
template <>int(*&__declval(int))
                 ^
vec.cpp:1719:76: note: candidate template ignored: could not match 'type-parameter-0-0 *' against 'int *&'
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0(*__declval(int))
                                                                           ^
vec.cpp:1727:33: error: expected ';' at end of declaration
template <>int(*&__declval(int))
                                ^
                                ;
vec.cpp:1728:35: error: expected ';' at end of declaration
template <>int(*(*__declval(int)))
                                  ^
                                  ;
vec.cpp:1729:90: error: expected ';' at end of declaration
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0 __declval(long)
                                                                                         ^
                                                                                         ;
vec.cpp:1730:41: error: expected ';' at end of declaration
template <>unsigned long&__declval(long)
                                        ^
                                        ;
vec.cpp:1731:47: error: expected ';' at end of declaration
template <>unsigned long const&__declval(long)
                                              ^
                                              ;
vec.cpp:1732:43: error: expected ';' at end of declaration
template <>unsigned long(*__declval(long))
                                          ^
                                          ;
vec.cpp:1733:58: error: expected ';' at end of declaration
template <>class::std::__1::allocator<int>__declval(long)
                                                         ^
                                                         ;
vec.cpp:1734:33: error: expected ';' at end of declaration
template <>int(*__declval(long))
                                ^
                                ;
vec.cpp:1735:31: error: expected ';' at end of declaration
template <>int __declval(long)
                              ^
                              ;
vec.cpp:1736:18: error: template 'allocator' cannot be referenced with a class specifier
template <>class allocator const&__declval(long)
                 ^
vec.cpp:349:53: note: declared here
template<typename __xcodeml_template_type_0_0>class allocator;
                                                    ^
vec.cpp:1736:49: error: expected ';' at end of declaration
template <>class allocator const&__declval(long)
                                                ^
                                                ;
vec.cpp:1737:34: error: expected ';' at end of declaration
template <>int(*&__declval(long))
                                 ^
                                 ;
vec.cpp:1738:36: error: expected ';' at end of declaration
template <>int(*(*__declval(long)))
                                   ^
                                   ;
vec.cpp:1739:57: error: use of undeclared identifier 'declval'
template<typename __xcodeml_template_type_0_0>decltype (declval())
                                                        ^
vec.cpp:1740:1: error: expected unqualified-id
template <>unsigned long&declval()
^
vec.cpp:1752:17: error: explicit specialization of undeclared template class '__uncvref'
template<>class __uncvref<class::std::__1::pair<unsigned long,unsigned long> >{public:typedef class::std::__1::pair<unsigned long,unsigned long>type;
                ^        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:1759:74: error: expected a qualified name after 'typename'
template<typename __xcodeml_template_type_0_0>using __uncvref_t=typename __uncvref<__xcodeml_template_type_0_0>::type;
                                                                         ^
vec.cpp:1759:83: error: expected ';' after alias declaration
template<typename __xcodeml_template_type_0_0>using __uncvref_t=typename __uncvref<__xcodeml_template_type_0_0>::type;
                                                                                  ^
                                                                                  ;
vec.cpp:1760:138: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __is_same_uncvref:public integral_constant<bool,expression>{}
                                                                                                                                         ^
vec.cpp:1783:132: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0,bool=(__is_referenceable<__xcodeml_template_type_0_0>::value||integral_constant<bool,expression>::value)>class __add_pointer_impl{public:typedef typename remove_reference<__xcodeml_template_type_0_0>::type(*type);
                                                                                                                                   ^
vec.cpp:1787:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:1788:17: error: redefinition of '__add_pointer_impl<const std::__1::__compressed_pair_elem, true>'
template<>class __add_pointer_impl<class __compressed_pair_elem const,1>{public:typedef class __compressed_pair_elem const(*type);
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:1786:17: note: previous definition is here
template<>class __add_pointer_impl<class __compressed_pair_elem const,1>{public:typedef class __compressed_pair_elem const(*type);
                ^
vec.cpp:1790:1: error: expected unqualified-id
template<>class __add_pointer_impl<class::std::__1::__compressed_pair_elem<void(*),0,0>,1>{public:typedef class::std::__1::__compressed_pair_elem<void(*),0,0>(*type);
^
vec.cpp:1824:136: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>class add_pointer{public:typedef typename __add_pointer_impl<__xcodeml_template_type_0_0,expression>::type type;
                                                                                                                                       ^
vec.cpp:1824:149: error: non-friend class member 'type' cannot have a qualified name
template<typename __xcodeml_template_type_0_0>class add_pointer{public:typedef typename __add_pointer_impl<__xcodeml_template_type_0_0,expression>::type type;
                                                                                                                                                  ~~^
vec.cpp:1824:149: error: typedef declarator cannot be qualified
template<typename __xcodeml_template_type_0_0>class add_pointer{public:typedef typename __add_pointer_impl<__xcodeml_template_type_0_0,expression>::type type;
                                                                                                                                                  ~~^
vec.cpp:1824:153: error: expected ';' at end of declaration list
template<typename __xcodeml_template_type_0_0>class add_pointer{public:typedef typename __add_pointer_impl<__xcodeml_template_type_0_0,expression>::type type;
                                                                                                                                                        ^
                                                                                                                                                        ;
vec.cpp:1828:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:1829:17: error: redefinition of 'add_pointer<const std::__1::__compressed_pair_elem>'
template<>class add_pointer<class __compressed_pair_elem const>{public:typedef class __compressed_pair_elem const(*type);
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:1827:17: note: previous definition is here
template<>class add_pointer<class __compressed_pair_elem const>{public:typedef class __compressed_pair_elem const(*type);
                ^
vec.cpp:1831:1: error: expected unqualified-id
template<>class add_pointer<class::std::__1::__compressed_pair_elem<void(*),0,0> >{public:typedef class::std::__1::__compressed_pair_elem<void(*),0,0>(*type);
^
vec.cpp:1863:160: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0,bool=is_integral<__xcodeml_template_type_0_0>::value>class __libcpp_is_signed_impl:public integral_constant<bool,expression>{}
                                                                                                                                                               ^
vec.cpp:1865:97: error: expected ';' after class
template<>class __libcpp_is_signed_impl<unsigned long long,1>:public integral_constant<bool,0>{}
                                                                                                ^
                                                                                                ;
vec.cpp:1866:91: error: expected ';' after class
template<>class __libcpp_is_signed_impl<unsigned int,1>:public integral_constant<bool,0>{}
                                                                                          ^
                                                                                          ;
vec.cpp:1867:92: error: expected ';' after class
template<>class __libcpp_is_signed_impl<unsigned long,1>:public integral_constant<bool,0>{}
                                                                                           ^
                                                                                           ;
vec.cpp:1872:186: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0,bool=is_arithmetic<__xcodeml_template_type_0_0>::value>class __libcpp_is_signed:public __libcpp_is_signed_impl<__xcodeml_template_type_0_0,expression>{}
                                                                                                                                                                                         ^
vec.cpp:1874:112: error: expected ';' after class
template<>class __libcpp_is_signed<unsigned long long,1>:public __libcpp_is_signed_impl<unsigned long long,1>{}
                                                                                                               ^
                                                                                                               ;
vec.cpp:1875:100: error: expected ';' after class
template<>class __libcpp_is_signed<unsigned int,1>:public __libcpp_is_signed_impl<unsigned int,1>{}
                                                                                                   ^
                                                                                                   ;
vec.cpp:1876:102: error: expected ';' after class
template<>class __libcpp_is_signed<unsigned long,1>:public __libcpp_is_signed_impl<unsigned long,1>{}
                                                                                                     ^
                                                                                                     ;
vec.cpp:1881:117: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>class is_signed:public __libcpp_is_signed<__xcodeml_template_type_0_0,expression>{}
                                                                                                                    ^
vec.cpp:1883:96: error: expected ';' after class
template<>class is_signed<unsigned long long>:public __libcpp_is_signed<unsigned long long,1>{}
                                                                                               ^
                                                                                               ;
vec.cpp:1884:84: error: expected ';' after class
template<>class is_signed<unsigned int>:public __libcpp_is_signed<unsigned int,1>{}
                                                                                   ^
                                                                                   ;
vec.cpp:1885:86: error: expected ';' after class
template<>class is_signed<unsigned long>:public __libcpp_is_signed<unsigned long,1>{}
                                                                                     ^
                                                                                     ;
vec.cpp:1888:162: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0,bool=is_integral<__xcodeml_template_type_0_0>::value>class __libcpp_is_unsigned_impl:public integral_constant<bool,expression>{}
                                                                                                                                                                 ^
vec.cpp:1893:190: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0,bool=is_arithmetic<__xcodeml_template_type_0_0>::value>class __libcpp_is_unsigned:public __libcpp_is_unsigned_impl<__xcodeml_template_type_0_0,expression>{}
                                                                                                                                                                                             ^
vec.cpp:1898:121: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>class is_unsigned:public __libcpp_is_unsigned<__xcodeml_template_type_0_0,expression>{}
                                                                                                                        ^
vec.cpp:1904:53: error: class template partial specialization does not specialize any template argument; to define the primary template, remove the template argument list
template<typename __xcodeml_template_type_0_0>class rank<__xcodeml_template_type_0_0>:public integral_constant<unsigned long,expression>{}
                                                    ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:1904:53: error: redefinition of 'rank'
vec.cpp:1901:53: note: previous definition is here
template<typename __xcodeml_template_type_0_0>class rank:public integral_constant<unsigned long,0>{}
                                                    ^
vec.cpp:1904:126: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>class rank<__xcodeml_template_type_0_0>:public integral_constant<unsigned long,expression>{}
                                                                                                                             ^
vec.cpp:1906:71: error: class template partial specialization does not specialize any template argument; to define the primary template, remove the template argument list
template<typename __xcodeml_template_type_0_0,unsigned long _Np>class rank<__xcodeml_template_type_0_0>:public integral_constant<unsigned long,expression>{}
                                                                      ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:1906:1: error: too many template parameters in template redeclaration
template<typename __xcodeml_template_type_0_0,unsigned long _Np>class rank<__xcodeml_template_type_0_0>:public integral_constant<unsigned long,expression>{}
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:1901:1: note: previous template declaration is here
template<typename __xcodeml_template_type_0_0>class rank:public integral_constant<unsigned long,0>{}
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:1906:144: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0,unsigned long _Np>class rank<__xcodeml_template_type_0_0>:public integral_constant<unsigned long,expression>{}
                                                                                                                                               ^
vec.cpp:1913:105: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0,unsigned int _Ip>class extent<__xcodeml_template_type_0_0,expression>:public integral_constant<unsigned long,expression>{}
                                                                                                        ^
vec.cpp:1915:71: error: class template partial specialization contains a template parameter that cannot be deduced; this partial specialization will never be used [-Wunusable-partial-specialization]
template<typename __xcodeml_template_type_0_0,unsigned long _Np>class extent<__xcodeml_template_type_0_0,0>:public integral_constant<unsigned long,expression>{}
                                                                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:1915:61: note: non-deducible template parameter '_Np'
template<typename __xcodeml_template_type_0_0,unsigned long _Np>class extent<__xcodeml_template_type_0_0,0>:public integral_constant<unsigned long,expression>{}
                                                            ^
vec.cpp:1915:71: error: redefinition of 'extent<__xcodeml_template_type_0_0, 0>'
template<typename __xcodeml_template_type_0_0,unsigned long _Np>class extent<__xcodeml_template_type_0_0,0>:public integral_constant<unsigned long,expression>{}
                                                                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:1911:53: note: previous definition is here
template<typename __xcodeml_template_type_0_0>class extent<__xcodeml_template_type_0_0,0>:public integral_constant<unsigned long,0>{}
                                                    ^
vec.cpp:1915:148: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0,unsigned long _Np>class extent<__xcodeml_template_type_0_0,0>:public integral_constant<unsigned long,expression>{}
                                                                                                                                                   ^
vec.cpp:1917:123: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0,unsigned long _Np,unsigned int _Ip>class extent<__xcodeml_template_type_0_0,expression>:public integral_constant<unsigned long,expression>{}
                                                                                                                          ^
vec.cpp:1923:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:1924:17: error: redefinition of 'remove_extent<const std::__1::__compressed_pair_elem>'
template<>class remove_extent<class __compressed_pair_elem const>{public:typedef class __compressed_pair_elem const type;
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:1922:17: note: previous definition is here
template<>class remove_extent<class __compressed_pair_elem const>{public:typedef class __compressed_pair_elem const type;
                ^
vec.cpp:1926:1: error: expected unqualified-id
template<>class remove_extent<class::std::__1::__compressed_pair_elem<void(*),0,0> >{public:typedef class::std::__1::__compressed_pair_elem<void(*),0,0>type;
^
vec.cpp:1957:53: error: class template partial specialization does not specialize any template argument; to define the primary template, remove the template argument list
template<typename __xcodeml_template_type_0_0>class remove_extent<__xcodeml_template_type_0_0>{public:typedef __xcodeml_template_type_0_0 type;
                                                    ^            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:1957:53: error: redefinition of 'remove_extent'
vec.cpp:1919:53: note: previous definition is here
template<typename __xcodeml_template_type_0_0>class remove_extent{public:typedef __xcodeml_template_type_0_0 type;
                                                    ^
vec.cpp:1960:71: error: class template partial specialization does not specialize any template argument; to define the primary template, remove the template argument list
template<typename __xcodeml_template_type_0_0,unsigned long _Np>class remove_extent<__xcodeml_template_type_0_0>{public:typedef __xcodeml_template_type_0_0 type;
                                                                      ^            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:1960:1: error: too many template parameters in template redeclaration
template<typename __xcodeml_template_type_0_0,unsigned long _Np>class remove_extent<__xcodeml_template_type_0_0>{public:typedef __xcodeml_template_type_0_0 type;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:1919:1: note: previous template declaration is here
template<typename __xcodeml_template_type_0_0>class remove_extent{public:typedef __xcodeml_template_type_0_0 type;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:1968:53: error: class template partial specialization does not specialize any template argument; to define the primary template, remove the template argument list
template<typename __xcodeml_template_type_0_0>class remove_all_extents<__xcodeml_template_type_0_0>{public:typedef typename remove_all_extents<__xcodeml_template_type_0_0>::type type;
                                                    ^                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:1968:53: error: redefinition of 'remove_all_extents'
vec.cpp:1964:53: note: previous definition is here
template<typename __xcodeml_template_type_0_0>class remove_all_extents{public:typedef __xcodeml_template_type_0_0 type;
                                                    ^
vec.cpp:1971:71: error: class template partial specialization does not specialize any template argument; to define the primary template, remove the template argument list
template<typename __xcodeml_template_type_0_0,unsigned long _Np>class remove_all_extents<__xcodeml_template_type_0_0>{public:typedef typename remove_all_extents<__xcodeml_template_type_0_0>::type type;
                                                                      ^                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:1971:1: error: too many template parameters in template redeclaration
template<typename __xcodeml_template_type_0_0,unsigned long _Np>class remove_all_extents<__xcodeml_template_type_0_0>{public:typedef typename remove_all_extents<__xcodeml_template_type_0_0>::type type;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:1964:1: note: previous template declaration is here
template<typename __xcodeml_template_type_0_0>class remove_all_extents{public:typedef __xcodeml_template_type_0_0 type;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:1979:33: error: explicit specialization of non-template class '__compressed_pair_elem'
public:typedef class::std::__1::__compressed_pair_elem<void(*),0,0>type;
                                ^                     ~~~~~~~~~~~~~
vec.cpp:1980:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:1981:17: error: redefinition of '__decay<const std::__1::__compressed_pair_elem, true>'
template<>class __decay<class __compressed_pair_elem const,1>{public:
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:1978:17: note: previous definition is here
template<>class __decay<class __compressed_pair_elem const,1>{public:
                ^
vec.cpp:1984:1: error: expected unqualified-id
template<>class __decay<class::std::__1::__compressed_pair_elem<void(*),0,0>,1>{public:
^
vec.cpp:2031:37: error: use of undeclared identifier 'expression'
public:typedef typename conditional<expression,typename remove_extent<__xcodeml_template_type_0_0>::type(*),typename conditional<expression,typename add_pointer<__xcodeml_template_type_0_0>::type,typename remove_cv<__xcodeml_template_type_0_0>::type>::type>::type type;
                                    ^
vec.cpp:2031:107: error: C++ requires a type specifier for all declarations
public:typedef typename conditional<expression,typename remove_extent<__xcodeml_template_type_0_0>::type(*),typename conditional<expression,typename add_pointer<__xcodeml_template_type_0_0>::type,typename remove_cv<__xcodeml_template_type_0_0>::type>::type>::type type;
                                                                                                          ^
vec.cpp:2031:101: error: non-friend class member 'type' cannot have a qualified name
public:typedef typename conditional<expression,typename remove_extent<__xcodeml_template_type_0_0>::type(*),typename conditional<expression,typename add_pointer<__xcodeml_template_type_0_0>::type,typename remove_cv<__xcodeml_template_type_0_0>::type>::type>::type type;
                                                                                                  ~~^
vec.cpp:2031:101: error: typedef declarator cannot be qualified
public:typedef typename conditional<expression,typename remove_extent<__xcodeml_template_type_0_0>::type(*),typename conditional<expression,typename add_pointer<__xcodeml_template_type_0_0>::type,typename remove_cv<__xcodeml_template_type_0_0>::type>::type>::type type;
                                                                                                  ~~^
vec.cpp:2031:109: error: expected member name or ';' after declaration specifiers
public:typedef typename conditional<expression,typename remove_extent<__xcodeml_template_type_0_0>::type(*),typename conditional<expression,typename add_pointer<__xcodeml_template_type_0_0>::type,typename remove_cv<__xcodeml_template_type_0_0>::type>::type>::type type;
       ~~~~~~~                                                                                              ^
vec.cpp:2037:94: error: use of undeclared identifier 'expression'
public:typedef typename __decay<typename remove_reference<__xcodeml_template_type_0_0>::type,expression>::type type;
                                                                                             ^
vec.cpp:2037:107: error: non-friend class member 'type' cannot have a qualified name
public:typedef typename __decay<typename remove_reference<__xcodeml_template_type_0_0>::type,expression>::type type;
                                                                                                        ~~^
vec.cpp:2037:107: error: typedef declarator cannot be qualified
public:typedef typename __decay<typename remove_reference<__xcodeml_template_type_0_0>::type,expression>::type type;
                                                                                                        ~~^
vec.cpp:2037:111: error: expected ';' at end of declaration list
public:typedef typename __decay<typename remove_reference<__xcodeml_template_type_0_0>::type,expression>::type type;
                                                                                                              ^
                                                                                                              ;
vec.cpp:2043:33: error: explicit specialization of non-template class '__compressed_pair_elem'
public:typedef class::std::__1::__compressed_pair_elem<void(*),0,0>type;
                                ^                     ~~~~~~~~~~~~~
vec.cpp:2044:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:2045:17: error: redefinition of 'decay<const std::__1::__compressed_pair_elem &>'
template<>class decay<class __compressed_pair_elem const&>{private:
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:2040:17: note: previous definition is here
template<>class decay<class __compressed_pair_elem const&>{private:
                ^
vec.cpp:2050:1: error: expected unqualified-id
template<>class decay<class::std::__1::__compressed_pair_elem<void(*),0,0> >{private:
^
vec.cpp:2132:95: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>class is_abstract:public integral_constant<bool,expression>{}
                                                                                              ^
vec.cpp:2134:72: error: expected ';' after class
template<>class is_abstract<void(*)>:public integral_constant<bool,0>{}
                                                                       ^
                                                                       ;
vec.cpp:2135:46: error: no member named '__builtin_new_allocator' in namespace 'std::__1'
template<>class is_abstract<class::std::__1::__builtin_new_allocator::__builtin_new_deleter>:public integral_constant<bool,0>{}
                                 ~~~~~~~~~~~~^
vec.cpp:2138:101: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>class __libcpp_is_final:public integral_constant<bool,expression>{}
                                                                                                    ^
vec.cpp:2140:78: error: expected ';' after class
template<>class __libcpp_is_final<void(*)>:public integral_constant<bool,0>{}
                                                                             ^
                                                                             ;
vec.cpp:2141:52: error: no member named '__builtin_new_allocator' in namespace 'std::__1'
template<>class __libcpp_is_final<class::std::__1::__builtin_new_allocator::__builtin_new_deleter>:public integral_constant<bool,0>{}
                                       ~~~~~~~~~~~~^
vec.cpp:2146:92: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>class is_final:public integral_constant<bool,expression>{}
                                                                                           ^
vec.cpp:2149:131: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class is_base_of:public integral_constant<bool,expression>{}
                                                                                                                                  ^
vec.cpp:2152:135: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class is_convertible:public integral_constant<bool,expression>{}
                                                                                                                                      ^
vec.cpp:2154:83: error: expected ';' after class
template<>class is_convertible<void(*),void(*)>:public integral_constant<bool,1>{}
                                                                                  ^
                                                                                  ;
vec.cpp:2155:49: error: no member named '__builtin_new_allocator' in namespace 'std::__1'
template<>class is_convertible<class::std::__1::__builtin_new_allocator::__builtin_new_deleter,class::std::__1::__builtin_new_allocator::__builtin_new_deleter>:public integral_constant<bool,1>{}
                                    ~~~~~~~~~~~~^
vec.cpp:2159:92: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>class is_empty:public integral_constant<bool,expression>{}
                                                                                           ^
vec.cpp:2161:69: error: expected ';' after class
template<>class is_empty<void(*)>:public integral_constant<bool,0>{}
                                                                    ^
                                                                    ;
vec.cpp:2162:43: error: no member named '__builtin_new_allocator' in namespace 'std::__1'
template<>class is_empty<class::std::__1::__builtin_new_allocator::__builtin_new_deleter>:public integral_constant<bool,0>{}
                              ~~~~~~~~~~~~^
vec.cpp:2167:98: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>class is_polymorphic:public integral_constant<bool,expression>{}
                                                                                                 ^
vec.cpp:2170:106: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>class has_virtual_destructor:public integral_constant<bool,expression>{}
                                                                                                         ^
vec.cpp:2173:105: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>class alignment_of:public integral_constant<unsigned long,expression>{}
                                                                                                        ^
vec.cpp:2180:17: error: template '__type_list' cannot be referenced with a class specifier
template<>class __type_list template<>class __type_list template<>class __type_list template<>class __type_list template<>class __type_list template<>class __type_list template<>class __type_list template<>class __type_list template<>class __type_list template<>class __type_list template<>class __type_list template<>class __type_list template<>class __type_list template<>class __type_list template<>class __type_list template<>class __type_list<signed char,class::std::__1::__type_list<short,class::std::__1::__type_list<int,class::std::__1::__type_list<long,class::std::__1::__type_list<long long,class::std::__1::__type_list<__int128,class::std::__1::__nat> > > > > >{public:typedef signed char _Head;
                ^
vec.cpp:2176:90: note: declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __type_list{public:typedef __xcodeml_template_type_0_0 _Head;
                                                                                         ^
vec.cpp:2180:29: error: expected unqualified-id
template<>class __type_list template<>class __type_list template<>class __type_list template<>class __type_list template<>class __type_list template<>class __type_list template<>class __type_list template<>class __type_list template<>class __type_list template<>class __type_list template<>class __type_list template<>class __type_list template<>class __type_list template<>class __type_list template<>class __type_list template<>class __type_list<signed char,class::std::__1::__type_list<short,class::std::__1::__type_list<int,class::std::__1::__type_list<long,class::std::__1::__type_list<long long,class::std::__1::__type_list<__int128,class::std::__1::__nat> > > > > >{public:typedef signed char _Head;
                            ^
vec.cpp:2193:106: error: '__xcodeml_template_type_0_0' does not refer to a value
template<typename __xcodeml_template_type_0_0>class __align_type{public:static unsigned long const value=__xcodeml_template_type_0_0;
                                                                                                         ^
vec.cpp:2193:19: note: declared here
template<typename __xcodeml_template_type_0_0>class __align_type{public:static unsigned long const value=__xcodeml_template_type_0_0;
                  ^
vec.cpp:2197:94: error: expected '(' for function-style cast or type construction
template<>class __align_type<unsigned char>{public:static unsigned long const value=unsigned char;
                                                                                    ~~~~~~~~ ^
vec.cpp:2199:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:2200:95: error: expected '(' for function-style cast or type construction
template<>class __align_type<unsigned short>{public:static unsigned long const value=unsigned short;
                                                                                     ~~~~~~~~ ^
vec.cpp:2202:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:2203:93: error: expected '(' for function-style cast or type construction
template<>class __align_type<unsigned int>{public:static unsigned long const value=unsigned int;
                                                                                   ~~~~~~~~ ^
vec.cpp:2205:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:2206:94: error: expected '(' for function-style cast or type construction
template<>class __align_type<unsigned long>{public:static unsigned long const value=unsigned long;
                                                                                    ~~~~~~~~ ^
vec.cpp:2208:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:2209:99: error: expected '(' for function-style cast or type construction
template<>class __align_type<unsigned long long>{public:static unsigned long const value=unsigned long long;
                                                                                         ~~~~~~~~ ^
vec.cpp:2211:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:2212:84: error: expected '(' for function-style cast or type construction
template<>class __align_type<double>{public:static unsigned long const value=double;
                                                                             ~~~~~~^
vec.cpp:2214:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:2215:88: error: expected '(' for function-style cast or type construction
template<>class __align_type<long double>{public:static unsigned long const value=long double;
                                                                                  ~~~~ ^
vec.cpp:2217:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:2218:47: error: no class named '__struct_double' in namespace 'std::__1'
template<>class __align_type<class::std::__1::__struct_double>{public:static unsigned long const value=class::std::__1::__struct_double;
                                  ~~~~~~~~~~~~^
vec.cpp:2240:149: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0,unsigned long _Align>class __find_pod<__type_list<__xcodeml_template_type_0_0,class::std::__1::__nat>,expression>{public:typedef typename conditional<expression,typename __xcodeml_template_type_0_0::type,__fallback_overaligned<expression> >::type type;
                                                                                                                                                    ^
vec.cpp:2243:191: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,unsigned long _Align>class __find_pod<__type_list<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>,expression>{public:typedef typename conditional<expression,typename __xcodeml_template_type_0_0::type,typename __find_pod<__xcodeml_template_type_0_1,expression>::type>::type type;
                                                                                                                                                                                              ^
vec.cpp:2247:892: error: expected ';' after class
template<>class __find_max_align<class::std::__1::__type_list<class::std::__1::__align_type<unsigned char>,class::std::__1::__type_list<class::std::__1::__align_type<unsigned short>,class::std::__1::__type_list<class::std::__1::__align_type<unsigned int>,class::std::__1::__type_list<class::std::__1::__align_type<unsigned long>,class::std::__1::__type_list<class::std::__1::__align_type<unsigned long long>,class::std::__1::__type_list<class::std::__1::__align_type<double>,class::std::__1::__type_list<class::std::__1::__align_type<long double>,class::std::__1::__type_list<class::std::__1::__align_type<class::std::__1::__struct_double>,class::std::__1::__type_list<class::std::__1::__align_type<class::std::__1::__struct_double4>,class::std::__1::__type_list<class::std::__1::__align_type<int(*)>,class::std::__1::__nat> > > > > > > > > >,24>:public integral_constant<unsigned long,16>{}


vec.cpp:2248:816: error: expected ';' after class
template<>class __find_max_align<class::std::__1::__type_list<class::std::__1::__align_type<unsigned short>,class::std::__1::__type_list<class::std::__1::__align_type<unsigned int>,class::std::__1::__type_list<class::std::__1::__align_type<unsigned long>,class::std::__1::__type_list<class::std::__1::__align_type<unsigned long long>,class::std::__1::__type_list<class::std::__1::__align_type<double>,class::std::__1::__type_list<class::std::__1::__align_type<long double>,class::std::__1::__type_list<class::std::__1::__align_type<class::std::__1::__struct_double>,class::std::__1::__type_list<class::std::__1::__align_type<class::std::__1::__struct_double4>,class::std::__1::__type_list<class::std::__1::__align_type<int(*)>,class::std::__1::__nat> > > > > > > > >,24>:public integral_constant<unsigned long,16>{}

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               ;
vec.cpp:2249:739: error: expected ';' after class
template<>class __find_max_align<class::std::__1::__type_list<class::std::__1::__align_type<unsigned int>,class::std::__1::__type_list<class::std::__1::__align_type<unsigned long>,class::std::__1::__type_list<class::std::__1::__align_type<unsigned long long>,class::std::__1::__type_list<class::std::__1::__align_type<double>,class::std::__1::__type_list<class::std::__1::__align_type<long double>,class::std::__1::__type_list<class::std::__1::__align_type<class::std::__1::__struct_double>,class::std::__1::__type_list<class::std::__1::__align_type<class::std::__1::__struct_double4>,class::std::__1::__type_list<class::std::__1::__align_type<int(*)>,class::std::__1::__nat> > > > > > > >,24>:public integral_constant<unsigned long,16>{}


vec.cpp:2250:664: error: expected ';' after class
template<>class __find_max_align<class::std::__1::__type_list<class::std::__1::__align_type<unsigned long>,class::std::__1::__type_list<class::std::__1::__align_type<unsigned long long>,class::std::__1::__type_list<class::std::__1::__align_type<double>,class::std::__1::__type_list<class::std::__1::__align_type<long double>,class::std::__1::__type_list<class::std::__1::__align_type<class::std::__1::__struct_double>,class::std::__1::__type_list<class::std::__1::__align_type<class::std::__1::__struct_double4>,class::std::__1::__type_list<class::std::__1::__align_type<int(*)>,class::std::__1::__nat> > > > > > >,24>:public integral_constant<unsigned long,16>{}


vec.cpp:2251:588: error: expected ';' after class
template<>class __find_max_align<class::std::__1::__type_list<class::std::__1::__align_type<unsigned long long>,class::std::__1::__type_list<class::std::__1::__align_type<double>,class::std::__1::__type_list<class::std::__1::__align_type<long double>,class::std::__1::__type_list<class::std::__1::__align_type<class::std::__1::__struct_double>,class::std::__1::__type_list<class::std::__1::__align_type<class::std::__1::__struct_double4>,class::std::__1::__type_list<class::std::__1::__align_type<int(*)>,class::std::__1::__nat> > > > > >,24>:public integral_constant<unsigned long,16>{}


vec.cpp:2252:507: error: expected ';' after class
template<>class __find_max_align<class::std::__1::__type_list<class::std::__1::__align_type<double>,class::std::__1::__type_list<class::std::__1::__align_type<long double>,class::std::__1::__type_list<class::std::__1::__align_type<class::std::__1::__struct_double>,class::std::__1::__type_list<class::std::__1::__align_type<class::std::__1::__struct_double4>,class::std::__1::__type_list<class::std::__1::__align_type<int(*)>,class::std::__1::__nat> > > > >,24>:public integral_constant<unsigned long,16>{}


vec.cpp:2253:438: error: expected ';' after class
template<>class __find_max_align<class::std::__1::__type_list<class::std::__1::__align_type<long double>,class::std::__1::__type_list<class::std::__1::__align_type<class::std::__1::__struct_double>,class::std::__1::__type_list<class::std::__1::__align_type<class::std::__1::__struct_double4>,class::std::__1::__type_list<class::std::__1::__align_type<int(*)>,class::std::__1::__nat> > > >,24>:public integral_constant<unsigned long,16>{}
                                                                                                                                                                                                                                                                                                                                                                                                                                                     ^
                                                                                                                                                                                                                                                                                                                                                                                                                                                     ;
vec.cpp:2254:364: error: expected ';' after class
template<>class __find_max_align<class::std::__1::__type_list<class::std::__1::__align_type<class::std::__1::__struct_double>,class::std::__1::__type_list<class::std::__1::__align_type<class::std::__1::__struct_double4>,class::std::__1::__type_list<class::std::__1::__align_type<int(*)>,class::std::__1::__nat> > >,24>:public integral_constant<unsigned long,16>{}
                                                                                                                                                                                                                                                                                                                                                                           ^
                                                                                                                                                                                                                                                                                                                                                                           ;
vec.cpp:2255:268: error: expected ';' after class
template<>class __find_max_align<class::std::__1::__type_list<class::std::__1::__align_type<class::std::__1::__struct_double4>,class::std::__1::__type_list<class::std::__1::__align_type<int(*)>,class::std::__1::__nat> >,24>:public integral_constant<unsigned long,8>{}
                                                                                                                                                                                                                                                                           ^
                                                                                                                                                                                                                                                                           ;
vec.cpp:2258:153: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0,unsigned long _Len>class __find_max_align<__type_list<__xcodeml_template_type_0_0,class::std::__1::__nat>,expression>:public integral_constant<unsigned long,expression>{}
                                                                                                                                                        ^
vec.cpp:2268:44: error: use of undeclared identifier '_A2'
private:static unsigned long const __min=((_A2<_A1)?_A2:_A1);
                                           ^
vec.cpp:2268:48: error: use of undeclared identifier '_A1'
private:static unsigned long const __min=((_A2<_A1)?_A2:_A1);
                                               ^
vec.cpp:2268:53: error: use of undeclared identifier '_A2'
private:static unsigned long const __min=((_A2<_A1)?_A2:_A1);
                                                    ^
vec.cpp:2268:57: error: use of undeclared identifier '_A1'
private:static unsigned long const __min=((_A2<_A1)?_A2:_A1);
                                                        ^
vec.cpp:2269:44: error: use of undeclared identifier '_A1'
private:static unsigned long const __max=((_A1<_A2)?_A2:_A1);
                                           ^
vec.cpp:2269:48: error: use of undeclared identifier '_A2'
private:static unsigned long const __max=((_A1<_A2)?_A2:_A1);
                                               ^
vec.cpp:2269:53: error: use of undeclared identifier '_A2'
private:static unsigned long const __max=((_A1<_A2)?_A2:_A1);
                                                    ^
vec.cpp:2269:57: error: use of undeclared identifier '_A1'
private:static unsigned long const __max=((_A1<_A2)?_A2:_A1);
                                                        ^
vec.cpp:2271:43: error: use of undeclared identifier '_Len'
public:static unsigned long const value=((_Len<__max)?__min:__max);
                                          ^
vec.cpp:2272:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:2274:44: error: use of undeclared identifier '_A2'
private:static unsigned long const __min=((_A2<_A1)?_A2:_A1);
                                           ^
vec.cpp:2274:48: error: use of undeclared identifier '_A1'
private:static unsigned long const __min=((_A2<_A1)?_A2:_A1);
                                               ^
vec.cpp:2274:53: error: use of undeclared identifier '_A2'
private:static unsigned long const __min=((_A2<_A1)?_A2:_A1);
                                                    ^
vec.cpp:2274:57: error: use of undeclared identifier '_A1'
private:static unsigned long const __min=((_A2<_A1)?_A2:_A1);
                                                        ^
vec.cpp:2275:44: error: use of undeclared identifier '_A1'
private:static unsigned long const __max=((_A1<_A2)?_A2:_A1);
                                           ^
vec.cpp:2275:48: error: use of undeclared identifier '_A2'
private:static unsigned long const __max=((_A1<_A2)?_A2:_A1);
                                               ^
vec.cpp:2275:53: error: use of undeclared identifier '_A2'
private:static unsigned long const __max=((_A1<_A2)?_A2:_A1);
                                                    ^
vec.cpp:2275:57: error: use of undeclared identifier '_A1'
private:static unsigned long const __max=((_A1<_A2)?_A2:_A1);
                                                        ^
vec.cpp:2277:43: error: use of undeclared identifier '_Len'
public:static unsigned long const value=((_Len<__max)?__min:__max);
                                          ^
vec.cpp:2278:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:2280:44: error: use of undeclared identifier '_A2'
private:static unsigned long const __min=((_A2<_A1)?_A2:_A1);
                                           ^
vec.cpp:2280:48: error: use of undeclared identifier '_A1'
private:static unsigned long const __min=((_A2<_A1)?_A2:_A1);
                                               ^
vec.cpp:2280:53: error: use of undeclared identifier '_A2'
private:static unsigned long const __min=((_A2<_A1)?_A2:_A1);
                                                    ^
vec.cpp:2280:57: error: use of undeclared identifier '_A1'
private:static unsigned long const __min=((_A2<_A1)?_A2:_A1);
                                                        ^
vec.cpp:2281:44: error: use of undeclared identifier '_A1'
private:static unsigned long const __max=((_A1<_A2)?_A2:_A1);
                                           ^
vec.cpp:2281:48: error: use of undeclared identifier '_A2'
private:static unsigned long const __max=((_A1<_A2)?_A2:_A1);
                                               ^
vec.cpp:2281:53: error: use of undeclared identifier '_A2'
private:static unsigned long const __max=((_A1<_A2)?_A2:_A1);
                                                    ^
vec.cpp:2281:57: error: use of undeclared identifier '_A1'
private:static unsigned long const __max=((_A1<_A2)?_A2:_A1);
                                                        ^
vec.cpp:2283:43: error: use of undeclared identifier '_Len'
public:static unsigned long const value=((_Len<__max)?__min:__max);
                                          ^
vec.cpp:2284:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:2286:44: error: use of undeclared identifier '_A2'
private:static unsigned long const __min=((_A2<_A1)?_A2:_A1);
                                           ^
vec.cpp:2286:48: error: use of undeclared identifier '_A1'
private:static unsigned long const __min=((_A2<_A1)?_A2:_A1);
                                               ^
vec.cpp:2286:53: error: use of undeclared identifier '_A2'
private:static unsigned long const __min=((_A2<_A1)?_A2:_A1);
                                                    ^
vec.cpp:2286:57: error: use of undeclared identifier '_A1'
private:static unsigned long const __min=((_A2<_A1)?_A2:_A1);
                                                        ^
vec.cpp:2287:44: error: use of undeclared identifier '_A1'
private:static unsigned long const __max=((_A1<_A2)?_A2:_A1);
                                           ^
vec.cpp:2287:48: error: use of undeclared identifier '_A2'
private:static unsigned long const __max=((_A1<_A2)?_A2:_A1);
                                               ^
vec.cpp:2287:53: error: use of undeclared identifier '_A2'
private:static unsigned long const __max=((_A1<_A2)?_A2:_A1);
                                                    ^
vec.cpp:2287:57: error: use of undeclared identifier '_A1'
private:static unsigned long const __max=((_A1<_A2)?_A2:_A1);
                                                        ^
vec.cpp:2289:43: error: use of undeclared identifier '_Len'
public:static unsigned long const value=((_Len<__max)?__min:__max);
                                          ^
vec.cpp:2290:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:2292:44: error: use of undeclared identifier '_A2'
private:static unsigned long const __min=((_A2<_A1)?_A2:_A1);
                                           ^
vec.cpp:2292:48: error: use of undeclared identifier '_A1'
private:static unsigned long const __min=((_A2<_A1)?_A2:_A1);
                                               ^
vec.cpp:2292:53: error: use of undeclared identifier '_A2'
private:static unsigned long const __min=((_A2<_A1)?_A2:_A1);
                                                    ^
vec.cpp:2292:57: error: use of undeclared identifier '_A1'
private:static unsigned long const __min=((_A2<_A1)?_A2:_A1);
                                                        ^
vec.cpp:2293:44: error: use of undeclared identifier '_A1'
private:static unsigned long const __max=((_A1<_A2)?_A2:_A1);
                                           ^
vec.cpp:2293:48: error: use of undeclared identifier '_A2'
private:static unsigned long const __max=((_A1<_A2)?_A2:_A1);
                                               ^
vec.cpp:2293:53: error: use of undeclared identifier '_A2'
private:static unsigned long const __max=((_A1<_A2)?_A2:_A1);
                                                    ^
vec.cpp:2293:57: error: use of undeclared identifier '_A1'
private:static unsigned long const __max=((_A1<_A2)?_A2:_A1);
                                                        ^
vec.cpp:2295:43: error: use of undeclared identifier '_Len'
public:static unsigned long const value=((_Len<__max)?__min:__max);
                                          ^
vec.cpp:2296:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:2298:44: error: use of undeclared identifier '_A2'
private:static unsigned long const __min=((_A2<_A1)?_A2:_A1);
                                           ^
vec.cpp:2298:48: error: use of undeclared identifier '_A1'
private:static unsigned long const __min=((_A2<_A1)?_A2:_A1);
                                               ^
vec.cpp:2298:53: error: use of undeclared identifier '_A2'
private:static unsigned long const __min=((_A2<_A1)?_A2:_A1);
                                                    ^
vec.cpp:2298:57: error: use of undeclared identifier '_A1'
private:static unsigned long const __min=((_A2<_A1)?_A2:_A1);
                                                        ^
vec.cpp:2299:44: error: use of undeclared identifier '_A1'
private:static unsigned long const __max=((_A1<_A2)?_A2:_A1);
                                           ^
vec.cpp:2299:48: error: use of undeclared identifier '_A2'
private:static unsigned long const __max=((_A1<_A2)?_A2:_A1);
                                               ^
vec.cpp:2299:53: error: use of undeclared identifier '_A2'
private:static unsigned long const __max=((_A1<_A2)?_A2:_A1);
                                                    ^
vec.cpp:2299:57: error: use of undeclared identifier '_A1'
private:static unsigned long const __max=((_A1<_A2)?_A2:_A1);
                                                        ^
vec.cpp:2301:43: error: use of undeclared identifier '_Len'
public:static unsigned long const value=((_Len<__max)?__min:__max);
                                          ^
vec.cpp:2302:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:2304:44: error: use of undeclared identifier '_A2'
private:static unsigned long const __min=((_A2<_A1)?_A2:_A1);
                                           ^
vec.cpp:2304:48: error: use of undeclared identifier '_A1'
private:static unsigned long const __min=((_A2<_A1)?_A2:_A1);
                                               ^
vec.cpp:2304:53: error: use of undeclared identifier '_A2'
private:static unsigned long const __min=((_A2<_A1)?_A2:_A1);
                                                    ^
vec.cpp:2304:57: error: use of undeclared identifier '_A1'
private:static unsigned long const __min=((_A2<_A1)?_A2:_A1);
                                                        ^
vec.cpp:2305:44: error: use of undeclared identifier '_A1'
private:static unsigned long const __max=((_A1<_A2)?_A2:_A1);
                                           ^
vec.cpp:2305:48: error: use of undeclared identifier '_A2'
private:static unsigned long const __max=((_A1<_A2)?_A2:_A1);
                                               ^
vec.cpp:2305:53: error: use of undeclared identifier '_A2'
private:static unsigned long const __max=((_A1<_A2)?_A2:_A1);
                                                    ^
vec.cpp:2305:57: error: use of undeclared identifier '_A1'
private:static unsigned long const __max=((_A1<_A2)?_A2:_A1);
                                                        ^
vec.cpp:2307:43: error: use of undeclared identifier '_Len'
public:static unsigned long const value=((_Len<__max)?__min:__max);
                                          ^
vec.cpp:2310:195: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,unsigned long _Len>class __find_max_align<__type_list<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>,expression>:public integral_constant<unsigned long,expression>{}
                                                                                                                                                                                                  ^
vec.cpp:2312:877: error: use of undeclared identifier 'expression'
template<unsigned long _Len,unsigned long _Align=__find_max_align<class::std::__1::__type_list<class::std::__1::__align_type<unsigned char>,class::std::__1::__type_list<class::std::__1::__align_type<unsigned short>,class::std::__1::__type_list<class::std::__1::__align_type<unsigned int>,class::std::__1::__type_list<class::std::__1::__align_type<unsigned long>,class::std::__1::__type_list<class::std::__1::__align_type<unsigned long long>,class::std::__1::__type_list<class::std::__1::__align_type<double>,class::std::__1::__type_list<class::std::__1::__align_type<long double>,class::std::__1::__type_list<class::std::__1::__align_type<class::std::__1::__struct_double>,class::std::__1::__type_list<class::std::__1::__align_type<class::std::__1::__struct_double4>,class::std::__1::__type_list<class::std::__1::__align_type<int(*)>,class::std::__1::__nat> > > > > > > > > >,expression>::value>class aligned_storage{public:typedef typename __find_pod<class::std::__1::__type_list<class::std::__1::__align_type<unsigned char>,class::std::__1::__type_list<class::std::__1::__align_type<unsigned short>,class::std::__1::__type_list<class::std::__1::__align_type<unsigned int>,class::std::__1::__type_list<class::std::__1::__align_type<unsigned long>,class::std::__1::__type_list<class::std::__1::__align_type<unsigned long long>,class::std::__1::__type_list<class::std::__1::__align_type<double>,class::std::__1::__type_list<class::std::__1::__align_type<long double>,class::std::__1::__type_list<class::std::__1::__align_type<class::std::__1::__struct_double>,class::std::__1::__type_list<class::std::__1::__align_type<class::std::__1::__struct_double4>,class::std::__1::__type_list<class::std::__1::__align_type<int(*)>,class::std::__1::__nat> > > > > > > > > >,expression>::type _Aligner;

vec.cpp:2312:1763: error: use of undeclared identifier 'expression'
template<unsigned long _Len,unsigned long _Align=__find_max_align<class::std::__1::__type_list<class::std::__1::__align_type<unsigned char>,class::std::__1::__type_list<class::std::__1::__align_type<unsigned short>,class::std::__1::__type_list<class::std::__1::__align_type<unsigned int>,class::std::__1::__type_list<class::std::__1::__align_type<unsigned long>,class::std::__1::__type_list<class::std::__1::__align_type<unsigned long long>,class::std::__1::__type_list<class::std::__1::__align_type<double>,class::std::__1::__type_list<class::std::__1::__align_type<long double>,class::std::__1::__type_list<class::std::__1::__align_type<class::std::__1::__struct_double>,class::std::__1::__type_list<class::std::__1::__align_type<class::std::__1::__struct_double4>,class::std::__1::__type_list<class::std::__1::__align_type<int(*)>,class::std::__1::__nat> > > > > > > > > >,expression>::value>class aligned_storage{public:typedef typename __find_pod<class::std::__1::__type_list<class::std::__1::__align_type<unsigned char>,class::std::__1::__type_list<class::std::__1::__align_type<unsigned short>,class::std::__1::__type_list<class::std::__1::__align_type<unsigned int>,class::std::__1::__type_list<class::std::__1::__align_type<unsigned long>,class::std::__1::__type_list<class::std::__1::__align_type<unsigned long long>,class::std::__1::__type_list<class::std::__1::__align_type<double>,class::std::__1::__type_list<class::std::__1::__align_type<long double>,class::std::__1::__type_list<class::std::__1::__align_type<class::std::__1::__struct_double>,class::std::__1::__type_list<class::std::__1::__align_type<class::std::__1::__struct_double4>,class::std::__1::__type_list<class::std::__1::__align_type<int(*)>,class::std::__1::__nat> > > > > > > > > >,expression>::type _Aligner;

vec.cpp:2312:1776: error: non-friend class member 'type' cannot have a qualified name
template<unsigned long _Len,unsigned long _Align=__find_max_align<class::std::__1::__type_list<class::std::__1::__align_type<unsigned char>,class::std::__1::__type_list<class::std::__1::__align_type<unsigned short>,class::std::__1::__type_list<class::std::__1::__align_type<unsigned int>,class::std::__1::__type_list<class::std::__1::__align_type<unsigned long>,class::std::__1::__type_list<class::std::__1::__align_type<unsigned long long>,class::std::__1::__type_list<class::std::__1::__align_type<double>,class::std::__1::__type_list<class::std::__1::__align_type<long double>,class::std::__1::__type_list<class::std::__1::__align_type<class::std::__1::__struct_double>,class::std::__1::__type_list<class::std::__1::__align_type<class::std::__1::__struct_double4>,class::std::__1::__type_list<class::std::__1::__align_type<int(*)>,class::std::__1::__nat> > > > > > > > > >,expression>::value>class aligned_storage{public:typedef typename __find_pod<class::std::__1::__type_list<class::std::__1::__align_type<unsigned char>,class::std::__1::__type_list<class::std::__1::__align_type<unsigned short>,class::std::__1::__type_list<class::std::__1::__align_type<unsigned int>,class::std::__1::__type_list<class::std::__1::__align_type<unsigned long>,class::std::__1::__type_list<class::std::__1::__align_type<unsigned long long>,class::std::__1::__type_list<class::std::__1::__align_type<double>,class::std::__1::__type_list<class::std::__1::__align_type<long double>,class::std::__1::__type_list<class::std::__1::__align_type<class::std::__1::__struct_double>,class::std::__1::__type_list<class::std::__1::__align_type<class::std::__1::__struct_double4>,class::std::__1::__type_list<class::std::__1::__align_type<int(*)>,class::std::__1::__nat> > > > > > > > > >,expression>::type _Aligner;
~~^
vec.cpp:2312:1776: error: typedef declarator cannot be qualified
template<unsigned long _Len,unsigned long _Align=__find_max_align<class::std::__1::__type_list<class::std::__1::__align_type<unsigned char>,class::std::__1::__type_list<class::std::__1::__align_type<unsigned short>,class::std::__1::__type_list<class::std::__1::__align_type<unsigned int>,class::std::__1::__type_list<class::std::__1::__align_type<unsigned long>,class::std::__1::__type_list<class::std::__1::__align_type<unsigned long long>,class::std::__1::__type_list<class::std::__1::__align_type<double>,class::std::__1::__type_list<class::std::__1::__align_type<long double>,class::std::__1::__type_list<class::std::__1::__align_type<class::std::__1::__struct_double>,class::std::__1::__type_list<class::std::__1::__align_type<class::std::__1::__struct_double4>,class::std::__1::__type_list<class::std::__1::__align_type<int(*)>,class::std::__1::__nat> > > > > > > > > >,expression>::value>class aligned_storage{public:typedef typename __find_pod<class::std::__1::__type_list<class::std::__1::__align_type<unsigned char>,class::std::__1::__type_list<class::std::__1::__align_type<unsigned short>,class::std::__1::__type_list<class::std::__1::__align_type<unsigned int>,class::std::__1::__type_list<class::std::__1::__align_type<unsigned long>,class::std::__1::__type_list<class::std::__1::__align_type<unsigned long long>,class::std::__1::__type_list<class::std::__1::__align_type<double>,class::std::__1::__type_list<class::std::__1::__align_type<long double>,class::std::__1::__type_list<class::std::__1::__align_type<class::std::__1::__struct_double>,class::std::__1::__type_list<class::std::__1::__align_type<class::std::__1::__struct_double4>,class::std::__1::__type_list<class::std::__1::__align_type<int(*)>,class::std::__1::__nat> > > > > > > > > >,expression>::type _Aligner;
~~^
vec.cpp:2312:1780: error: expected ';' at end of declaration list
template<unsigned long _Len,unsigned long _Align=__find_max_align<class::std::__1::__type_list<class::std::__1::__align_type<unsigned char>,class::std::__1::__type_list<class::std::__1::__align_type<unsigned short>,class::std::__1::__type_list<class::std::__1::__align_type<unsigned int>,class::std::__1::__type_list<class::std::__1::__align_type<unsigned long>,class::std::__1::__type_list<class::std::__1::__align_type<unsigned long long>,class::std::__1::__type_list<class::std::__1::__align_type<double>,class::std::__1::__type_list<class::std::__1::__align_type<long double>,class::std::__1::__type_list<class::std::__1::__align_type<class::std::__1::__struct_double>,class::std::__1::__type_list<class::std::__1::__align_type<class::std::__1::__struct_double4>,class::std::__1::__type_list<class::std::__1::__align_type<int(*)>,class::std::__1::__nat> > > > > > > > > >,expression>::value>class aligned_storage{public:typedef typename __find_pod<class::std::__1::__type_list<class::std::__1::__align_type<unsigned char>,class::std::__1::__type_list<class::std::__1::__align_type<unsigned short>,class::std::__1::__type_list<class::std::__1::__align_type<unsigned int>,class::std::__1::__type_list<class::std::__1::__align_type<unsigned long>,class::std::__1::__type_list<class::std::__1::__align_type<unsigned long long>,class::std::__1::__type_list<class::std::__1::__align_type<double>,class::std::__1::__type_list<class::std::__1::__align_type<long double>,class::std::__1::__type_list<class::std::__1::__align_type<class::std::__1::__struct_double>,class::std::__1::__type_list<class::std::__1::__align_type<class::std::__1::__struct_double4>,class::std::__1::__type_list<class::std::__1::__align_type<int(*)>,class::std::__1::__nat> > > > > > > > > >,expression>::type _Aligner;


vec.cpp:2313:14: error: definition of type 'type' conflicts with typedef of the same name
public:union type{public:typename __find_pod<class::std::__1::__type_list<class::std::__1::__align_type<unsigned char>,class::std::__1::__type_list<class::std::__1::__align_type<unsigned short>,class::std::__1::__type_list<class::std::__1::__align_type<unsigned int>,class::std::__1::__type_list<class::std::__1::__align_type<unsigned long>,class::std::__1::__type_list<class::std::__1::__align_type<unsigned long long>,class::std::__1::__type_list<class::std::__1::__align_type<double>,class::std::__1::__type_list<class::std::__1::__align_type<long double>,class::std::__1::__type_list<class::std::__1::__align_type<class::std::__1::__struct_double>,class::std::__1::__type_list<class::std::__1::__align_type<class::std::__1::__struct_double4>,class::std::__1::__type_list<class::std::__1::__align_type<int(*)>,class::std::__1::__nat> > > > > > > > > >,expression>::type __align;
             ^
vec.cpp:2312:1776: note: 'type' declared here
template<unsigned long _Len,unsigned long _Align=__find_max_align<class::std::__1::__type_list<class::std::__1::__align_type<unsigned char>,class::std::__1::__type_list<class::std::__1::__align_type<unsigned short>,class::std::__1::__type_list<class::std::__1::__align_type<unsigned int>,class::std::__1::__type_list<class::std::__1::__align_type<unsigned long>,class::std::__1::__type_list<class::std::__1::__align_type<unsigned long long>,class::std::__1::__type_list<class::std::__1::__align_type<double>,class::std::__1::__type_list<class::std::__1::__align_type<long double>,class::std::__1::__type_list<class::std::__1::__align_type<class::std::__1::__struct_double>,class::std::__1::__type_list<class::std::__1::__align_type<class::std::__1::__struct_double4>,class::std::__1::__type_list<class::std::__1::__align_type<int(*)>,class::std::__1::__nat> > > > > > > > > >,expression>::value>class aligned_storage{public:typedef typename __find_pod<class::std::__1::__type_list<class::std::__1::__align_type<unsigned char>,class::std::__1::__type_list<class::std::__1::__align_type<unsigned short>,class::std::__1::__type_list<class::std::__1::__align_type<unsigned int>,class::std::__1::__type_list<class::std::__1::__align_type<unsigned long>,class::std::__1::__type_list<class::std::__1::__align_type<unsigned long long>,class::std::__1::__type_list<class::std::__1::__align_type<double>,class::std::__1::__type_list<class::std::__1::__align_type<long double>,class::std::__1::__type_list<class::std::__1::__align_type<class::std::__1::__struct_double>,class::std::__1::__type_list<class::std::__1::__align_type<class::std::__1::__struct_double4>,class::std::__1::__type_list<class::std::__1::__align_type<int(*)>,class::std::__1::__nat> > > > > > > > > >,expression>::type _Aligner;

vec.cpp:2324:877: error: use of undeclared identifier 'expression'
template<unsigned long _Len,unsigned long _Align=__find_max_align<class::std::__1::__type_list<class::std::__1::__align_type<unsigned char>,class::std::__1::__type_list<class::std::__1::__align_type<unsigned short>,class::std::__1::__type_list<class::std::__1::__align_type<unsigned int>,class::std::__1::__type_list<class::std::__1::__align_type<unsigned long>,class::std::__1::__type_list<class::std::__1::__align_type<unsigned long long>,class::std::__1::__type_list<class::std::__1::__align_type<double>,class::std::__1::__type_list<class::std::__1::__align_type<long double>,class::std::__1::__type_list<class::std::__1::__align_type<class::std::__1::__struct_double>,class::std::__1::__type_list<class::std::__1::__align_type<class::std::__1::__struct_double4>,class::std::__1::__type_list<class::std::__1::__align_type<int(*)>,class::std::__1::__nat> > > > > > > > > >,expression>::value>using aligned_storage_t=typename aligned_storage<expression,expression>::type;

vec.cpp:2324:945: error: use of undeclared identifier 'expression'
template<unsigned long _Len,unsigned long _Align=__find_max_align<class::std::__1::__type_list<class::std::__1::__align_type<unsigned char>,class::std::__1::__type_list<class::std::__1::__align_type<unsigned short>,class::std::__1::__type_list<class::std::__1::__align_type<unsigned int>,class::std::__1::__type_list<class::std::__1::__align_type<unsigned long>,class::std::__1::__type_list<class::std::__1::__align_type<unsigned long long>,class::std::__1::__type_list<class::std::__1::__align_type<double>,class::std::__1::__type_list<class::std::__1::__align_type<long double>,class::std::__1::__type_list<class::std::__1::__align_type<class::std::__1::__struct_double>,class::std::__1::__type_list<class::std::__1::__align_type<class::std::__1::__struct_double4>,class::std::__1::__type_list<class::std::__1::__align_type<int(*)>,class::std::__1::__nat> > > > > > > > > >,expression>::value>using aligned_storage_t=typename aligned_storage<expression,expression>::type;

vec.cpp:2324:969: error: expected ';' after alias declaration
template<unsigned long _Len,unsigned long _Align=__find_max_align<class::std::__1::__type_list<class::std::__1::__align_type<unsigned char>,class::std::__1::__type_list<class::std::__1::__align_type<unsigned short>,class::std::__1::__type_list<class::std::__1::__align_type<unsigned int>,class::std::__1::__type_list<class::std::__1::__align_type<unsigned long>,class::std::__1::__type_list<class::std::__1::__align_type<unsigned long long>,class::std::__1::__type_list<class::std::__1::__align_type<double>,class::std::__1::__type_list<class::std::__1::__align_type<long double>,class::std::__1::__type_list<class::std::__1::__align_type<class::std::__1::__struct_double>,class::std::__1::__type_list<class::std::__1::__align_type<class::std::__1::__struct_double4>,class::std::__1::__type_list<class::std::__1::__align_type<int(*)>,class::std::__1::__nat> > > > > > > > > >,expression>::value>using aligned_storage_t=typename aligned_storage<expression,expression>::type;


vec.cpp:2325:51: error: use of undeclared identifier 'expression'
template<unsigned long _Len>class aligned_storage<expression,1>{public:class type{public:unsigned char __lx[((((_Len+0x1)-1)/0x1)*0x1)];
                                                  ^
vec.cpp:2330:51: error: use of undeclared identifier 'expression'
template<unsigned long _Len>class aligned_storage<expression,2>{public:class type{public:unsigned char __lx[((((_Len+0x2)-1)/0x2)*0x2)];
                                                  ^
vec.cpp:2335:51: error: use of undeclared identifier 'expression'
template<unsigned long _Len>class aligned_storage<expression,4>{public:class type{public:unsigned char __lx[((((_Len+0x4)-1)/0x4)*0x4)];
                                                  ^
vec.cpp:2340:51: error: use of undeclared identifier 'expression'
template<unsigned long _Len>class aligned_storage<expression,8>{public:class type{public:unsigned char __lx[((((_Len+0x8)-1)/0x8)*0x8)];
                                                  ^
vec.cpp:2345:51: error: use of undeclared identifier 'expression'
template<unsigned long _Len>class aligned_storage<expression,16>{public:class type{public:unsigned char __lx[((((_Len+0x10)-1)/0x10)*0x10)];
                                                  ^
vec.cpp:2350:51: error: use of undeclared identifier 'expression'
template<unsigned long _Len>class aligned_storage<expression,32>{public:class type{public:unsigned char __lx[((((_Len+0x20)-1)/0x20)*0x20)];
                                                  ^
vec.cpp:2355:51: error: use of undeclared identifier 'expression'
template<unsigned long _Len>class aligned_storage<expression,64>{public:class type{public:unsigned char __lx[((((_Len+0x40)-1)/0x40)*0x40)];
                                                  ^
vec.cpp:2360:51: error: use of undeclared identifier 'expression'
template<unsigned long _Len>class aligned_storage<expression,128>{public:class type{public:unsigned char __lx[((((_Len+0x80)-1)/0x80)*0x80)];
                                                  ^
vec.cpp:2365:51: error: use of undeclared identifier 'expression'
template<unsigned long _Len>class aligned_storage<expression,256>{public:class type{public:unsigned char __lx[((((_Len+0x100)-1)/0x100)*0x100)];
                                                  ^
vec.cpp:2370:51: error: use of undeclared identifier 'expression'
template<unsigned long _Len>class aligned_storage<expression,512>{public:class type{public:unsigned char __lx[((((_Len+0x200)-1)/0x200)*0x200)];
                                                  ^
vec.cpp:2375:51: error: use of undeclared identifier 'expression'
template<unsigned long _Len>class aligned_storage<expression,1024>{public:class type{public:unsigned char __lx[((((_Len+0x400)-1)/0x400)*0x400)];
                                                  ^
vec.cpp:2380:51: error: use of undeclared identifier 'expression'
template<unsigned long _Len>class aligned_storage<expression,2048>{public:class type{public:unsigned char __lx[((((_Len+0x800)-1)/0x800)*0x800)];
                                                  ^
vec.cpp:2385:51: error: use of undeclared identifier 'expression'
template<unsigned long _Len>class aligned_storage<expression,4096>{public:class type{public:unsigned char __lx[((((_Len+0x1000)-1)/0x1000)*0x1000)];
                                                  ^
vec.cpp:2390:51: error: use of undeclared identifier 'expression'
template<unsigned long _Len>class aligned_storage<expression,8192>{public:class type{public:unsigned char __lx[((((_Len+0x2000)-1)/0x2000)*0x2000)];
                                                  ^
vec.cpp:2395:51: error: use of undeclared identifier 'expression'
template<unsigned long _Len>class aligned_storage<expression,16384>{public:class type{public:unsigned char __lx[((((_Len+0x4000)-1)/0x4000)*0x4000)];
                                                  ^
vec.cpp:2402:47: error: use of undeclared identifier 'expression'
template<unsigned long _I0>class __static_max<expression,...>{public:static unsigned long const value=_I0;
                                              ^
vec.cpp:2405:83: error: use of undeclared identifier 'expression'
template<unsigned long _I0,unsigned long _I1,unsigned long _In>class __static_max<expression,...>{public:static unsigned long const value=((_I0>=_I1)?__static_max<expression,...>::value:__static_max<expression,...>::value);
                                                                                  ^
vec.cpp:2408:186: error: use of undeclared identifier 'expression'
template<unsigned long _Len,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class aligned_union{public:static unsigned long const alignment_value=__static_max<expression,...>::value;
                                                                                                                                                                                         ^
vec.cpp:2409:54: error: use of undeclared identifier 'expression'
public:static unsigned long const __len=__static_max<expression,...>::value;
                                                     ^
vec.cpp:2410:41: error: use of undeclared identifier 'expression'
public:typedef typename aligned_storage<expression,expression>::type type;
                                        ^
vec.cpp:2410:65: error: non-friend class member 'type' cannot have a qualified name
public:typedef typename aligned_storage<expression,expression>::type type;
                                                              ~~^
vec.cpp:2410:65: error: typedef declarator cannot be qualified
public:typedef typename aligned_storage<expression,expression>::type type;
                                                              ~~^
vec.cpp:2410:69: error: expected ';' at end of declaration list
public:typedef typename aligned_storage<expression,expression>::type type;
                                                                    ^
                                                                    ;
vec.cpp:2414:111: error: use of undeclared identifier 'expression'
template<unsigned long _Len,typename __xcodeml_template_type_0_1>using aligned_union_t=typename aligned_union<expression,void/**/>::type;
                                                                                                              ^
vec.cpp:2414:133: error: expected ';' after alias declaration
template<unsigned long _Len,typename __xcodeml_template_type_0_1>using aligned_union_t=typename aligned_union<expression,void/**/>::type;
                                                                                                                                    ^
                                                                                                                                    ;
vec.cpp:2426:26: error: use of undeclared identifier 'type'
public:typedef decltype (type);
                         ^
vec.cpp:2427:55: error: use of undeclared identifier 'expression'
public:static bool const value=integral_constant<bool,expression>::value;
                                                      ^
vec.cpp:2440:78: error: use of undeclared identifier 'expression'
private:typedef typename __promote_imp<__xcodeml_template_type_0_0,void,void,expression>::type __type1;
                                                                             ^
vec.cpp:2440:91: error: non-friend class member 'type' cannot have a qualified name
private:typedef typename __promote_imp<__xcodeml_template_type_0_0,void,void,expression>::type __type1;
                                                                                        ~~^
vec.cpp:2440:91: error: typedef declarator cannot be qualified
private:typedef typename __promote_imp<__xcodeml_template_type_0_0,void,void,expression>::type __type1;
                                                                                        ~~^
vec.cpp:2440:95: error: expected ';' at end of declaration list
private:typedef typename __promote_imp<__xcodeml_template_type_0_0,void,void,expression>::type __type1;
                                                                                              ^
                                                                                              ;
vec.cpp:2441:78: error: use of undeclared identifier 'expression'
private:typedef typename __promote_imp<__xcodeml_template_type_0_1,void,void,expression>::type __type2;
                                                                             ^
vec.cpp:2441:91: error: non-friend class member 'type' cannot have a qualified name
private:typedef typename __promote_imp<__xcodeml_template_type_0_1,void,void,expression>::type __type2;
                                                                                        ~~^
vec.cpp:2441:91: error: typedef declarator cannot be qualified
private:typedef typename __promote_imp<__xcodeml_template_type_0_1,void,void,expression>::type __type2;
                                                                                        ~~^
vec.cpp:2441:95: error: expected ';' at end of declaration list
private:typedef typename __promote_imp<__xcodeml_template_type_0_1,void,void,expression>::type __type2;
                                                                                              ^
                                                                                              ;
vec.cpp:2442:78: error: use of undeclared identifier 'expression'
private:typedef typename __promote_imp<__xcodeml_template_type_0_2,void,void,expression>::type __type3;
                                                                             ^
vec.cpp:2442:91: error: non-friend class member 'type' cannot have a qualified name
private:typedef typename __promote_imp<__xcodeml_template_type_0_2,void,void,expression>::type __type3;
                                                                                        ~~^
vec.cpp:2442:91: error: typedef declarator cannot be qualified
private:typedef typename __promote_imp<__xcodeml_template_type_0_2,void,void,expression>::type __type3;
                                                                                        ~~^
vec.cpp:2442:95: error: expected ';' at end of declaration list
private:typedef typename __promote_imp<__xcodeml_template_type_0_2,void,void,expression>::type __type3;
                                                                                              ^
                                                                                              ;
vec.cpp:2449:78: error: use of undeclared identifier 'expression'
private:typedef typename __promote_imp<__xcodeml_template_type_0_0,void,void,expression>::type __type1;
                                                                             ^
vec.cpp:2449:91: error: non-friend class member 'type' cannot have a qualified name
private:typedef typename __promote_imp<__xcodeml_template_type_0_0,void,void,expression>::type __type1;
                                                                                        ~~^
vec.cpp:2449:91: error: typedef declarator cannot be qualified
private:typedef typename __promote_imp<__xcodeml_template_type_0_0,void,void,expression>::type __type1;
                                                                                        ~~^
vec.cpp:2449:95: error: expected ';' at end of declaration list
private:typedef typename __promote_imp<__xcodeml_template_type_0_0,void,void,expression>::type __type1;
                                                                                              ^
                                                                                              ;
vec.cpp:2450:78: error: use of undeclared identifier 'expression'
private:typedef typename __promote_imp<__xcodeml_template_type_0_1,void,void,expression>::type __type2;
                                                                             ^
vec.cpp:2450:91: error: non-friend class member 'type' cannot have a qualified name
private:typedef typename __promote_imp<__xcodeml_template_type_0_1,void,void,expression>::type __type2;
                                                                                        ~~^
vec.cpp:2450:91: error: typedef declarator cannot be qualified
private:typedef typename __promote_imp<__xcodeml_template_type_0_1,void,void,expression>::type __type2;
                                                                                        ~~^
vec.cpp:2450:95: error: expected ';' at end of declaration list
private:typedef typename __promote_imp<__xcodeml_template_type_0_1,void,void,expression>::type __type2;
                                                                                              ^
                                                                                              ;
vec.cpp:2461:242: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __promote:public __promote_imp<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1,__xcodeml_template_type_0_2,expression>{}
                                                                                                                                                                                                                                                 ^
vec.cpp:2468:192: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,unsigned long _Size>class __find_first<__type_list<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>,expression,1>{public:typedef __xcodeml_template_type_0_0 type;
                                                                                                                                                                                               ^
vec.cpp:2471:192: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,unsigned long _Size>class __find_first<__type_list<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>,expression,0>{public:typedef typename __find_first<__xcodeml_template_type_0_1,expression,expression>::type type;
                                                                                                                                                                                               ^
vec.cpp:2502:389: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>class __make_signed<__xcodeml_template_type_0_0,1>{public:typedef typename __find_first<class::std::__1::__type_list<signed char,class::std::__1::__type_list<short,class::std::__1::__type_list<int,class::std::__1::__type_list<long,class::std::__1::__type_list<long long,class::std::__1::__type_list<__int128,class::std::__1::__nat> > > > > >,expression,expression>::type type;
                                                                                                                                                                                                                                                                                                                                                                                                    ^
vec.cpp:2502:413: error: non-friend class member 'type' cannot have a qualified name
template<typename __xcodeml_template_type_0_0>class __make_signed<__xcodeml_template_type_0_0,1>{public:typedef typename __find_first<class::std::__1::__type_list<signed char,class::std::__1::__type_list<short,class::std::__1::__type_list<int,class::std::__1::__type_list<long,class::std::__1::__type_list<long long,class::std::__1::__type_list<__int128,class::std::__1::__nat> > > > > >,expression,expression>::type type;
                                                                                                                                                                                                                                                                                                                                                                                                                          ~~^
vec.cpp:2502:413: error: typedef declarator cannot be qualified
template<typename __xcodeml_template_type_0_0>class __make_signed<__xcodeml_template_type_0_0,1>{public:typedef typename __find_first<class::std::__1::__type_list<signed char,class::std::__1::__type_list<short,class::std::__1::__type_list<int,class::std::__1::__type_list<long,class::std::__1::__type_list<long long,class::std::__1::__type_list<__int128,class::std::__1::__nat> > > > > >,expression,expression>::type type;
                                                                                                                                                                                                                                                                                                                                                                                                                          ~~^
vec.cpp:2502:417: error: expected ';' at end of declaration list
template<typename __xcodeml_template_type_0_0>class __make_signed<__xcodeml_template_type_0_0,1>{public:typedef typename __find_first<class::std::__1::__type_list<signed char,class::std::__1::__type_list<short,class::std::__1::__type_list<int,class::std::__1::__type_list<long,class::std::__1::__type_list<long long,class::std::__1::__type_list<__int128,class::std::__1::__nat> > > > > >,expression,expression>::type type;
                                                                                                                                                                                                                                                                                                                                                                                                                                ^
                                                                                                                                                                                                                                                                                                                                                                                                                                ;
vec.cpp:2537:205: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>class make_signed{public:typedef typename __apply_cv<__xcodeml_template_type_0_0,typename __make_signed<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>::type,expression,expression>::type type;
                                                                                                                                                                                                            ^
vec.cpp:2537:218: error: no type named 'type' in the global namespace
template<typename __xcodeml_template_type_0_0>class make_signed{public:typedef typename __apply_cv<__xcodeml_template_type_0_0,typename __make_signed<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>::type,expression,expression>::type type;
                                                                                                                                                                                                                       ~~^
vec.cpp:2537:247: error: non-friend class member 'type' cannot have a qualified name
template<typename __xcodeml_template_type_0_0>class make_signed{public:typedef typename __apply_cv<__xcodeml_template_type_0_0,typename __make_signed<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>::type,expression,expression>::type type;
                                                                                                                                                                                                                                                    ~~^
vec.cpp:2537:247: error: typedef declarator cannot be qualified
template<typename __xcodeml_template_type_0_0>class make_signed{public:typedef typename __apply_cv<__xcodeml_template_type_0_0,typename __make_signed<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>::type,expression,expression>::type type;
                                                                                                                                                                                                                                                    ~~^
vec.cpp:2537:251: error: expected ';' at end of declaration list
template<typename __xcodeml_template_type_0_0>class make_signed{public:typedef typename __apply_cv<__xcodeml_template_type_0_0,typename __make_signed<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>::type,expression,expression>::type type;
                                                                                                                                                                                                                                                          ^
                                                                                                                                                                                                                                                          ;
vec.cpp:2545:438: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>class __make_unsigned<__xcodeml_template_type_0_0,1>{public:typedef typename __find_first<class::std::__1::__type_list<unsigned char,class::std::__1::__type_list<unsigned short,class::std::__1::__type_list<unsigned int,class::std::__1::__type_list<unsigned long,class::std::__1::__type_list<unsigned long long,class::std::__1::__type_list<unsigned __int128,class::std::__1::__nat> > > > > >,expression,expression>::type type;
                                                                                                                                                                                                                                                                                                                                                                                                                                                     ^
vec.cpp:2545:462: error: non-friend class member 'type' cannot have a qualified name
template<typename __xcodeml_template_type_0_0>class __make_unsigned<__xcodeml_template_type_0_0,1>{public:typedef typename __find_first<class::std::__1::__type_list<unsigned char,class::std::__1::__type_list<unsigned short,class::std::__1::__type_list<unsigned int,class::std::__1::__type_list<unsigned long,class::std::__1::__type_list<unsigned long long,class::std::__1::__type_list<unsigned __int128,class::std::__1::__nat> > > > > >,expression,expression>::type type;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                           ~~^
vec.cpp:2545:462: error: typedef declarator cannot be qualified
template<typename __xcodeml_template_type_0_0>class __make_unsigned<__xcodeml_template_type_0_0,1>{public:typedef typename __find_first<class::std::__1::__type_list<unsigned char,class::std::__1::__type_list<unsigned short,class::std::__1::__type_list<unsigned int,class::std::__1::__type_list<unsigned long,class::std::__1::__type_list<unsigned long long,class::std::__1::__type_list<unsigned __int128,class::std::__1::__nat> > > > > >,expression,expression>::type type;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                           ~~^
vec.cpp:2545:466: error: expected ';' at end of declaration list
template<typename __xcodeml_template_type_0_0>class __make_unsigned<__xcodeml_template_type_0_0,1>{public:typedef typename __find_first<class::std::__1::__type_list<unsigned char,class::std::__1::__type_list<unsigned short,class::std::__1::__type_list<unsigned int,class::std::__1::__type_list<unsigned long,class::std::__1::__type_list<unsigned long long,class::std::__1::__type_list<unsigned __int128,class::std::__1::__nat> > > > > >,expression,expression>::type type;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 ^
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 ;
vec.cpp:2580:209: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>class make_unsigned{public:typedef typename __apply_cv<__xcodeml_template_type_0_0,typename __make_unsigned<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>::type,expression,expression>::type type;
                                                                                                                                                                                                                ^
vec.cpp:2580:222: error: no type named 'type' in the global namespace
template<typename __xcodeml_template_type_0_0>class make_unsigned{public:typedef typename __apply_cv<__xcodeml_template_type_0_0,typename __make_unsigned<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>::type,expression,expression>::type type;
                                                                                                                                                                                                                           ~~^
vec.cpp:2580:251: error: non-friend class member 'type' cannot have a qualified name
template<typename __xcodeml_template_type_0_0>class make_unsigned{public:typedef typename __apply_cv<__xcodeml_template_type_0_0,typename __make_unsigned<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>::type,expression,expression>::type type;
                                                                                                                                                                                                                                                        ~~^
vec.cpp:2580:251: error: typedef declarator cannot be qualified
template<typename __xcodeml_template_type_0_0>class make_unsigned{public:typedef typename __apply_cv<__xcodeml_template_type_0_0,typename __make_unsigned<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>::type,expression,expression>::type type;
                                                                                                                                                                                                                                                        ~~^
vec.cpp:2580:255: error: expected ';' at end of declaration list
template<typename __xcodeml_template_type_0_0>class make_unsigned{public:typedef typename __apply_cv<__xcodeml_template_type_0_0,typename __make_unsigned<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>::type,expression,expression>::type type;
                                                                                                                                                                                                                                                              ^
                                                                                                                                                                                                                                                              ;
vec.cpp:2588:193: error: expected expression
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __common_type2_imp<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1,typename __void_t<decltype ()>::type>{public:typedef typename decay<decltype ()>::type type;
                                                                                                                                                                                                ^
vec.cpp:2588:197: error: no type named 'type' in the global namespace
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __common_type2_imp<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1,typename __void_t<decltype ()>::type>{public:typedef typename decay<decltype ()>::type type;
                                                                                                                                                                                                  ~~^
vec.cpp:2598:124: error: expected expression
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __common_type_impl<__common_types<...>,typename __void_t<typename common_type<...>::type>::type>{public:typedef typename common_type<...>::type type;
                                                                                                                           ^
vec.cpp:2598:128: error: expected a type
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __common_type_impl<__common_types<...>,typename __void_t<typename common_type<...>::type>::type>{public:typedef typename common_type<...>::type type;
                                                                                                                               ^
vec.cpp:2601:198: error: expected expression
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3>class __common_type_impl<__common_types<...>,typename __void_t<typename common_type<...>::type>::type>:public __common_type_impl<__common_types<...>,void>{}
                                                                                                                                                                                                     ^
vec.cpp:2601:202: error: expected a type
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3>class __common_type_impl<__common_types<...>,typename __void_t<typename common_type<...>::type>::type>:public __common_type_impl<__common_types<...>,void>{}
                                                                                                                                                                                                         ^
vec.cpp:2601:311: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3>class __common_type_impl<__common_types<...>,typename __void_t<typename common_type<...>::type>::type>:public __common_type_impl<__common_types<...>,void>{}
                                                                                                                                                                                                                                                                                                                      ^
vec.cpp:2603:29: error: expected expression
template<>class common_type<...>{}
                            ^
vec.cpp:2605:65: error: expected expression
template<typename __xcodeml_template_type_0_0>class common_type<...>:public common_type<...>{}
                                                                ^
vec.cpp:2607:102: error: expected expression
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class common_type<...>:public/**/{}
                                                                                                     ^
vec.cpp:2609:176: error: expected expression
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3>class common_type<...>:public __common_type_impl<__common_types<...>,void>{}
                                                                                                                                                                               ^
vec.cpp:2611:88: error: expected expression
template<typename __xcodeml_template_type_0_0>using common_type_t=typename common_type<...>::type;
                                                                                       ^
vec.cpp:2611:94: error: expected ';' after alias declaration
template<typename __xcodeml_template_type_0_0>using common_type_t=typename common_type<...>::type;
                                                                                             ^
                                                                                             ;
vec.cpp:2616:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:2620:116: error: expected expression
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>typename __select_2nd<decltype (),class::std::__1::integral_constant<bool,1> >::type __is_assignable_test(int)
                                                                                                                   ^
vec.cpp:2620:161: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>typename __select_2nd<decltype (),class::std::__1::integral_constant<bool,1> >::type __is_assignable_test(int)
                                                                                                                                                                ^
vec.cpp:2630:17: error: explicit specialization of undeclared template class '__is_assignable_imp'
template<>class __is_assignable_imp<unsigned long&,unsigned long const&,0>:public integral_constant<bool,1>{}
                ^                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:2630:110: error: expected ';' after class
template<>class __is_assignable_imp<unsigned long&,unsigned long const&,0>:public integral_constant<bool,1>{}
                                                                                                             ^
                                                                                                             ;
vec.cpp:2631:17: error: explicit specialization of non-template class '__is_assignable_imp'
template<>class __is_assignable_imp<unsigned long&,unsigned long(*),0>:public integral_constant<bool,1>{}
                ^                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:2631:17: error: redefinition of '__is_assignable_imp'
vec.cpp:2630:17: note: previous definition is here
template<>class __is_assignable_imp<unsigned long&,unsigned long const&,0>:public integral_constant<bool,1>{}
                ^
vec.cpp:2631:106: error: expected ';' after class
template<>class __is_assignable_imp<unsigned long&,unsigned long(*),0>:public integral_constant<bool,1>{}
                                                                                                         ^
                                                                                                         ;
vec.cpp:2632:17: error: explicit specialization of non-template class '__is_assignable_imp'
template<>class __is_assignable_imp<int(*&),int(*(*)),0>:public integral_constant<bool,1>{}
                ^                  ~~~~~~~~~~~~~~~~~~~~~
vec.cpp:2632:17: error: redefinition of '__is_assignable_imp'
vec.cpp:2630:17: note: previous definition is here
template<>class __is_assignable_imp<unsigned long&,unsigned long const&,0>:public integral_constant<bool,1>{}
                ^
vec.cpp:2634:90: error: explicit specialization of non-template class '__is_assignable_imp'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __is_assignable_imp<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1,1>:public integral_constant<bool,0>{}
                                                                                         ^                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:2634:90: error: redefinition of '__is_assignable_imp' as different kind of symbol
vec.cpp:2630:17: note: previous definition is here
template<>class __is_assignable_imp<unsigned long&,unsigned long const&,0>:public integral_constant<bool,1>{}
                ^
vec.cpp:2636:111: error: unknown template name '__is_assignable_imp'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class is_assignable:public __is_assignable_imp<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1,expression>{}
                                                                                                              ^
vec.cpp:2636:187: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class is_assignable:public __is_assignable_imp<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1,expression>{}
                                                                                                                                                                                          ^
vec.cpp:2638:75: error: unknown template name '__is_assignable_imp'
template<>class is_assignable<unsigned long&,unsigned long const&>:public __is_assignable_imp<unsigned long&,unsigned long const&,0>{}
                                                                          ^
vec.cpp:2638:135: error: expected ';' after class
template<>class is_assignable<unsigned long&,unsigned long const&>:public __is_assignable_imp<unsigned long&,unsigned long const&,0>{}
                                                                                                                                      ^
                                                                                                                                      ;
vec.cpp:2639:71: error: unknown template name '__is_assignable_imp'
template<>class is_assignable<unsigned long&,unsigned long(*)>:public __is_assignable_imp<unsigned long&,unsigned long(*),0>{}
                                                                      ^
vec.cpp:2639:127: error: expected ';' after class
template<>class is_assignable<unsigned long&,unsigned long(*)>:public __is_assignable_imp<unsigned long&,unsigned long(*),0>{}
                                                                                                                              ^
                                                                                                                              ;
vec.cpp:2640:57: error: unknown template name '__is_assignable_imp'
template<>class is_assignable<int(*&),int(*(*))>:public __is_assignable_imp<int(*&),int(*(*)),0>{}
                                                        ^
vec.cpp:2648:106: error: expected ';' after class
template<>class is_move_assignable<unsigned long>:public is_assignable<unsigned long&,unsigned long(*)>{}
                                                                                                         ^
                                                                                                         ;
vec.cpp:2655:195: error: expected expression
template<typename __xcodeml_template_type_0_0>class __is_destructor_wellformed{public:template<typename __xcodeml_template_type_1_0>static char __test(typename __is_destructible_apply<decltype ()>::type)
                                                                                                                                                                                                  ^
vec.cpp:2655:199: error: parameter declarator cannot be qualified
template<typename __xcodeml_template_type_0_0>class __is_destructor_wellformed{public:template<typename __xcodeml_template_type_1_0>static char __test(typename __is_destructible_apply<decltype ()>::type)
                                                                                                                                                                                                    ~~^
vec.cpp:2655:204: error: expected ';' at end of declaration list
template<typename __xcodeml_template_type_0_0>class __is_destructor_wellformed{public:template<typename __xcodeml_template_type_1_0>static char __test(typename __is_destructible_apply<decltype ()>::type)
                                                                                                                                                                                                           ^
                                                                                                                                                                                                           ;
vec.cpp:2663:133: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>class __destructible_imp<__xcodeml_template_type_0_0,0>:public integral_constant<bool,expression>{}
                                                                                                                                    ^
vec.cpp:2669:159: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>class __destructible_false<__xcodeml_template_type_0_0,0>:public __destructible_imp<__xcodeml_template_type_0_0,expression>{}
                                                                                                                                                              ^
vec.cpp:2673:125: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>class is_destructible:public __destructible_false<__xcodeml_template_type_0_0,expression>{}
                                                                                                                            ^
vec.cpp:2676:53: error: class template partial specialization does not specialize any template argument; to define the primary template, remove the template argument list
template<typename __xcodeml_template_type_0_0>class is_destructible<__xcodeml_template_type_0_0>:public integral_constant<bool,0>{}
                                                    ^              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:2676:53: error: redefinition of 'is_destructible'
vec.cpp:2673:53: note: previous definition is here
template<typename __xcodeml_template_type_0_0>class is_destructible:public __destructible_false<__xcodeml_template_type_0_0,expression>{}
                                                    ^
vec.cpp:2683:27: error: no function template matches function template specialization 'move'
template <>unsigned long(*move(unsigned long&__t)){typedef unsigned long _Up;
                          ^
vec.cpp:2680:109: note: candidate template ignored: could not match 'type-parameter-0-0 *' against 'unsigned long &'
template<typename __xcodeml_template_type_0_0>typename remove_reference<__xcodeml_template_type_0_0>::type(*move(__xcodeml_template_type_0_0(*__t))){typedef typename remove_reference<__xcodeml_template_type_0_0>::type _Up;
                                                                                                            ^
vec.cpp:2684:8: error: cannot cast from type 'unsigned long' to pointer type 'unsigned long (*)'
return static_cast<unsigned long(*)>(__t);
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:2686:29: error: no member named '__builtin_new_allocator' in namespace 'std::__1'
template <>class::std::__1::__builtin_new_allocator::__builtin_new_deleter(*move(class::std::__1::__builtin_new_allocator::__builtin_new_deleter&__t)){typedef class::std::__1::__builtin_new_allocator::__builtin_new_deleter _Up;
                ~~~~~~~~~~~~^
vec.cpp:2686:99: error: no member named '__builtin_new_allocator' in namespace 'std::__1'
template <>class::std::__1::__builtin_new_allocator::__builtin_new_deleter(*move(class::std::__1::__builtin_new_allocator::__builtin_new_deleter&__t)){typedef class::std::__1::__builtin_new_allocator::__builtin_new_deleter _Up;
                                                                                      ~~~~~~~~~~~~^
vec.cpp:2686:177: error: no member named '__builtin_new_allocator' in namespace 'std::__1'
template <>class::std::__1::__builtin_new_allocator::__builtin_new_deleter(*move(class::std::__1::__builtin_new_allocator::__builtin_new_deleter&__t)){typedef class::std::__1::__builtin_new_allocator::__builtin_new_deleter _Up;
                                                                                                                                                                    ~~~~~~~~~~~~^
vec.cpp:2687:37: error: no member named '__builtin_new_allocator' in namespace 'std::__1'
return static_cast<class::std::__1::__builtin_new_allocator::__builtin_new_deleter(*)>(__t);
                        ~~~~~~~~~~~~^
vec.cpp:2689:17: error: no function template matches function template specialization 'move'
template <>int(*move(int&__t)){typedef int _Up;
                ^
vec.cpp:2680:109: note: candidate template ignored: could not match 'type-parameter-0-0 *' against 'int &'
template<typename __xcodeml_template_type_0_0>typename remove_reference<__xcodeml_template_type_0_0>::type(*move(__xcodeml_template_type_0_0(*__t))){typedef typename remove_reference<__xcodeml_template_type_0_0>::type _Up;
                                                                                                            ^
vec.cpp:2690:8: error: cannot cast from type 'int' to pointer type 'int (*)'
return static_cast<int(*)>(__t);
       ^~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:2692:19: error: no function template matches function template specialization 'move'
template <>int(*(*move(int(*&__t)))){typedef int(*_Up);
                  ^
vec.cpp:2680:109: note: candidate template ignored: could not match 'type-parameter-0-0 *' against 'int *&'
template<typename __xcodeml_template_type_0_0>typename remove_reference<__xcodeml_template_type_0_0>::type(*move(__xcodeml_template_type_0_0(*__t))){typedef typename remove_reference<__xcodeml_template_type_0_0>::type _Up;
                                                                                                            ^
vec.cpp:2693:8: error: static_cast from 'int (*)' to 'int (*(*))' is not allowed
return static_cast<int(*(*))>(__t);
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:2697:62: error: cannot cast from type 'unsigned long' to pointer type 'unsigned long (*)'
template <>unsigned long(*forward(unsigned long&__t)){return static_cast<unsigned long(*)>(__t);
                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:2699:19: error: no function template matches function template specialization 'forward'
template <>void(*&forward(void(*&__t))){return static_cast<void(*&)>(__t);
                  ^
vec.cpp:2695:76: note: candidate template ignored: could not match 'type-parameter-0-0 *' against 'void *&'
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0(*forward(typename remove_reference<__xcodeml_template_type_0_0>::type&__t)){return static_cast<__xcodeml_template_type_0_0(*)>(__t);
                                                                           ^
vec.cpp:2701:29: error: no member named '__builtin_new_allocator' in namespace 'std::__1'
template <>class::std::__1::__builtin_new_allocator::__builtin_new_deleter(*forward(class::std::__1::__builtin_new_allocator::__builtin_new_deleter&__t)){return static_cast<class::std::__1::__builtin_new_allocator::__builtin_new_deleter(*)>(__t);
                ~~~~~~~~~~~~^
vec.cpp:2701:102: error: no member named '__builtin_new_allocator' in namespace 'std::__1'
template <>class::std::__1::__builtin_new_allocator::__builtin_new_deleter(*forward(class::std::__1::__builtin_new_allocator::__builtin_new_deleter&__t)){return static_cast<class::std::__1::__builtin_new_allocator::__builtin_new_deleter(*)>(__t);
                                                                                         ~~~~~~~~~~~~^
vec.cpp:2701:191: error: no member named '__builtin_new_allocator' in namespace 'std::__1'
template <>class::std::__1::__builtin_new_allocator::__builtin_new_deleter(*forward(class::std::__1::__builtin_new_allocator::__builtin_new_deleter&__t)){return static_cast<class::std::__1::__builtin_new_allocator::__builtin_new_deleter(*)>(__t);
                                                                                                                                                                                  ~~~~~~~~~~~~^
vec.cpp:2703:20: error: no function template matches function template specialization 'forward'
template <>void(*(*forward(void(*&__t)))){return static_cast<void(*(*))>(__t);
                   ^
vec.cpp:2695:76: note: candidate template ignored: substitution failure [with __xcodeml_template_type_0_0 = void *]: cannot form a reference to 'void'
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0(*forward(typename remove_reference<__xcodeml_template_type_0_0>::type&__t)){return static_cast<__xcodeml_template_type_0_0(*)>(__t);
                                                                           ^                                                                   ~
vec.cpp:2705:54: error: cannot cast from type 'std::nullptr_t' (aka 'int') to pointer type 'std::nullptr_t (*)' (aka 'int *')
template <>nullptr_t(*forward(nullptr_t&__t)){return static_cast<nullptr_t(*)>(__t);
                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:2707:17: error: redefinition of 'forward'
template <>int(*forward(int&__t)){return static_cast<int(*)>(__t);
                ^
vec.cpp:2705:23: note: previous definition is here
template <>nullptr_t(*forward(nullptr_t&__t)){return static_cast<nullptr_t(*)>(__t);
                      ^
vec.cpp:2707:42: error: cannot cast from type 'int' to pointer type 'int (*)'
template <>int(*forward(int&__t)){return static_cast<int(*)>(__t);
                                         ^~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:2709:44: error: no function template matches function template specialization 'forward'
template <>class::std::__1::allocator<int>&forward(class::std::__1::allocator<int>&__t){return static_cast<class::std::__1::allocator<int>&>(__t);
                                           ^
vec.cpp:2695:76: note: candidate template ignored: could not match 'type-parameter-0-0 *' against 'std::__1::allocator<int> &'
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0(*forward(typename remove_reference<__xcodeml_template_type_0_0>::type&__t)){return static_cast<__xcodeml_template_type_0_0(*)>(__t);
                                                                           ^
vec.cpp:2711:211: error: expected ';' after expression
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0(*forward(typename remove_reference<__xcodeml_template_type_0_0>::type(*__t))){(!is_lvalue_reference<__xcodeml_template_type_0_0>::value)"can not forward an rvalue as an lvalue";
                                                                                                                                                                                                                  ^
                                                                                                                                                                                                                  ;
vec.cpp:2711:211: warning: expression result unused [-Wunused-value]
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0(*forward(typename remove_reference<__xcodeml_template_type_0_0>::type(*__t))){(!is_lvalue_reference<__xcodeml_template_type_0_0>::value)"can not forward an rvalue as an lvalue";
                                                                                                                                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:2714:162: error: no member named '__xcodeml_template_type_0_0' in namespace 'std::__1'
template<typename __xcodeml_template_type_0_0>typename decay<__xcodeml_template_type_0_0>::type __decay_copy(__xcodeml_template_type_0_0(*__t)){return(std::__1::__xcodeml_template_type_0_0(__t));
                                                                                                                                                       ~~~~~~~~~~^
vec.cpp:2716:127: error: class template partial specialization contains template parameters that cannot be deduced; this partial specialization will never be used [-Wunusable-partial-specialization]
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/),1,0>{public:typedef __xcodeml_template_type_0_1 _ClassType;
                                                                                                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:2716:56: note: non-deducible template parameter '__xcodeml_template_type_0_1'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/),1,0>{public:typedef __xcodeml_template_type_0_1 _ClassType;
                                                       ^
vec.cpp:2716:93: note: non-deducible template parameter '__xcodeml_template_type_0_2'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/),1,0>{public:typedef __xcodeml_template_type_0_1 _ClassType;
                                                                                            ^
vec.cpp:2721:237: error: 'void' must be the first and only parameter if specified
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/,...),1,0>{public:typedef __xcodeml_template_type_0_1 _ClassType;
                                                                                                                                                                                                                                            ^
vec.cpp:2721:127: error: class template partial specialization contains template parameters that cannot be deduced; this partial specialization will never be used [-Wunusable-partial-specialization]
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/,...),1,0>{public:typedef __xcodeml_template_type_0_1 _ClassType;
                                                                                                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:2721:56: note: non-deducible template parameter '__xcodeml_template_type_0_1'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/,...),1,0>{public:typedef __xcodeml_template_type_0_1 _ClassType;
                                                       ^
vec.cpp:2721:93: note: non-deducible template parameter '__xcodeml_template_type_0_2'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/,...),1,0>{public:typedef __xcodeml_template_type_0_1 _ClassType;
                                                                                            ^
vec.cpp:2723:51: error: 'void' must be the first and only parameter if specified
public:typedef __xcodeml_template_type_0_0 _FnType(void/**/,...);
                                                  ^
vec.cpp:2726:127: error: class template partial specialization contains template parameters that cannot be deduced; this partial specialization will never be used [-Wunusable-partial-specialization]
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/)const,1,0>{public:typedef __xcodeml_template_type_0_1 const _ClassType;
                                                                                                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:2726:56: note: non-deducible template parameter '__xcodeml_template_type_0_1'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/)const,1,0>{public:typedef __xcodeml_template_type_0_1 const _ClassType;
                                                       ^
vec.cpp:2726:93: note: non-deducible template parameter '__xcodeml_template_type_0_2'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/)const,1,0>{public:typedef __xcodeml_template_type_0_1 const _ClassType;
                                                                                            ^
vec.cpp:2731:237: error: 'void' must be the first and only parameter if specified
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/,...)const,1,0>{public:typedef __xcodeml_template_type_0_1 const _ClassType;
                                                                                                                                                                                                                                            ^
vec.cpp:2731:127: error: class template partial specialization contains template parameters that cannot be deduced; this partial specialization will never be used [-Wunusable-partial-specialization]
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/,...)const,1,0>{public:typedef __xcodeml_template_type_0_1 const _ClassType;
                                                                                                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:2731:56: note: non-deducible template parameter '__xcodeml_template_type_0_1'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/,...)const,1,0>{public:typedef __xcodeml_template_type_0_1 const _ClassType;
                                                       ^
vec.cpp:2731:93: note: non-deducible template parameter '__xcodeml_template_type_0_2'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/,...)const,1,0>{public:typedef __xcodeml_template_type_0_1 const _ClassType;
                                                                                            ^
vec.cpp:2733:51: error: 'void' must be the first and only parameter if specified
public:typedef __xcodeml_template_type_0_0 _FnType(void/**/,...);
                                                  ^
vec.cpp:2736:127: error: class template partial specialization contains template parameters that cannot be deduced; this partial specialization will never be used [-Wunusable-partial-specialization]
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/)volatile,1,0>{public:typedef __xcodeml_template_type_0_1 volatile _ClassType;
                                                                                                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:2736:56: note: non-deducible template parameter '__xcodeml_template_type_0_1'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/)volatile,1,0>{public:typedef __xcodeml_template_type_0_1 volatile _ClassType;
                                                       ^
vec.cpp:2736:93: note: non-deducible template parameter '__xcodeml_template_type_0_2'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/)volatile,1,0>{public:typedef __xcodeml_template_type_0_1 volatile _ClassType;
                                                                                            ^
vec.cpp:2741:237: error: 'void' must be the first and only parameter if specified
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/,...)volatile,1,0>{public:typedef __xcodeml_template_type_0_1 volatile _ClassType;
                                                                                                                                                                                                                                            ^
vec.cpp:2741:127: error: class template partial specialization contains template parameters that cannot be deduced; this partial specialization will never be used [-Wunusable-partial-specialization]
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/,...)volatile,1,0>{public:typedef __xcodeml_template_type_0_1 volatile _ClassType;
                                                                                                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:2741:56: note: non-deducible template parameter '__xcodeml_template_type_0_1'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/,...)volatile,1,0>{public:typedef __xcodeml_template_type_0_1 volatile _ClassType;
                                                       ^
vec.cpp:2741:93: note: non-deducible template parameter '__xcodeml_template_type_0_2'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/,...)volatile,1,0>{public:typedef __xcodeml_template_type_0_1 volatile _ClassType;
                                                                                            ^
vec.cpp:2743:51: error: 'void' must be the first and only parameter if specified
public:typedef __xcodeml_template_type_0_0 _FnType(void/**/,...);
                                                  ^
vec.cpp:2746:127: error: class template partial specialization contains template parameters that cannot be deduced; this partial specialization will never be used [-Wunusable-partial-specialization]
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/)const volatile,1,0>{public:typedef __xcodeml_template_type_0_1 volatile const _ClassType;
                                                                                                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:2746:56: note: non-deducible template parameter '__xcodeml_template_type_0_1'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/)const volatile,1,0>{public:typedef __xcodeml_template_type_0_1 volatile const _ClassType;
                                                       ^
vec.cpp:2746:93: note: non-deducible template parameter '__xcodeml_template_type_0_2'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/)const volatile,1,0>{public:typedef __xcodeml_template_type_0_1 volatile const _ClassType;
                                                                                            ^
vec.cpp:2751:237: error: 'void' must be the first and only parameter if specified
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/,...)const volatile,1,0>{public:typedef __xcodeml_template_type_0_1 volatile const _ClassType;
                                                                                                                                                                                                                                            ^
vec.cpp:2751:127: error: class template partial specialization contains template parameters that cannot be deduced; this partial specialization will never be used [-Wunusable-partial-specialization]
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/,...)const volatile,1,0>{public:typedef __xcodeml_template_type_0_1 volatile const _ClassType;
                                                                                                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:2751:56: note: non-deducible template parameter '__xcodeml_template_type_0_1'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/,...)const volatile,1,0>{public:typedef __xcodeml_template_type_0_1 volatile const _ClassType;
                                                       ^
vec.cpp:2751:93: note: non-deducible template parameter '__xcodeml_template_type_0_2'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/,...)const volatile,1,0>{public:typedef __xcodeml_template_type_0_1 volatile const _ClassType;
                                                                                            ^
vec.cpp:2753:51: error: 'void' must be the first and only parameter if specified
public:typedef __xcodeml_template_type_0_0 _FnType(void/**/,...);
                                                  ^
vec.cpp:2756:127: error: class template partial specialization contains template parameters that cannot be deduced; this partial specialization will never be used [-Wunusable-partial-specialization]
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/),1,0>{public:typedef __xcodeml_template_type_0_1&_ClassType;
                                                                                                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:2756:56: note: non-deducible template parameter '__xcodeml_template_type_0_1'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/),1,0>{public:typedef __xcodeml_template_type_0_1&_ClassType;
                                                       ^
vec.cpp:2756:93: note: non-deducible template parameter '__xcodeml_template_type_0_2'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/),1,0>{public:typedef __xcodeml_template_type_0_1&_ClassType;
                                                                                            ^
vec.cpp:2756:127: error: redefinition of '__member_pointer_traits_imp<__xcodeml_template_type_0_0 (__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(), 1, 0>'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/),1,0>{public:typedef __xcodeml_template_type_0_1&_ClassType;
                                                                                                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:2716:127: note: previous definition is here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/),1,0>{public:typedef __xcodeml_template_type_0_1 _ClassType;
                                                                                                                              ^
vec.cpp:2761:237: error: 'void' must be the first and only parameter if specified
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/,...),1,0>{public:typedef __xcodeml_template_type_0_1&_ClassType;
                                                                                                                                                                                                                                            ^
vec.cpp:2761:127: error: class template partial specialization contains template parameters that cannot be deduced; this partial specialization will never be used [-Wunusable-partial-specialization]
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/,...),1,0>{public:typedef __xcodeml_template_type_0_1&_ClassType;
                                                                                                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:2761:56: note: non-deducible template parameter '__xcodeml_template_type_0_1'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/,...),1,0>{public:typedef __xcodeml_template_type_0_1&_ClassType;
                                                       ^
vec.cpp:2761:93: note: non-deducible template parameter '__xcodeml_template_type_0_2'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/,...),1,0>{public:typedef __xcodeml_template_type_0_1&_ClassType;
                                                                                            ^
vec.cpp:2761:127: error: redefinition of '__member_pointer_traits_imp<__xcodeml_template_type_0_0 (__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(int, ...), 1, 0>'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/,...),1,0>{public:typedef __xcodeml_template_type_0_1&_ClassType;
                                                                                                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:2721:127: note: previous definition is here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/,...),1,0>{public:typedef __xcodeml_template_type_0_1 _ClassType;
                                                                                                                              ^
vec.cpp:2766:127: error: class template partial specialization contains template parameters that cannot be deduced; this partial specialization will never be used [-Wunusable-partial-specialization]
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/)const,1,0>{public:typedef __xcodeml_template_type_0_1 const&_ClassType;
                                                                                                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:2766:56: note: non-deducible template parameter '__xcodeml_template_type_0_1'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/)const,1,0>{public:typedef __xcodeml_template_type_0_1 const&_ClassType;
                                                       ^
vec.cpp:2766:93: note: non-deducible template parameter '__xcodeml_template_type_0_2'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/)const,1,0>{public:typedef __xcodeml_template_type_0_1 const&_ClassType;
                                                                                            ^
vec.cpp:2766:127: error: redefinition of '__member_pointer_traits_imp<__xcodeml_template_type_0_0 (__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)() const, 1, 0>'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/)const,1,0>{public:typedef __xcodeml_template_type_0_1 const&_ClassType;
                                                                                                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:2726:127: note: previous definition is here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/)const,1,0>{public:typedef __xcodeml_template_type_0_1 const _ClassType;
                                                                                                                              ^
vec.cpp:2771:237: error: 'void' must be the first and only parameter if specified
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/,...)const,1,0>{public:typedef __xcodeml_template_type_0_1 const&_ClassType;
                                                                                                                                                                                                                                            ^
vec.cpp:2771:127: error: class template partial specialization contains template parameters that cannot be deduced; this partial specialization will never be used [-Wunusable-partial-specialization]
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/,...)const,1,0>{public:typedef __xcodeml_template_type_0_1 const&_ClassType;
                                                                                                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:2771:56: note: non-deducible template parameter '__xcodeml_template_type_0_1'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/,...)const,1,0>{public:typedef __xcodeml_template_type_0_1 const&_ClassType;
                                                       ^
vec.cpp:2771:93: note: non-deducible template parameter '__xcodeml_template_type_0_2'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/,...)const,1,0>{public:typedef __xcodeml_template_type_0_1 const&_ClassType;
                                                                                            ^
vec.cpp:2771:127: error: redefinition of '__member_pointer_traits_imp<__xcodeml_template_type_0_0 (__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(int, ...) const, 1, 0>'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/,...)const,1,0>{public:typedef __xcodeml_template_type_0_1 const&_ClassType;
                                                                                                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:2731:127: note: previous definition is here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/,...)const,1,0>{public:typedef __xcodeml_template_type_0_1 const _ClassType;
                                                                                                                              ^
vec.cpp:2776:127: error: class template partial specialization contains template parameters that cannot be deduced; this partial specialization will never be used [-Wunusable-partial-specialization]
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/)volatile,1,0>{public:typedef __xcodeml_template_type_0_1 volatile&_ClassType;
                                                                                                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:2776:56: note: non-deducible template parameter '__xcodeml_template_type_0_1'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/)volatile,1,0>{public:typedef __xcodeml_template_type_0_1 volatile&_ClassType;
                                                       ^
vec.cpp:2776:93: note: non-deducible template parameter '__xcodeml_template_type_0_2'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/)volatile,1,0>{public:typedef __xcodeml_template_type_0_1 volatile&_ClassType;
                                                                                            ^
vec.cpp:2776:127: error: redefinition of '__member_pointer_traits_imp<__xcodeml_template_type_0_0 (__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)() volatile, 1, 0>'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/)volatile,1,0>{public:typedef __xcodeml_template_type_0_1 volatile&_ClassType;
                                                                                                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:2736:127: note: previous definition is here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/)volatile,1,0>{public:typedef __xcodeml_template_type_0_1 volatile _ClassType;
                                                                                                                              ^
vec.cpp:2781:237: error: 'void' must be the first and only parameter if specified
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/,...)volatile,1,0>{public:typedef __xcodeml_template_type_0_1 volatile&_ClassType;
                                                                                                                                                                                                                                            ^
vec.cpp:2781:127: error: class template partial specialization contains template parameters that cannot be deduced; this partial specialization will never be used [-Wunusable-partial-specialization]
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/,...)volatile,1,0>{public:typedef __xcodeml_template_type_0_1 volatile&_ClassType;
                                                                                                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:2781:56: note: non-deducible template parameter '__xcodeml_template_type_0_1'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/,...)volatile,1,0>{public:typedef __xcodeml_template_type_0_1 volatile&_ClassType;
                                                       ^
vec.cpp:2781:93: note: non-deducible template parameter '__xcodeml_template_type_0_2'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/,...)volatile,1,0>{public:typedef __xcodeml_template_type_0_1 volatile&_ClassType;
                                                                                            ^
vec.cpp:2781:127: error: redefinition of '__member_pointer_traits_imp<__xcodeml_template_type_0_0 (__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(int, ...) volatile, 1, 0>'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/,...)volatile,1,0>{public:typedef __xcodeml_template_type_0_1 volatile&_ClassType;
                                                                                                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:2741:127: note: previous definition is here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/,...)volatile,1,0>{public:typedef __xcodeml_template_type_0_1 volatile _ClassType;
                                                                                                                              ^
vec.cpp:2786:127: error: class template partial specialization contains template parameters that cannot be deduced; this partial specialization will never be used [-Wunusable-partial-specialization]
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/)const volatile,1,0>{public:typedef __xcodeml_template_type_0_1 volatile const&_ClassType;
                                                                                                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:2786:56: note: non-deducible template parameter '__xcodeml_template_type_0_1'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/)const volatile,1,0>{public:typedef __xcodeml_template_type_0_1 volatile const&_ClassType;
                                                       ^
vec.cpp:2786:93: note: non-deducible template parameter '__xcodeml_template_type_0_2'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/)const volatile,1,0>{public:typedef __xcodeml_template_type_0_1 volatile const&_ClassType;
                                                                                            ^
vec.cpp:2786:127: error: redefinition of '__member_pointer_traits_imp<__xcodeml_template_type_0_0 (__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)() const volatile, 1, 0>'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/)const volatile,1,0>{public:typedef __xcodeml_template_type_0_1 volatile const&_ClassType;
                                                                                                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:2746:127: note: previous definition is here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/)const volatile,1,0>{public:typedef __xcodeml_template_type_0_1 volatile const _ClassType;
                                                                                                                              ^
vec.cpp:2791:237: error: 'void' must be the first and only parameter if specified
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/,...)const volatile,1,0>{public:typedef __xcodeml_template_type_0_1 volatile const&_ClassType;
                                                                                                                                                                                                                                            ^
vec.cpp:2791:127: error: class template partial specialization contains template parameters that cannot be deduced; this partial specialization will never be used [-Wunusable-partial-specialization]
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/,...)const volatile,1,0>{public:typedef __xcodeml_template_type_0_1 volatile const&_ClassType;
                                                                                                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:2791:56: note: non-deducible template parameter '__xcodeml_template_type_0_1'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/,...)const volatile,1,0>{public:typedef __xcodeml_template_type_0_1 volatile const&_ClassType;
                                                       ^
vec.cpp:2791:93: note: non-deducible template parameter '__xcodeml_template_type_0_2'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/,...)const volatile,1,0>{public:typedef __xcodeml_template_type_0_1 volatile const&_ClassType;
                                                                                            ^
vec.cpp:2791:127: error: redefinition of '__member_pointer_traits_imp<__xcodeml_template_type_0_0 (__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(int, ...) const volatile, 1, 0>'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/,...)const volatile,1,0>{public:typedef __xcodeml_template_type_0_1 volatile const&_ClassType;
                                                                                                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:2751:127: note: previous definition is here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/,...)const volatile,1,0>{public:typedef __xcodeml_template_type_0_1 volatile const _ClassType;
                                                                                                                              ^
vec.cpp:2796:127: error: class template partial specialization contains template parameters that cannot be deduced; this partial specialization will never be used [-Wunusable-partial-specialization]
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/),1,0>{public:typedef __xcodeml_template_type_0_1(*_ClassType);
                                                                                                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:2796:56: note: non-deducible template parameter '__xcodeml_template_type_0_1'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/),1,0>{public:typedef __xcodeml_template_type_0_1(*_ClassType);
                                                       ^
vec.cpp:2796:93: note: non-deducible template parameter '__xcodeml_template_type_0_2'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/),1,0>{public:typedef __xcodeml_template_type_0_1(*_ClassType);
                                                                                            ^
vec.cpp:2796:127: error: redefinition of '__member_pointer_traits_imp<__xcodeml_template_type_0_0 (__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(), 1, 0>'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/),1,0>{public:typedef __xcodeml_template_type_0_1(*_ClassType);
                                                                                                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:2716:127: note: previous definition is here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/),1,0>{public:typedef __xcodeml_template_type_0_1 _ClassType;
                                                                                                                              ^
vec.cpp:2801:237: error: 'void' must be the first and only parameter if specified
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/,...),1,0>{public:typedef __xcodeml_template_type_0_1(*_ClassType);
                                                                                                                                                                                                                                            ^
vec.cpp:2801:127: error: class template partial specialization contains template parameters that cannot be deduced; this partial specialization will never be used [-Wunusable-partial-specialization]
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/,...),1,0>{public:typedef __xcodeml_template_type_0_1(*_ClassType);
                                                                                                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:2801:56: note: non-deducible template parameter '__xcodeml_template_type_0_1'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/,...),1,0>{public:typedef __xcodeml_template_type_0_1(*_ClassType);
                                                       ^
vec.cpp:2801:93: note: non-deducible template parameter '__xcodeml_template_type_0_2'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/,...),1,0>{public:typedef __xcodeml_template_type_0_1(*_ClassType);
                                                                                            ^
vec.cpp:2801:127: error: redefinition of '__member_pointer_traits_imp<__xcodeml_template_type_0_0 (__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(int, ...), 1, 0>'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/,...),1,0>{public:typedef __xcodeml_template_type_0_1(*_ClassType);
                                                                                                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:2721:127: note: previous definition is here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/,...),1,0>{public:typedef __xcodeml_template_type_0_1 _ClassType;
                                                                                                                              ^
vec.cpp:2806:127: error: class template partial specialization contains template parameters that cannot be deduced; this partial specialization will never be used [-Wunusable-partial-specialization]
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/)const,1,0>{public:typedef __xcodeml_template_type_0_1 const(*_ClassType);
                                                                                                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:2806:56: note: non-deducible template parameter '__xcodeml_template_type_0_1'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/)const,1,0>{public:typedef __xcodeml_template_type_0_1 const(*_ClassType);
                                                       ^
vec.cpp:2806:93: note: non-deducible template parameter '__xcodeml_template_type_0_2'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/)const,1,0>{public:typedef __xcodeml_template_type_0_1 const(*_ClassType);
                                                                                            ^
vec.cpp:2806:127: error: redefinition of '__member_pointer_traits_imp<__xcodeml_template_type_0_0 (__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)() const, 1, 0>'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/)const,1,0>{public:typedef __xcodeml_template_type_0_1 const(*_ClassType);
                                                                                                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:2726:127: note: previous definition is here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/)const,1,0>{public:typedef __xcodeml_template_type_0_1 const _ClassType;
                                                                                                                              ^
vec.cpp:2811:237: error: 'void' must be the first and only parameter if specified
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/,...)const,1,0>{public:typedef __xcodeml_template_type_0_1 const(*_ClassType);
                                                                                                                                                                                                                                            ^
vec.cpp:2811:127: error: class template partial specialization contains template parameters that cannot be deduced; this partial specialization will never be used [-Wunusable-partial-specialization]
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/,...)const,1,0>{public:typedef __xcodeml_template_type_0_1 const(*_ClassType);
                                                                                                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:2811:56: note: non-deducible template parameter '__xcodeml_template_type_0_1'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/,...)const,1,0>{public:typedef __xcodeml_template_type_0_1 const(*_ClassType);
                                                       ^
vec.cpp:2811:93: note: non-deducible template parameter '__xcodeml_template_type_0_2'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/,...)const,1,0>{public:typedef __xcodeml_template_type_0_1 const(*_ClassType);
                                                                                            ^
vec.cpp:2811:127: error: redefinition of '__member_pointer_traits_imp<__xcodeml_template_type_0_0 (__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(int, ...) const, 1, 0>'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/,...)const,1,0>{public:typedef __xcodeml_template_type_0_1 const(*_ClassType);
                                                                                                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:2731:127: note: previous definition is here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/,...)const,1,0>{public:typedef __xcodeml_template_type_0_1 const _ClassType;
                                                                                                                              ^
vec.cpp:2816:127: error: class template partial specialization contains template parameters that cannot be deduced; this partial specialization will never be used [-Wunusable-partial-specialization]
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/)volatile,1,0>{public:typedef __xcodeml_template_type_0_1 volatile(*_ClassType);
                                                                                                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:2816:56: note: non-deducible template parameter '__xcodeml_template_type_0_1'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/)volatile,1,0>{public:typedef __xcodeml_template_type_0_1 volatile(*_ClassType);
                                                       ^
vec.cpp:2816:93: note: non-deducible template parameter '__xcodeml_template_type_0_2'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/)volatile,1,0>{public:typedef __xcodeml_template_type_0_1 volatile(*_ClassType);
                                                                                            ^
vec.cpp:2816:127: error: redefinition of '__member_pointer_traits_imp<__xcodeml_template_type_0_0 (__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)() volatile, 1, 0>'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/)volatile,1,0>{public:typedef __xcodeml_template_type_0_1 volatile(*_ClassType);
                                                                                                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:2736:127: note: previous definition is here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/)volatile,1,0>{public:typedef __xcodeml_template_type_0_1 volatile _ClassType;
                                                                                                                              ^
vec.cpp:2821:237: error: 'void' must be the first and only parameter if specified
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/,...)volatile,1,0>{public:typedef __xcodeml_template_type_0_1 volatile(*_ClassType);
                                                                                                                                                                                                                                            ^
vec.cpp:2821:127: error: class template partial specialization contains template parameters that cannot be deduced; this partial specialization will never be used [-Wunusable-partial-specialization]
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/,...)volatile,1,0>{public:typedef __xcodeml_template_type_0_1 volatile(*_ClassType);
                                                                                                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:2821:56: note: non-deducible template parameter '__xcodeml_template_type_0_1'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/,...)volatile,1,0>{public:typedef __xcodeml_template_type_0_1 volatile(*_ClassType);
                                                       ^
vec.cpp:2821:93: note: non-deducible template parameter '__xcodeml_template_type_0_2'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/,...)volatile,1,0>{public:typedef __xcodeml_template_type_0_1 volatile(*_ClassType);
                                                                                            ^
vec.cpp:2821:127: error: redefinition of '__member_pointer_traits_imp<__xcodeml_template_type_0_0 (__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(int, ...) volatile, 1, 0>'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/,...)volatile,1,0>{public:typedef __xcodeml_template_type_0_1 volatile(*_ClassType);
                                                                                                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:2741:127: note: previous definition is here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/,...)volatile,1,0>{public:typedef __xcodeml_template_type_0_1 volatile _ClassType;
                                                                                                                              ^
vec.cpp:2826:127: error: class template partial specialization contains template parameters that cannot be deduced; this partial specialization will never be used [-Wunusable-partial-specialization]
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/)const volatile,1,0>{public:typedef __xcodeml_template_type_0_1 volatile const(*_ClassType);
                                                                                                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:2826:56: note: non-deducible template parameter '__xcodeml_template_type_0_1'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/)const volatile,1,0>{public:typedef __xcodeml_template_type_0_1 volatile const(*_ClassType);
                                                       ^
vec.cpp:2826:93: note: non-deducible template parameter '__xcodeml_template_type_0_2'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/)const volatile,1,0>{public:typedef __xcodeml_template_type_0_1 volatile const(*_ClassType);
                                                                                            ^
vec.cpp:2826:127: error: redefinition of '__member_pointer_traits_imp<__xcodeml_template_type_0_0 (__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)() const volatile, 1, 0>'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/)const volatile,1,0>{public:typedef __xcodeml_template_type_0_1 volatile const(*_ClassType);
                                                                                                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:2746:127: note: previous definition is here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/)const volatile,1,0>{public:typedef __xcodeml_template_type_0_1 volatile const _ClassType;
                                                                                                                              ^
vec.cpp:2831:237: error: 'void' must be the first and only parameter if specified
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/,...)const volatile,1,0>{public:typedef __xcodeml_template_type_0_1 volatile const(*_ClassType);
                                                                                                                                                                                                                                            ^
vec.cpp:2831:127: error: class template partial specialization contains template parameters that cannot be deduced; this partial specialization will never be used [-Wunusable-partial-specialization]
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/,...)const volatile,1,0>{public:typedef __xcodeml_template_type_0_1 volatile const(*_ClassType);
                                                                                                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:2831:56: note: non-deducible template parameter '__xcodeml_template_type_0_1'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/,...)const volatile,1,0>{public:typedef __xcodeml_template_type_0_1 volatile const(*_ClassType);
                                                       ^
vec.cpp:2831:93: note: non-deducible template parameter '__xcodeml_template_type_0_2'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/,...)const volatile,1,0>{public:typedef __xcodeml_template_type_0_1 volatile const(*_ClassType);
                                                                                            ^
vec.cpp:2831:127: error: redefinition of '__member_pointer_traits_imp<__xcodeml_template_type_0_0 (__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(int, ...) const volatile, 1, 0>'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/,...)const volatile,1,0>{public:typedef __xcodeml_template_type_0_1 volatile const(*_ClassType);
                                                                                                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:2751:127: note: previous definition is here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(void/**/,...)const volatile,1,0>{public:typedef __xcodeml_template_type_0_1 volatile const _ClassType;
                                                                                                                              ^
vec.cpp:2836:90: error: class template partial specialization contains a template parameter that cannot be deduced; this partial specialization will never be used [-Wunusable-partial-specialization]
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*),0,1>{public:typedef __xcodeml_template_type_0_1 _ClassType;
                                                                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:2836:56: note: non-deducible template parameter '__xcodeml_template_type_0_1'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __member_pointer_traits_imp<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*),0,1>{public:typedef __xcodeml_template_type_0_1 _ClassType;
                                                       ^
vec.cpp:2840:166: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>class __member_pointer_traits:public __member_pointer_traits_imp<typename remove_cv<__xcodeml_template_type_0_0>::type,expression,expression>{}
                                                                                                                                                                     ^
vec.cpp:2846:90: error: class template partial specialization contains a template parameter that cannot be deduced; this partial specialization will never be used [-Wunusable-partial-specialization]
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __member_pointer_class_type<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)>{public:typedef __xcodeml_template_type_0_1 type;
                                                                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:2846:56: note: non-deducible template parameter '__xcodeml_template_type_0_1'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __member_pointer_class_type<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)>{public:typedef __xcodeml_template_type_0_1 type;
                                                       ^
vec.cpp:2854:137: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class is_constructible:public integral_constant<bool,expression>{}
                                                                                                                                        ^
vec.cpp:2856:51: error: no member named '__builtin_new_allocator' in namespace 'std::__1'
template<>class is_constructible<class::std::__1::__builtin_new_allocator::__builtin_new_deleter,...>:public integral_constant<bool,1>{}
                                      ~~~~~~~~~~~~^
vec.cpp:2864:130: error: expected expression
template<typename __xcodeml_template_type_0_0>class is_default_constructible:public is_constructible<__xcodeml_template_type_0_0,...>{}
                                                                                                                                 ^
vec.cpp:2866:17: error: template 'is_default_constructible' cannot be referenced with a class specifier
template<>class is_default_constructible template<>class is_default_constructible<class::std::__1::__builtin_new_allocator::__builtin_new_deleter>:public is_constructible<class::std::__1::__builtin_new_allocator::__builtin_new_deleter,...>{}
                ^
vec.cpp:2864:53: note: declared here
template<typename __xcodeml_template_type_0_0>class is_default_constructible:public is_constructible<__xcodeml_template_type_0_0,...>{}
                                                    ^
vec.cpp:2866:42: error: expected unqualified-id
template<>class is_default_constructible template<>class is_default_constructible<class::std::__1::__builtin_new_allocator::__builtin_new_deleter>:public is_constructible<class::std::__1::__builtin_new_allocator::__builtin_new_deleter,...>{}
                                         ^
vec.cpp:2868:127: error: expected expression
template<typename __xcodeml_template_type_0_0>class is_copy_constructible:public is_constructible<__xcodeml_template_type_0_0,...>{}
                                                                                                                              ^
vec.cpp:2871:127: error: expected expression
template<typename __xcodeml_template_type_0_0>class is_move_constructible:public is_constructible<__xcodeml_template_type_0_0,...>{}
                                                                                                                              ^
vec.cpp:2873:92: error: expected expression
template<>class is_move_constructible<unsigned long>:public is_constructible<unsigned long,...>{}
                                                                                           ^
vec.cpp:2873:98: error: expected ';' after class
template<>class is_move_constructible<unsigned long>:public is_constructible<unsigned long,...>{}
                                                                                                 ^
                                                                                                 ;
vec.cpp:2874:78: error: expected expression
template<>class is_move_constructible<int(*)>:public is_constructible<int(*),...>{}
                                                                             ^
vec.cpp:2876:147: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class is_trivially_constructible:public integral_constant<bool,expression>{}
                                                                                                                                                  ^
vec.cpp:2878:48: error: expected expression
template<>class is_trivially_constructible<int,...>:public integral_constant<bool,1>{}
                                               ^
vec.cpp:2880:150: error: expected expression
template<typename __xcodeml_template_type_0_0>class is_trivially_default_constructible:public is_trivially_constructible<__xcodeml_template_type_0_0,...>{}
                                                                                                                                                     ^
vec.cpp:2883:147: error: expected expression
template<typename __xcodeml_template_type_0_0>class is_trivially_copy_constructible:public is_trivially_constructible<__xcodeml_template_type_0_0,...>{}
                                                                                                                                                  ^
vec.cpp:2886:147: error: expected expression
template<typename __xcodeml_template_type_0_0>class is_trivially_move_constructible:public is_trivially_constructible<__xcodeml_template_type_0_0,...>{}
                                                                                                                                                  ^
vec.cpp:2888:92: error: expected expression
template<>class is_trivially_move_constructible<int>:public is_trivially_constructible<int,...>{}
                                                                                           ^
vec.cpp:2890:144: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class is_trivially_assignable:public integral_constant<bool,expression>{}
                                                                                                                                               ^
vec.cpp:2899:109: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>class is_trivially_destructible:public integral_constant<bool,expression>{}
                                                                                                            ^
vec.cpp:2902:145: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class is_nothrow_constructible:public integral_constant<bool,expression>{}
                                                                                                                                                ^
vec.cpp:2904:74: error: expected expression
template<>class is_nothrow_constructible<class::std::__1::allocator<int>,...>:public integral_constant<bool,1>{}
                                                                         ^
vec.cpp:2909:146: error: expected expression
template<typename __xcodeml_template_type_0_0>class is_nothrow_default_constructible:public is_nothrow_constructible<__xcodeml_template_type_0_0,...>{}
                                                                                                                                                 ^
vec.cpp:2911:148: error: expected expression
template<>class is_nothrow_default_constructible<class::std::__1::allocator<int> >:public is_nothrow_constructible<class::std::__1::allocator<int>,...>{}
                                                                                                                                                   ^
vec.cpp:2913:143: error: expected expression
template<typename __xcodeml_template_type_0_0>class is_nothrow_copy_constructible:public is_nothrow_constructible<__xcodeml_template_type_0_0,...>{}
                                                                                                                                              ^
vec.cpp:2916:143: error: expected expression
template<typename __xcodeml_template_type_0_0>class is_nothrow_move_constructible:public is_nothrow_constructible<__xcodeml_template_type_0_0,...>{}
                                                                                                                                              ^
vec.cpp:2918:108: error: expected expression
template<>class is_nothrow_move_constructible<unsigned long>:public is_nothrow_constructible<unsigned long,...>{}
                                                                                                           ^
vec.cpp:2918:114: error: expected ';' after class
template<>class is_nothrow_move_constructible<unsigned long>:public is_nothrow_constructible<unsigned long,...>{}
                                                                                                                 ^
                                                                                                                 ;
vec.cpp:2919:94: error: expected expression
template<>class is_nothrow_move_constructible<int(*)>:public is_nothrow_constructible<int(*),...>{}
                                                                                             ^
vec.cpp:2921:142: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class is_nothrow_assignable:public integral_constant<bool,expression>{}
                                                                                                                                             ^
vec.cpp:2923:106: error: expected ';' after class
template<>class is_nothrow_assignable<unsigned long&,unsigned long(*)>:public integral_constant<bool,1>{}
                                                                                                         ^
                                                                                                         ;
vec.cpp:2931:122: error: expected ';' after class
template<>class is_nothrow_move_assignable<unsigned long>:public is_nothrow_assignable<unsigned long&,unsigned long(*)>{}
                                                                                                                         ^
                                                                                                                         ;
vec.cpp:2938:147: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>class __libcpp_is_nothrow_destructible<1,__xcodeml_template_type_0_0>:public integral_constant<bool,expression>{}
                                                                                                                                                  ^
vec.cpp:2940:117: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>class is_nothrow_destructible:public __libcpp_is_nothrow_destructible<expression,__xcodeml_template_type_0_0>{}
                                                                                                                    ^
vec.cpp:2943:71: error: class template partial specialization does not specialize any template argument; to define the primary template, remove the template argument list
template<typename __xcodeml_template_type_0_0,unsigned long _Ns>class is_nothrow_destructible<__xcodeml_template_type_0_0>:public is_nothrow_destructible<__xcodeml_template_type_0_0>{}
                                                                      ^                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:2943:1: error: too many template parameters in template redeclaration
template<typename __xcodeml_template_type_0_0,unsigned long _Ns>class is_nothrow_destructible<__xcodeml_template_type_0_0>:public is_nothrow_destructible<__xcodeml_template_type_0_0>{}
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:2940:1: note: previous template declaration is here
template<typename __xcodeml_template_type_0_0>class is_nothrow_destructible:public __libcpp_is_nothrow_destructible<expression,__xcodeml_template_type_0_0>{}
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:2949:90: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>class is_pod:public integral_constant<bool,expression>{}
                                                                                         ^
vec.cpp:2952:99: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>class is_literal_type:public integral_constant<bool,expression>{}
                                                                                                  ^
vec.cpp:2955:102: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>class is_standard_layout:public integral_constant<bool,expression>{}
                                                                                                     ^
vec.cpp:2958:105: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>class is_trivially_copyable:public integral_constant<bool,expression>{}
                                                                                                        ^
vec.cpp:2961:94: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>class is_trivial:public integral_constant<bool,expression>{}
                                                                                             ^
vec.cpp:2972:240: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3,typename __xcodeml_template_type_0_4>using __enable_if_bullet1=typename enable_if<expression,void>::type;
                                                                                                                                                                                                                                               ^
vec.cpp:2972:258: error: expected ';' after alias declaration
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3,typename __xcodeml_template_type_0_4>using __enable_if_bullet1=typename enable_if<expression,void>::type;
                                                                                                                                                                                                                                                                 ^
                                                                                                                                                                                                                                                                 ;
vec.cpp:2973:203: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3>using __enable_if_bullet2=typename enable_if<expression,void>::type;
                                                                                                                                                                                                          ^
vec.cpp:2973:221: error: expected ';' after alias declaration
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3>using __enable_if_bullet2=typename enable_if<expression,void>::type;
                                                                                                                                                                                                                            ^
                                                                                                                                                                                                                            ;
vec.cpp:2974:240: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3,typename __xcodeml_template_type_0_4>using __enable_if_bullet3=typename enable_if<expression,void>::type;
                                                                                                                                                                                                                                               ^
vec.cpp:2974:258: error: expected ';' after alias declaration
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3,typename __xcodeml_template_type_0_4>using __enable_if_bullet3=typename enable_if<expression,void>::type;
                                                                                                                                                                                                                                                                 ^
                                                                                                                                                                                                                                                                 ;
vec.cpp:2975:240: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3,typename __xcodeml_template_type_0_4>using __enable_if_bullet4=typename enable_if<expression,void>::type;
                                                                                                                                                                                                                                               ^
vec.cpp:2975:258: error: expected ';' after alias declaration
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3,typename __xcodeml_template_type_0_4>using __enable_if_bullet4=typename enable_if<expression,void>::type;
                                                                                                                                                                                                                                                                 ^
                                                                                                                                                                                                                                                                 ;
vec.cpp:2976:203: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3>using __enable_if_bullet5=typename enable_if<expression,void>::type;
                                                                                                                                                                                                          ^
vec.cpp:2976:221: error: expected ';' after alias declaration
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3>using __enable_if_bullet5=typename enable_if<expression,void>::type;
                                                                                                                                                                                                                            ^
                                                                                                                                                                                                                            ;
vec.cpp:2977:240: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3,typename __xcodeml_template_type_0_4>using __enable_if_bullet6=typename enable_if<expression,void>::type;
                                                                                                                                                                                                                                               ^
vec.cpp:2977:258: error: expected ';' after alias declaration
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3,typename __xcodeml_template_type_0_4>using __enable_if_bullet6=typename enable_if<expression,void>::type;
                                                                                                                                                                                                                                                                 ^
                                                                                                                                                                                                                                                                 ;
vec.cpp:2978:78: error: 'void' must be the first and only parameter if specified
template<typename __xcodeml_template_type_0_0>class::std::__1::__nat __invoke(class::std::__1::__any,void/*__args*/)
                                                                             ^
vec.cpp:2978:117: error: expected ';' at end of declaration
template<typename __xcodeml_template_type_0_0>class::std::__1::__nat __invoke(class::std::__1::__any,void/*__args*/)
                                                                                                                    ^
                                                                                                                    ;
vec.cpp:2979:88: error: 'void' must be the first and only parameter if specified
template<typename __xcodeml_template_type_0_0>class::std::__1::__nat __invoke_constexpr(class::std::__1::__any,void/*__args*/)
                                                                                       ^
vec.cpp:2979:127: error: expected ';' at end of declaration
template<typename __xcodeml_template_type_0_0>class::std::__1::__nat __invoke_constexpr(class::std::__1::__any,void/*__args*/)
                                                                                                                              ^
                                                                                                                              ;
vec.cpp:2980:206: error: use of undeclared identifier '__f'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3>decltype (__invoke(__xcodeml_template_type_0_0(*__f),__xcodeml_template_type_0_1(*__a0),void/*__args*/)){return(((std::__1::__xcodeml_template_type_0_1(__a0)).*__f)((std::__1::__xcodeml_template_type_0_2(__args))));
                                                                                                                                                                                                             ^
vec.cpp:2980:240: error: use of undeclared identifier '__a0'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3>decltype (__invoke(__xcodeml_template_type_0_0(*__f),__xcodeml_template_type_0_1(*__a0),void/*__args*/)){return(((std::__1::__xcodeml_template_type_0_1(__a0)).*__f)((std::__1::__xcodeml_template_type_0_2(__args))));
                                                                                                                                                                                                                                               ^
vec.cpp:2980:260: error: expected '(' for function-style cast or type construction
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3>decltype (__invoke(__xcodeml_template_type_0_0(*__f),__xcodeml_template_type_0_1(*__a0),void/*__args*/)){return(((std::__1::__xcodeml_template_type_0_1(__a0)).*__f)((std::__1::__xcodeml_template_type_0_2(__args))));
                                                                                                                                                                                                                                                     ~~~~          ^
vec.cpp:2980:262: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3>decltype (__invoke(__xcodeml_template_type_0_0(*__f),__xcodeml_template_type_0_1(*__a0),void/*__args*/)){return(((std::__1::__xcodeml_template_type_0_1(__a0)).*__f)((std::__1::__xcodeml_template_type_0_2(__args))));
                                                                                                                                                                                                                                                                     ^
vec.cpp:3016:149: error: expected expression
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>using __invokable=__invokable_r<void,__xcodeml_template_type_0_0,...>;
                                                                                                                                                    ^
vec.cpp:3021:213: error: expected expression
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __nothrow_invokable_r_imp<1,0,__xcodeml_template_type_0_0,__xcodeml_template_type_0_1,...>{public:typedef class __nothrow_invokable_r_imp<1,0,__xcodeml_template_type_0_0,__xcodeml_template_type_0_1,...>_ThisT;
                                                                                                                                                                                                                    ^
vec.cpp:3026:213: error: expected expression
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __nothrow_invokable_r_imp<1,1,__xcodeml_template_type_0_0,__xcodeml_template_type_0_1,...>{public:static bool const value=(std::__1::((std::__1::__xcodeml_template_type_0_1()),(std::__1::__xcodeml_template_type_0_2())));
                                                                                                                                                                                                                    ^
vec.cpp:3029:175: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>using __nothrow_invokable_r=__nothrow_invokable_r_imp<expression,expression,__xcodeml_template_type_0_0,__xcodeml_template_type_0_1,...>;
                                                                                                                                                                              ^
vec.cpp:3030:136: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>using __nothrow_invokable=__nothrow_invokable_r_imp<expression,1,void,__xcodeml_template_type_0_0,...>;
                                                                                                                                       ^
vec.cpp:3031:119: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __invoke_of:public enable_if<expression,typename __invokable_r<void,__xcodeml_template_type_0_0,...>::_Result>{}
                                                                                                                      ^
vec.cpp:3034:90: error: class template partial specialization contains a template parameter that cannot be deduced; this partial specialization will never be used [-Wunusable-partial-specialization]
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class result_of<__xcodeml_template_type_0_0(void/**/)>:public __invoke_of<__xcodeml_template_type_0_0,...>{}
                                                                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:3034:56: note: non-deducible template parameter '__xcodeml_template_type_0_1'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class result_of<__xcodeml_template_type_0_0(void/**/)>:public __invoke_of<__xcodeml_template_type_0_0,...>{}
                                                       ^
vec.cpp:3034:186: error: expected expression
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class result_of<__xcodeml_template_type_0_0(void/**/)>:public __invoke_of<__xcodeml_template_type_0_0,...>{}
                                                                                                                                                                                         ^
vec.cpp:3041:66: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,void>::type swap(__xcodeml_template_type_0_0&__x,__xcodeml_template_type_0_0&__y){__xcodeml_template_type_0_0 __t=(std::__1::(__x));
                                                                 ^
vec.cpp:3041:84: error: definition or redeclaration of 'type' cannot name the global scope
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,void>::type swap(__xcodeml_template_type_0_0&__x,__xcodeml_template_type_0_0&__y){__xcodeml_template_type_0_0 __t=(std::__1::(__x));
                                                                                 ~~^
vec.cpp:3041:84: error: no member named 'type' in the global namespace
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,void>::type swap(__xcodeml_template_type_0_0&__x,__xcodeml_template_type_0_0&__y){__xcodeml_template_type_0_0 __t=(std::__1::(__x));
                                                                                 ~~^
vec.cpp:3041:88: error: expected ';' at end of declaration
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,void>::type swap(__xcodeml_template_type_0_0&__x,__xcodeml_template_type_0_0&__y){__xcodeml_template_type_0_0 __t=(std::__1::(__x));
                                                                                       ^
                                                                                       ;
vec.cpp:3041:94: error: unknown type name '__xcodeml_template_type_0_0'
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,void>::type swap(__xcodeml_template_type_0_0&__x,__xcodeml_template_type_0_0&__y){__xcodeml_template_type_0_0 __t=(std::__1::(__x));
                                                                                             ^
vec.cpp:3041:126: error: unknown type name '__xcodeml_template_type_0_0'
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,void>::type swap(__xcodeml_template_type_0_0&__x,__xcodeml_template_type_0_0&__y){__xcodeml_template_type_0_0 __t=(std::__1::(__x));
                                                                                                                             ^
vec.cpp:3041:89: error: C++ requires a type specifier for all declarations
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,void>::type swap(__xcodeml_template_type_0_0&__x,__xcodeml_template_type_0_0&__y){__xcodeml_template_type_0_0 __t=(std::__1::(__x));
                                                                                        ^
vec.cpp:3041:159: error: unknown type name '__xcodeml_template_type_0_0'
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,void>::type swap(__xcodeml_template_type_0_0&__x,__xcodeml_template_type_0_0&__y){__xcodeml_template_type_0_0 __t=(std::__1::(__x));
                                                                                                                                                              ^
vec.cpp:3041:202: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,void>::type swap(__xcodeml_template_type_0_0&__x,__xcodeml_template_type_0_0&__y){__xcodeml_template_type_0_0 __t=(std::__1::(__x));
                                                                                                                                                                                                         ^
vec.cpp:3042:17: error: expected unqualified-id
(__x=(std::__1::(__y)));
                ^
vec.cpp:3043:17: error: expected unqualified-id
(__y=(std::__1::(__t)));
                ^
vec.cpp:3045:17: error: no function template matches function template specialization 'swap'
template <>void swap(unsigned long&__x,unsigned long&__y){unsigned long __t=(std::__1::move(__x));
                ^
vec.cpp:3045:78: error: no matching function for call to 'move'
template <>void swap(unsigned long&__x,unsigned long&__y){unsigned long __t=(std::__1::move(__x));
                                                                             ^~~~~~~~~~~~~~
vec.cpp:2680:109: note: candidate template ignored: could not match '__xcodeml_template_type_0_0 (*)' against 'unsigned long'
template<typename __xcodeml_template_type_0_0>typename remove_reference<__xcodeml_template_type_0_0>::type(*move(__xcodeml_template_type_0_0(*__t))){typedef typename remove_reference<__xcodeml_template_type_0_0>::type _Up;
                                                                                                            ^
vec.cpp:3046:7: error: no matching function for call to 'move'
(__x=(std::__1::move(__y)));
      ^~~~~~~~~~~~~~
vec.cpp:2680:109: note: candidate template ignored: could not match '__xcodeml_template_type_0_0 (*)' against 'unsigned long'
template<typename __xcodeml_template_type_0_0>typename remove_reference<__xcodeml_template_type_0_0>::type(*move(__xcodeml_template_type_0_0(*__t))){typedef typename remove_reference<__xcodeml_template_type_0_0>::type _Up;
                                                                                                            ^
vec.cpp:3047:7: error: no matching function for call to 'move'
(__y=(std::__1::move(__t)));
      ^~~~~~~~~~~~~~
vec.cpp:2680:109: note: candidate template ignored: could not match '__xcodeml_template_type_0_0 (*)' against 'unsigned long'
template<typename __xcodeml_template_type_0_0>typename remove_reference<__xcodeml_template_type_0_0>::type(*move(__xcodeml_template_type_0_0(*__t))){typedef typename remove_reference<__xcodeml_template_type_0_0>::type _Up;
                                                                                                            ^
vec.cpp:3049:17: error: no function template matches function template specialization 'swap'
template <>void swap(int(*&__x),int(*&__y)){int(*__t)=(std::__1::move(__x));
                ^
vec.cpp:3053:84: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0,unsigned long _Np>typename enable_if<expression,void>::type swap(__xcodeml_template_type_0_0&__a,__xcodeml_template_type_0_0&__b)
                                                                                   ^
vec.cpp:3053:102: error: definition or redeclaration of 'type' cannot name the global scope
template<typename __xcodeml_template_type_0_0,unsigned long _Np>typename enable_if<expression,void>::type swap(__xcodeml_template_type_0_0&__a,__xcodeml_template_type_0_0&__b)
                                                                                                   ~~^
vec.cpp:3053:106: error: expected ';' at end of declaration
template<typename __xcodeml_template_type_0_0,unsigned long _Np>typename enable_if<expression,void>::type swap(__xcodeml_template_type_0_0&__a,__xcodeml_template_type_0_0&__b)
                                                                                                         ^
                                                                                                         ;
vec.cpp:3053:112: error: unknown type name '__xcodeml_template_type_0_0'
template<typename __xcodeml_template_type_0_0,unsigned long _Np>typename enable_if<expression,void>::type swap(__xcodeml_template_type_0_0&__a,__xcodeml_template_type_0_0&__b)
                                                                                                               ^
vec.cpp:3053:144: error: unknown type name '__xcodeml_template_type_0_0'
template<typename __xcodeml_template_type_0_0,unsigned long _Np>typename enable_if<expression,void>::type swap(__xcodeml_template_type_0_0&__a,__xcodeml_template_type_0_0&__b)
                                                                                                                                               ^
vec.cpp:3054:1: error: expected function body after function declarator
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>void iter_swap(__xcodeml_template_type_0_0 __a,__xcodeml_template_type_0_1 __b){(((*__a),(*__b)));
^
vec.cpp:3076:106: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>class __is_nothrow_swappable:public integral_constant<bool,expression>{}
                                                                                                         ^
vec.cpp:3081:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:3087:114: warning: typedef requires a name [-Wmissing-declarations]
template<typename __xcodeml_template_type_0_0>class __underlying_type_impl<__xcodeml_template_type_0_0,1>{public:typedef void/*type*/;
                                                                                                                 ^~~~~~~~~~~~
vec.cpp:3090:127: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>class underlying_type:public __underlying_type_impl<__xcodeml_template_type_0_0,expression>{}
                                                                                                                              ^
vec.cpp:3092:122: error: expected ';' after class
template<>class underlying_type<enum __legacy_memory_order>:public __underlying_type_impl<enum __legacy_memory_order,1>{}
                                                                                                                         ^
                                                                                                                         ;
vec.cpp:3097:26: error: use of undeclared identifier '__promoted_type'
public:typedef decltype (__promoted_type);
                         ^
vec.cpp:3115:66: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,long long>::type __convert_to_integral(__xcodeml_template_type_0_0 __val){return __val;
                                                                 ^
vec.cpp:3115:89: error: definition or redeclaration of 'type' cannot name the global scope
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,long long>::type __convert_to_integral(__xcodeml_template_type_0_0 __val){return __val;
                                                                                      ~~^
vec.cpp:3115:93: error: expected ';' at end of declaration
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,long long>::type __convert_to_integral(__xcodeml_template_type_0_0 __val){return __val;
                                                                                            ^
                                                                                            ;
vec.cpp:3115:116: error: unknown type name '__xcodeml_template_type_0_0'
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,long long>::type __convert_to_integral(__xcodeml_template_type_0_0 __val){return __val;
                                                                                                                   ^
vec.cpp:3115:94: error: C++ requires a type specifier for all declarations
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,long long>::type __convert_to_integral(__xcodeml_template_type_0_0 __val){return __val;
                                                                                             ^
vec.cpp:3121:109: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>typename __sfinae_underlying_type<__xcodeml_template_type_0_0,expression>::__promoted_type __convert_to_integral(__xcodeml_template_type_0_0 __val){return __val;
                                                                                                            ^
vec.cpp:3121:122: error: definition or redeclaration of '__promoted_type' cannot name the global scope
template<typename __xcodeml_template_type_0_0>typename __sfinae_underlying_type<__xcodeml_template_type_0_0,expression>::__promoted_type __convert_to_integral(__xcodeml_template_type_0_0 __val){return __val;
                                                                                                                       ~~^
vec.cpp:3121:122: error: no member named '__promoted_type' in the global namespace
template<typename __xcodeml_template_type_0_0>typename __sfinae_underlying_type<__xcodeml_template_type_0_0,expression>::__promoted_type __convert_to_integral(__xcodeml_template_type_0_0 __val){return __val;
                                                                                                                       ~~^
vec.cpp:3121:137: error: expected ';' at end of declaration
template<typename __xcodeml_template_type_0_0>typename __sfinae_underlying_type<__xcodeml_template_type_0_0,expression>::__promoted_type __convert_to_integral(__xcodeml_template_type_0_0 __val){return __val;
                                                                                                                                        ^
                                                                                                                                        ;
vec.cpp:3121:160: error: unknown type name '__xcodeml_template_type_0_0'
template<typename __xcodeml_template_type_0_0>typename __sfinae_underlying_type<__xcodeml_template_type_0_0,expression>::__promoted_type __convert_to_integral(__xcodeml_template_type_0_0 __val){return __val;
                                                                                                                                                               ^
vec.cpp:3121:138: error: C++ requires a type specifier for all declarations
template<typename __xcodeml_template_type_0_0>typename __sfinae_underlying_type<__xcodeml_template_type_0_0,expression>::__promoted_type __convert_to_integral(__xcodeml_template_type_0_0 __val){return __val;
                                                                                                                                         ^
vec.cpp:3123:181: error: expected expression
template<typename __xcodeml_template_type_0_0>class __has_operator_addressof_member_imp{public:template<typename __xcodeml_template_type_1_0>static typename __select_2nd<decltype (),class::std::__1::integral_constant<bool,1> >::type __test(int)
                                                                                                                                                                                    ^
vec.cpp:3123:226: error: expected member name or ';' after declaration specifiers
template<typename __xcodeml_template_type_0_0>class __has_operator_addressof_member_imp{public:template<typename __xcodeml_template_type_1_0>static typename __select_2nd<decltype (),class::std::__1::integral_constant<bool,1> >::type __test(int)
                                                                                                                                             ~~~~~~                                                                              ^
vec.cpp:3129:179: error: expected expression
template<typename __xcodeml_template_type_0_0>class __has_operator_addressof_free_imp{public:template<typename __xcodeml_template_type_1_0>static typename __select_2nd<decltype (),class::std::__1::integral_constant<bool,1> >::type __test(int)
                                                                                                                                                                                  ^
vec.cpp:3129:224: error: expected member name or ';' after declaration specifiers
template<typename __xcodeml_template_type_0_0>class __has_operator_addressof_free_imp{public:template<typename __xcodeml_template_type_1_0>static typename __select_2nd<decltype (),class::std::__1::integral_constant<bool,1> >::type __test(int)
                                                                                                                                           ~~~~~~                                                                              ^
vec.cpp:3135:108: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>class __has_operator_addressof:public integral_constant<bool,expression>{}
                                                                                                           ^
vec.cpp:3144:155: error: expected class name
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __can_extract_key:public/**/{}
                                                                                                                                                          ^
vec.cpp:3147:312: error: expected class name
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3>class __can_extract_key<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1,pair<__xcodeml_template_type_0_2,__xcodeml_template_type_0_3> >:public/**/{}
                                                                                                                                                                                                                                                                                                                       ^
vec.cpp:3149:216: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3>class __can_extract_map_key:public integral_constant<bool,expression>{}
                                                                                                                                                                                                                       ^
vec.cpp:3157:22: error: 'integral_constant' is not a class, namespace, or enumeration
constexpr bool const integral_constant::value;
                     ^
vec.cpp:675:85: note: 'integral_constant' declared here
template<typename __xcodeml_template_type_0_0,__xcodeml_template_type_0_0 __v>class integral_constant{public:constexpr static __xcodeml_template_type_0_0 const value=__v;
                                                                                    ^
vec.cpp:3158:22: error: 'integral_constant' is not a class, namespace, or enumeration
constexpr bool const integral_constant::value;
                     ^
vec.cpp:675:85: note: 'integral_constant' declared here
template<typename __xcodeml_template_type_0_0,__xcodeml_template_type_0_0 __v>class integral_constant{public:constexpr static __xcodeml_template_type_0_0 const value=__v;
                                                                                    ^
vec.cpp:3159:31: error: 'integral_constant' is not a class, namespace, or enumeration
constexpr unsigned long const integral_constant::value;
                              ^
vec.cpp:675:85: note: 'integral_constant' declared here
template<typename __xcodeml_template_type_0_0,__xcodeml_template_type_0_0 __v>class integral_constant{public:constexpr static __xcodeml_template_type_0_0 const value=__v;
                                                                                    ^
vec.cpp:3160:31: error: 'integral_constant' is not a class, namespace, or enumeration
constexpr unsigned long const integral_constant::value;
                              ^
vec.cpp:675:85: note: 'integral_constant' declared here
template<typename __xcodeml_template_type_0_0,__xcodeml_template_type_0_0 __v>class integral_constant{public:constexpr static __xcodeml_template_type_0_0 const value=__v;
                                                                                    ^
vec.cpp:3161:31: error: 'integral_constant' is not a class, namespace, or enumeration
constexpr unsigned long const integral_constant::value;
                              ^
vec.cpp:675:85: note: 'integral_constant' declared here
template<typename __xcodeml_template_type_0_0,__xcodeml_template_type_0_0 __v>class integral_constant{public:constexpr static __xcodeml_template_type_0_0 const value=__v;
                                                                                    ^
vec.cpp:3162:31: error: 'integral_constant' is not a class, namespace, or enumeration
constexpr unsigned long const integral_constant::value;
                              ^
vec.cpp:675:85: note: 'integral_constant' declared here
template<typename __xcodeml_template_type_0_0,__xcodeml_template_type_0_0 __v>class integral_constant{public:constexpr static __xcodeml_template_type_0_0 const value=__v;
                                                                                    ^
vec.cpp:3215:52: error: expected expression
protected:constexpr static bool const is_signed=((()(-1))<(()0));
                                                   ^
vec.cpp:3215:61: error: expected expression
protected:constexpr static bool const is_signed=((()(-1))<(()0));
                                                            ^
vec.cpp:3216:57: error: type name requires a specifier or qualifier
protected:constexpr static int const digits=static_cast<>((((sizeof(unsigned long long))*8)-is_signed));
                                                        ^
vec.cpp:3216:93: error: constexpr variable 'digits' must be initialized by a constant expression
protected:constexpr static int const digits=static_cast<>((((sizeof(unsigned long long))*8)-is_signed));
                                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
vec.cpp:3217:38: error: constexpr variable 'digits10' must be initialized by a constant expression
protected:constexpr static int const digits10=((digits*3)/10);
                                     ^        ~~~~~~~~~~~~~~~
vec.cpp:3217:49: note: initializer of 'digits' is not a constant expression
protected:constexpr static int const digits10=((digits*3)/10);
                                                ^
vec.cpp:3216:38: note: declared here
protected:constexpr static int const digits=static_cast<>((((sizeof(unsigned long long))*8)-is_signed));
                                     ^
vec.cpp:3219:59: error: use of undeclared identifier '__libcpp_compute_min'
protected:constexpr static unsigned long long const __min=__libcpp_compute_min::value;
                                                          ^
vec.cpp:3220:72: error: expected expression
protected:constexpr static unsigned long long const __max=(is_signed?(()((()(~0))^__min)):(()(~0)));
                                                                       ^
vec.cpp:3220:76: error: expected expression
protected:constexpr static unsigned long long const __max=(is_signed?(()((()(~0))^__min)):(()(~0)));
                                                                           ^
vec.cpp:3220:93: error: expected expression
protected:constexpr static unsigned long long const __max=(is_signed?(()((()(~0))^__min)):(()(~0)));
                                                                                            ^
vec.cpp:3244:61: error: 'is_signed' is not a class, namespace, or enumeration
protected:constexpr static bool const is_modulo=(!std::__1::is_signed::value);
                                                            ^
vec.cpp:1881:53: note: 'is_signed' declared here
template<typename __xcodeml_template_type_0_0>class is_signed:public __libcpp_is_signed<__xcodeml_template_type_0_0,expression>{}
                                                    ^
vec.cpp:3248:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:3252:52: error: expected expression
protected:constexpr static bool const is_signed=((()(-1))<(()0));
                                                   ^
vec.cpp:3252:61: error: expected expression
protected:constexpr static bool const is_signed=((()(-1))<(()0));
                                                            ^
vec.cpp:3253:57: error: type name requires a specifier or qualifier
protected:constexpr static int const digits=static_cast<>((((sizeof(unsigned int))*8)-is_signed));
                                                        ^
vec.cpp:3253:87: error: constexpr variable 'digits' must be initialized by a constant expression
protected:constexpr static int const digits=static_cast<>((((sizeof(unsigned int))*8)-is_signed));
                                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
vec.cpp:3254:38: error: constexpr variable 'digits10' must be initialized by a constant expression
protected:constexpr static int const digits10=((digits*3)/10);
                                     ^        ~~~~~~~~~~~~~~~
vec.cpp:3254:49: note: initializer of 'digits' is not a constant expression
protected:constexpr static int const digits10=((digits*3)/10);
                                                ^
vec.cpp:3253:38: note: declared here
protected:constexpr static int const digits=static_cast<>((((sizeof(unsigned int))*8)-is_signed));
                                     ^
vec.cpp:3256:53: error: use of undeclared identifier '__libcpp_compute_min'
protected:constexpr static unsigned int const __min=__libcpp_compute_min::value;
                                                    ^
vec.cpp:3257:66: error: expected expression
protected:constexpr static unsigned int const __max=(is_signed?(()((()(~0))^__min)):(()(~0)));
                                                                 ^
vec.cpp:3257:70: error: expected expression
protected:constexpr static unsigned int const __max=(is_signed?(()((()(~0))^__min)):(()(~0)));
                                                                     ^
vec.cpp:3257:87: error: expected expression
protected:constexpr static unsigned int const __max=(is_signed?(()((()(~0))^__min)):(()(~0)));
                                                                                      ^
vec.cpp:3281:61: error: 'is_signed' is not a class, namespace, or enumeration
protected:constexpr static bool const is_modulo=(!std::__1::is_signed::value);
                                                            ^
vec.cpp:1881:53: note: 'is_signed' declared here
template<typename __xcodeml_template_type_0_0>class is_signed:public __libcpp_is_signed<__xcodeml_template_type_0_0,expression>{}
                                                    ^
vec.cpp:3285:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:3289:52: error: expected expression
protected:constexpr static bool const is_signed=((()(-1))<(()0));
                                                   ^
vec.cpp:3289:61: error: expected expression
protected:constexpr static bool const is_signed=((()(-1))<(()0));
                                                            ^
vec.cpp:3290:57: error: type name requires a specifier or qualifier
protected:constexpr static int const digits=static_cast<>((((sizeof(unsigned long))*8)-is_signed));
                                                        ^
vec.cpp:3290:88: error: constexpr variable 'digits' must be initialized by a constant expression
protected:constexpr static int const digits=static_cast<>((((sizeof(unsigned long))*8)-is_signed));
                                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
vec.cpp:3291:38: error: constexpr variable 'digits10' must be initialized by a constant expression
protected:constexpr static int const digits10=((digits*3)/10);
                                     ^        ~~~~~~~~~~~~~~~
vec.cpp:3291:49: note: initializer of 'digits' is not a constant expression
protected:constexpr static int const digits10=((digits*3)/10);
                                                ^
vec.cpp:3290:38: note: declared here
protected:constexpr static int const digits=static_cast<>((((sizeof(unsigned long))*8)-is_signed));
                                     ^
vec.cpp:3293:54: error: use of undeclared identifier '__libcpp_compute_min'
protected:constexpr static unsigned long const __min=__libcpp_compute_min::value;
                                                     ^
vec.cpp:3294:67: error: expected expression
protected:constexpr static unsigned long const __max=(is_signed?(()((()(~0))^__min)):(()(~0)));
                                                                  ^
vec.cpp:3294:71: error: expected expression
protected:constexpr static unsigned long const __max=(is_signed?(()((()(~0))^__min)):(()(~0)));
                                                                      ^
vec.cpp:3294:88: error: expected expression
protected:constexpr static unsigned long const __max=(is_signed?(()((()(~0))^__min)):(()(~0)));
                                                                                       ^
vec.cpp:3318:61: error: 'is_signed' is not a class, namespace, or enumeration
protected:constexpr static bool const is_modulo=(!std::__1::is_signed::value);
                                                            ^
vec.cpp:1881:53: note: 'is_signed' declared here
template<typename __xcodeml_template_type_0_0>class is_signed:public __libcpp_is_signed<__xcodeml_template_type_0_0,expression>{}
                                                    ^
vec.cpp:3322:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:3326:52: error: expected expression
protected:constexpr static bool const is_signed=((()(-1))<(()0));
                                                   ^
vec.cpp:3326:61: error: expected expression
protected:constexpr static bool const is_signed=((()(-1))<(()0));
                                                            ^
vec.cpp:3327:57: error: type name requires a specifier or qualifier
protected:constexpr static int const digits=static_cast<>((((sizeof(long))*8)-is_signed));
                                                        ^
vec.cpp:3327:79: error: constexpr variable 'digits' must be initialized by a constant expression
protected:constexpr static int const digits=static_cast<>((((sizeof(long))*8)-is_signed));
                                                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
vec.cpp:3328:38: error: constexpr variable 'digits10' must be initialized by a constant expression
protected:constexpr static int const digits10=((digits*3)/10);
                                     ^        ~~~~~~~~~~~~~~~
vec.cpp:3328:49: note: initializer of 'digits' is not a constant expression
protected:constexpr static int const digits10=((digits*3)/10);
                                                ^
vec.cpp:3327:38: note: declared here
protected:constexpr static int const digits=static_cast<>((((sizeof(long))*8)-is_signed));
                                     ^
vec.cpp:3330:45: error: use of undeclared identifier '__libcpp_compute_min'
protected:constexpr static long const __min=__libcpp_compute_min::value;
                                            ^
vec.cpp:3331:58: error: expected expression
protected:constexpr static long const __max=(is_signed?(()((()(~0))^__min)):(()(~0)));
                                                         ^
vec.cpp:3331:62: error: expected expression
protected:constexpr static long const __max=(is_signed?(()((()(~0))^__min)):(()(~0)));
                                                             ^
vec.cpp:3331:79: error: expected expression
protected:constexpr static long const __max=(is_signed?(()((()(~0))^__min)):(()(~0)));
                                                                              ^
vec.cpp:3356:61: error: 'is_signed' is not a class, namespace, or enumeration
protected:constexpr static bool const is_modulo=(!std::__1::is_signed::value);
                                                            ^
vec.cpp:1881:53: note: 'is_signed' declared here
template<typename __xcodeml_template_type_0_0>class is_signed:public __libcpp_is_signed<__xcodeml_template_type_0_0,expression>{}
                                                    ^
vec.cpp:3365:120: error: expected expression
template<>class __libcpp_compute_min<unsigned long long,64,0>{public:constexpr static unsigned long long const value=(()0);
                                                                                                                       ^
vec.cpp:3366:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:3367:108: error: expected expression
template<>class __libcpp_compute_min<unsigned int,32,0>{public:constexpr static unsigned int const value=(()0);
                                                                                                           ^
vec.cpp:3368:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:3369:110: error: expected expression
template<>class __libcpp_compute_min<unsigned long,64,0>{public:constexpr static unsigned long const value=(()0);
                                                                                                             ^
vec.cpp:3370:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:3371:92: error: expected expression
template<>class __libcpp_compute_min<long,63,1>{public:constexpr static long const value=(()((()1)<<__digits));
                                                                                           ^
vec.cpp:3371:96: error: expected expression
template<>class __libcpp_compute_min<long,63,1>{public:constexpr static long const value=(()((()1)<<__digits));
                                                                                               ^
vec.cpp:3371:101: error: use of undeclared identifier '__digits'
template<>class __libcpp_compute_min<long,63,1>{public:constexpr static long const value=(()((()1)<<__digits));
                                                                                                    ^
vec.cpp:3374:115: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0,int __digits>class __libcpp_compute_min<__xcodeml_template_type_0_0,expression,0>{public:constexpr static __xcodeml_template_type_0_0 const value=__xcodeml_identity<__xcodeml_template_type_0_0>::t(0);
                                                                                                                  ^
vec.cpp:3381:57: error: type name requires a specifier or qualifier
protected:constexpr static int const digits=static_cast<>((((sizeof(__xcodeml_template_type_0_0))*8)-is_signed));
                                                        ^
vec.cpp:3384:117: error: use of undeclared identifier 'expression'
protected:constexpr static __xcodeml_template_type_0_0 const __min=__libcpp_compute_min<__xcodeml_template_type_0_0,expression,expression>::value;
                                                                                                                    ^
vec.cpp:3478:30: error: non-void function 'min' should return a value [-Wreturn-type]
protected:static float min(){return;
                             ^
vec.cpp:3480:30: error: non-void function 'max' should return a value [-Wreturn-type]
protected:static float max(){return;
                             ^
vec.cpp:3487:34: error: non-void function 'epsilon' should return a value [-Wreturn-type]
protected:static float epsilon(){return;
                                 ^
vec.cpp:3506:37: error: non-void function 'denorm_min' should return a value [-Wreturn-type]
protected:static float denorm_min(){return;
                                    ^
vec.cpp:3523:31: error: non-void function 'min' should return a value [-Wreturn-type]
protected:static double min(){return;
                              ^
vec.cpp:3525:31: error: non-void function 'max' should return a value [-Wreturn-type]
protected:static double max(){return;
                              ^
vec.cpp:3532:35: error: non-void function 'epsilon' should return a value [-Wreturn-type]
protected:static double epsilon(){return;
                                  ^
vec.cpp:3551:38: error: non-void function 'denorm_min' should return a value [-Wreturn-type]
protected:static double denorm_min(){return;
                                     ^
vec.cpp:3568:36: error: non-void function 'min' should return a value [-Wreturn-type]
protected:static long double min(){return;
                                   ^
vec.cpp:3570:36: error: non-void function 'max' should return a value [-Wreturn-type]
protected:static long double max(){return;
                                   ^
vec.cpp:3577:40: error: non-void function 'epsilon' should return a value [-Wreturn-type]
protected:static long double epsilon(){return;
                                       ^
vec.cpp:3596:43: error: non-void function 'denorm_min' should return a value [-Wreturn-type]
protected:static long double denorm_min(){return;
                                          ^
vec.cpp:3606:154: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                                                                                                                         ^
vec.cpp:3606:260: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                                                                                                                                                                                                                                   ^
vec.cpp:3607:104: error: use of undeclared identifier 'expression'
private:typedef typename __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>::type type;
                                                                                                       ^
vec.cpp:3607:117: error: non-friend class member 'type' cannot have a qualified name
private:typedef typename __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>::type type;
                                                                                                                  ~~^
vec.cpp:3607:117: error: typedef declarator cannot be qualified
private:typedef typename __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>::type type;
                                                                                                                  ~~^
vec.cpp:3607:121: error: expected ';' at end of declaration list
private:typedef typename __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>::type type;
                                                                                                                        ^
                                                                                                                        ;
vec.cpp:3609:129: error: use of undeclared identifier 'expression'
public:constexpr static bool const is_specialized=__libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>::is_specialized;
                                                                                                                                ^
vec.cpp:3610:102: error: use of undeclared identifier 'expression'
public:static typename __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>::type min(){return(__libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>::min());
                                                                                                     ^
vec.cpp:3610:115: error: non-friend class member 'type' cannot have a qualified name
public:static typename __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>::type min(){return(__libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>::min());
                                                                                                                ~~^
vec.cpp:3610:119: error: expected ';' at end of declaration list
public:static typename __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>::type min(){return(__libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>::min());
                                                                                                                      ^
                                                                                                                      ;
vec.cpp:3617:122: error: use of undeclared identifier 'expression'
public:constexpr static int const digits10=__libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>::digits10;
                                                                                                                         ^
vec.cpp:3618:126: error: use of undeclared identifier 'expression'
public:constexpr static int const max_digits10=__libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>::max_digits10;
                                                                                                                             ^
vec.cpp:3619:124: error: use of undeclared identifier 'expression'
public:constexpr static bool const is_signed=__libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>::is_signed;
                                                                                                                           ^
vec.cpp:3620:125: error: use of undeclared identifier 'expression'
public:constexpr static bool const is_integer=__libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>::is_integer;
                                                                                                                            ^
vec.cpp:3621:123: error: use of undeclared identifier 'expression'
public:constexpr static bool const is_exact=__libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>::is_exact;
                                                                                                                          ^
vec.cpp:3622:119: error: use of undeclared identifier 'expression'
public:constexpr static int const radix=__libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>::radix;
                                                                                                                      ^
vec.cpp:3623:102: error: use of undeclared identifier 'expression'
public:static typename __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>::type epsilon(){return(__libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>::epsilon());
                                                                                                     ^
vec.cpp:3623:115: error: non-friend class member 'type' cannot have a qualified name
public:static typename __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>::type epsilon(){return(__libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>::epsilon());
                                                                                                                ~~^
vec.cpp:3623:119: error: expected ';' at end of declaration list
public:static typename __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>::type epsilon(){return(__libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>::epsilon());
                                                                                                                      ^
                                                                                                                      ;
vec.cpp:3628:128: error: use of undeclared identifier 'expression'
public:constexpr static int const min_exponent10=__libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>::min_exponent10;
                                                                                                                               ^
vec.cpp:3629:126: error: use of undeclared identifier 'expression'
public:constexpr static int const max_exponent=__libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>::max_exponent;
                                                                                                                             ^
vec.cpp:3630:128: error: use of undeclared identifier 'expression'
public:constexpr static int const max_exponent10=__libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>::max_exponent10;
                                                                                                                               ^
vec.cpp:3631:127: error: use of undeclared identifier 'expression'
public:constexpr static bool const has_infinity=__libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>::has_infinity;
                                                                                                                              ^
vec.cpp:3632:128: error: use of undeclared identifier 'expression'
public:constexpr static bool const has_quiet_NaN=__libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>::has_quiet_NaN;
                                                                                                                               ^
vec.cpp:3633:132: error: use of undeclared identifier 'expression'
public:constexpr static bool const has_signaling_NaN=__libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>::has_signaling_NaN;
                                                                                                                                   ^
vec.cpp:3634:144: error: use of undeclared identifier 'expression'
public:constexpr static enum float_denorm_style const has_denorm=__libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>::has_denorm;
                                                                                                                                               ^
vec.cpp:3635:130: error: use of undeclared identifier 'expression'
public:constexpr static bool const has_denorm_loss=__libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>::has_denorm_loss;
                                                                                                                                 ^
vec.cpp:3636:102: error: use of undeclared identifier 'expression'
public:static typename __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>::type infinity(){return(__libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>::infinity());
                                                                                                     ^
vec.cpp:3636:115: error: non-friend class member 'type' cannot have a qualified name
public:static typename __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>::type infinity(){return(__libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>::infinity());
                                                                                                                ~~^
vec.cpp:3636:119: error: expected ';' at end of declaration list
public:static typename __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>::type infinity(){return(__libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>::infinity());
                                                                                                                      ^
                                                                                                                      ;
vec.cpp:3645:125: error: use of undeclared identifier 'expression'
public:constexpr static bool const is_bounded=__libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>::is_bounded;
                                                                                                                            ^
vec.cpp:3646:124: error: use of undeclared identifier 'expression'
public:constexpr static bool const is_modulo=__libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>::is_modulo;
                                                                                                                           ^
vec.cpp:3647:120: error: use of undeclared identifier 'expression'
public:constexpr static bool const traps=__libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>::traps;
                                                                                                                       ^
vec.cpp:3648:130: error: use of undeclared identifier 'expression'
public:constexpr static bool const tinyness_before=__libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>::tinyness_before;
                                                                                                                                 ^
vec.cpp:3649:144: error: use of undeclared identifier 'expression'
public:constexpr static enum float_round_style const round_style=__libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>::round_style;
                                                                                                                                               ^
vec.cpp:3659:35: error: constexpr variable 'digits' must be initialized by a constant expression
public:constexpr static int const digits=__libcpp_numeric_limits::digits;
                                  ^      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:3659:42: note: initializer of 'digits' is not a constant expression
public:constexpr static int const digits=__libcpp_numeric_limits::digits;
                                         ^
vec.cpp:3216:38: note: declared here
protected:constexpr static int const digits=static_cast<>((((sizeof(unsigned long long))*8)-is_signed));
                                     ^
vec.cpp:3660:35: error: constexpr variable 'digits10' must be initialized by a constant expression
public:constexpr static int const digits10=__libcpp_numeric_limits::digits10;
                                  ^        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:3660:44: note: initializer of 'digits10' is not a constant expression
public:constexpr static int const digits10=__libcpp_numeric_limits::digits10;
                                           ^
vec.cpp:3217:38: note: declared here
protected:constexpr static int const digits10=((digits*3)/10);
                                     ^
vec.cpp:3662:46: error: constexpr variable 'is_signed' must be initialized by a constant expression
public:constexpr static bool const is_signed=__libcpp_numeric_limits::is_signed;
                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:3683:46: error: constexpr variable 'is_modulo' must be initialized by a constant expression
public:constexpr static bool const is_modulo=__libcpp_numeric_limits::is_modulo;
                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:3687:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:3695:35: error: constexpr variable 'digits' must be initialized by a constant expression
public:constexpr static int const digits=__libcpp_numeric_limits::digits;
                                  ^      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:3695:42: note: initializer of 'digits' is not a constant expression
public:constexpr static int const digits=__libcpp_numeric_limits::digits;
                                         ^
vec.cpp:3253:38: note: declared here
protected:constexpr static int const digits=static_cast<>((((sizeof(unsigned int))*8)-is_signed));
                                     ^
vec.cpp:3696:35: error: constexpr variable 'digits10' must be initialized by a constant expression
public:constexpr static int const digits10=__libcpp_numeric_limits::digits10;
                                  ^        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:3696:44: note: initializer of 'digits10' is not a constant expression
public:constexpr static int const digits10=__libcpp_numeric_limits::digits10;
                                           ^
vec.cpp:3254:38: note: declared here
protected:constexpr static int const digits10=((digits*3)/10);
                                     ^
vec.cpp:3698:46: error: constexpr variable 'is_signed' must be initialized by a constant expression
public:constexpr static bool const is_signed=__libcpp_numeric_limits::is_signed;
                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:3719:46: error: constexpr variable 'is_modulo' must be initialized by a constant expression
public:constexpr static bool const is_modulo=__libcpp_numeric_limits::is_modulo;
                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:3723:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:3731:35: error: constexpr variable 'digits' must be initialized by a constant expression
public:constexpr static int const digits=__libcpp_numeric_limits::digits;
                                  ^      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:3731:42: note: initializer of 'digits' is not a constant expression
public:constexpr static int const digits=__libcpp_numeric_limits::digits;
                                         ^
vec.cpp:3290:38: note: declared here
protected:constexpr static int const digits=static_cast<>((((sizeof(unsigned long))*8)-is_signed));
                                     ^
vec.cpp:3732:35: error: constexpr variable 'digits10' must be initialized by a constant expression
public:constexpr static int const digits10=__libcpp_numeric_limits::digits10;
                                  ^        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:3732:44: note: initializer of 'digits10' is not a constant expression
public:constexpr static int const digits10=__libcpp_numeric_limits::digits10;
                                           ^
vec.cpp:3291:38: note: declared here
protected:constexpr static int const digits10=((digits*3)/10);
                                     ^
vec.cpp:3734:46: error: constexpr variable 'is_signed' must be initialized by a constant expression
public:constexpr static bool const is_signed=__libcpp_numeric_limits::is_signed;
                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:3755:46: error: constexpr variable 'is_modulo' must be initialized by a constant expression
public:constexpr static bool const is_modulo=__libcpp_numeric_limits::is_modulo;
                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:3759:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:3768:35: error: constexpr variable 'digits' must be initialized by a constant expression
public:constexpr static int const digits=__libcpp_numeric_limits::digits;
                                  ^      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:3768:42: note: initializer of 'digits' is not a constant expression
public:constexpr static int const digits=__libcpp_numeric_limits::digits;
                                         ^
vec.cpp:3327:38: note: declared here
protected:constexpr static int const digits=static_cast<>((((sizeof(long))*8)-is_signed));
                                     ^
vec.cpp:3769:35: error: constexpr variable 'digits10' must be initialized by a constant expression
public:constexpr static int const digits10=__libcpp_numeric_limits::digits10;
                                  ^        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:3769:44: note: initializer of 'digits10' is not a constant expression
public:constexpr static int const digits10=__libcpp_numeric_limits::digits10;
                                           ^
vec.cpp:3328:38: note: declared here
protected:constexpr static int const digits10=((digits*3)/10);
                                     ^
vec.cpp:3771:46: error: constexpr variable 'is_signed' must be initialized by a constant expression
public:constexpr static bool const is_signed=__libcpp_numeric_limits::is_signed;
                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:3792:46: error: constexpr variable 'is_modulo' must be initialized by a constant expression
public:constexpr static bool const is_modulo=__libcpp_numeric_limits::is_modulo;
                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:3798:22: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr bool const numeric_limits::is_specialized;
                     ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:3799:21: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr int const numeric_limits::digits;
                    ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:3800:21: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr int const numeric_limits::digits10;
                    ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:3801:21: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr int const numeric_limits::max_digits10;
                    ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:3802:22: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr bool const numeric_limits::is_signed;
                     ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:3803:22: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr bool const numeric_limits::is_integer;
                     ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:3804:22: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr bool const numeric_limits::is_exact;
                     ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:3805:21: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr int const numeric_limits::radix;
                    ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:3806:21: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr int const numeric_limits::min_exponent;
                    ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:3807:21: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr int const numeric_limits::min_exponent10;
                    ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:3808:21: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr int const numeric_limits::max_exponent;
                    ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:3809:21: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr int const numeric_limits::max_exponent10;
                    ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:3810:22: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr bool const numeric_limits::has_infinity;
                     ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:3811:22: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr bool const numeric_limits::has_quiet_NaN;
                     ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:3812:22: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr bool const numeric_limits::has_signaling_NaN;
                     ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:3813:41: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr enum float_denorm_style const numeric_limits::has_denorm;
                                        ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:3814:22: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr bool const numeric_limits::has_denorm_loss;
                     ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:3815:22: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr bool const numeric_limits::is_iec559;
                     ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:3816:22: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr bool const numeric_limits::is_bounded;
                     ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:3817:22: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr bool const numeric_limits::is_modulo;
                     ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:3818:22: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr bool const numeric_limits::traps;
                     ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:3819:22: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr bool const numeric_limits::tinyness_before;
                     ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:3820:40: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr enum float_round_style const numeric_limits::round_style;
                                       ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:3821:163: warning: typedef requires a name [-Wmissing-declarations]
template<typename __xcodeml_template_type_0_0>class numeric_limits<__xcodeml_template_type_0_0 const>:private numeric_limits<__xcodeml_template_type_0_0>{private:typedef numeric_limits<__xcodeml_template_type_0_0>;
                                                                                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:3867:22: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr bool const numeric_limits::is_specialized;
                     ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:3868:21: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr int const numeric_limits::digits;
                    ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:3869:21: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr int const numeric_limits::digits10;
                    ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:3870:21: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr int const numeric_limits::max_digits10;
                    ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:3871:22: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr bool const numeric_limits::is_signed;
                     ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:3872:22: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr bool const numeric_limits::is_integer;
                     ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:3873:22: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr bool const numeric_limits::is_exact;
                     ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:3874:21: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr int const numeric_limits::radix;
                    ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:3875:21: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr int const numeric_limits::min_exponent;
                    ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:3876:21: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr int const numeric_limits::min_exponent10;
                    ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:3877:21: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr int const numeric_limits::max_exponent;
                    ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:3878:21: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr int const numeric_limits::max_exponent10;
                    ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:3879:22: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr bool const numeric_limits::has_infinity;
                     ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:3880:22: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr bool const numeric_limits::has_quiet_NaN;
                     ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:3881:22: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr bool const numeric_limits::has_signaling_NaN;
                     ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:3882:41: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr enum float_denorm_style const numeric_limits::has_denorm;
                                        ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:3883:22: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr bool const numeric_limits::has_denorm_loss;
                     ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:3884:22: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr bool const numeric_limits::is_iec559;
                     ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:3885:22: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr bool const numeric_limits::is_bounded;
                     ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:3886:22: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr bool const numeric_limits::is_modulo;
                     ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:3887:22: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr bool const numeric_limits::traps;
                     ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:3888:22: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr bool const numeric_limits::tinyness_before;
                     ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:3889:40: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr enum float_round_style const numeric_limits::round_style;
                                       ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:3890:166: warning: typedef requires a name [-Wmissing-declarations]
template<typename __xcodeml_template_type_0_0>class numeric_limits<__xcodeml_template_type_0_0 volatile>:private numeric_limits<__xcodeml_template_type_0_0>{private:typedef numeric_limits<__xcodeml_template_type_0_0>;
                                                                                                                                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:3936:22: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr bool const numeric_limits::is_specialized;
                     ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:3937:21: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr int const numeric_limits::digits;
                    ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:3938:21: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr int const numeric_limits::digits10;
                    ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:3939:21: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr int const numeric_limits::max_digits10;
                    ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:3940:22: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr bool const numeric_limits::is_signed;
                     ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:3941:22: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr bool const numeric_limits::is_integer;
                     ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:3942:22: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr bool const numeric_limits::is_exact;
                     ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:3943:21: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr int const numeric_limits::radix;
                    ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:3944:21: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr int const numeric_limits::min_exponent;
                    ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:3945:21: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr int const numeric_limits::min_exponent10;
                    ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:3946:21: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr int const numeric_limits::max_exponent;
                    ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:3947:21: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr int const numeric_limits::max_exponent10;
                    ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:3948:22: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr bool const numeric_limits::has_infinity;
                     ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:3949:22: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr bool const numeric_limits::has_quiet_NaN;
                     ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:3950:22: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr bool const numeric_limits::has_signaling_NaN;
                     ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:3951:41: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr enum float_denorm_style const numeric_limits::has_denorm;
                                        ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:3952:22: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr bool const numeric_limits::has_denorm_loss;
                     ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:3953:22: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr bool const numeric_limits::is_iec559;
                     ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:3954:22: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr bool const numeric_limits::is_bounded;
                     ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:3955:22: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr bool const numeric_limits::is_modulo;
                     ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:3956:22: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr bool const numeric_limits::traps;
                     ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:3957:22: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr bool const numeric_limits::tinyness_before;
                     ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:3958:40: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr enum float_round_style const numeric_limits::round_style;
                                       ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:3959:172: warning: typedef requires a name [-Wmissing-declarations]
template<typename __xcodeml_template_type_0_0>class numeric_limits<__xcodeml_template_type_0_0 volatile const>:private numeric_limits<__xcodeml_template_type_0_0>{private:typedef numeric_limits<__xcodeml_template_type_0_0>;
                                                                                                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:4005:22: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr bool const numeric_limits::is_specialized;
                     ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:4006:21: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr int const numeric_limits::digits;
                    ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:4007:21: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr int const numeric_limits::digits10;
                    ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:4008:21: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr int const numeric_limits::max_digits10;
                    ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:4009:22: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr bool const numeric_limits::is_signed;
                     ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:4010:22: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr bool const numeric_limits::is_integer;
                     ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:4011:22: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr bool const numeric_limits::is_exact;
                     ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:4012:21: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr int const numeric_limits::radix;
                    ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:4013:21: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr int const numeric_limits::min_exponent;
                    ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:4014:21: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr int const numeric_limits::min_exponent10;
                    ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:4015:21: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr int const numeric_limits::max_exponent;
                    ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:4016:21: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr int const numeric_limits::max_exponent10;
                    ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:4017:22: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr bool const numeric_limits::has_infinity;
                     ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:4018:22: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr bool const numeric_limits::has_quiet_NaN;
                     ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:4019:22: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr bool const numeric_limits::has_signaling_NaN;
                     ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:4020:41: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr enum float_denorm_style const numeric_limits::has_denorm;
                                        ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:4021:22: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr bool const numeric_limits::has_denorm_loss;
                     ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:4022:22: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr bool const numeric_limits::is_iec559;
                     ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:4023:22: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr bool const numeric_limits::is_bounded;
                     ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:4024:22: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr bool const numeric_limits::is_modulo;
                     ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:4025:22: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr bool const numeric_limits::traps;
                     ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:4026:22: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr bool const numeric_limits::tinyness_before;
                     ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:4027:40: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr enum float_round_style const numeric_limits::round_style;
                                       ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:4028:21: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr int const numeric_limits::digits;
                    ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:4029:21: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr int const numeric_limits::digits;
                    ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:4030:21: error: 'numeric_limits' is not a class, namespace, or enumeration
constexpr int const numeric_limits::digits;
                    ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:4066:101: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>using __bitop_unsigned_integer=integral_constant<bool,expression>;
                                                                                                    ^
vec.cpp:4067:157: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0 __rotl(__xcodeml_template_type_0_0 __t,unsigned int __cnt){integral_constant<bool,expression>::value"__rotl requires unsigned";
                                                                                                                                                            ^
vec.cpp:4072:157: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0 __rotr(__xcodeml_template_type_0_0 __t,unsigned int __cnt){integral_constant<bool,expression>::value"__rotr requires unsigned";
                                                                                                                                                            ^
vec.cpp:4077:121: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>int __countr_zero(__xcodeml_template_type_0_0 __t){integral_constant<bool,expression>::value"__countr_zero requires unsigned";
                                                                                                                        ^
vec.cpp:4081:32: error: 'numeric_limits' is not a class, namespace, or enumeration
unsigned int const __ulldigits=numeric_limits::digits;
                               ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:4082:69: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
while(((__iter=(__libcpp_ctz(static_cast<unsigned long long>(__t))))==__ulldigits)){{(__ret+=__iter);
       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~
vec.cpp:4082:69: note: remove extraneous parentheses around the comparison to silence this warning
while(((__iter=(__libcpp_ctz(static_cast<unsigned long long>(__t))))==__ulldigits)){{(__ret+=__iter);
      ~                                                             ^            ~
vec.cpp:4082:69: note: use '=' to turn this equality comparison into an assignment
while(((__iter=(__libcpp_ctz(static_cast<unsigned long long>(__t))))==__ulldigits)){{(__ret+=__iter);
                                                                    ^~
                                                                    =
vec.cpp:4088:121: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>int __countl_zero(__xcodeml_template_type_0_0 __t){integral_constant<bool,expression>::value"__countl_zero requires unsigned";
                                                                                                                        ^
vec.cpp:4090:124: error: 'numeric_limits' is not a class, namespace, or enumeration
if(((sizeof(__xcodeml_template_type_0_0))<=(sizeof(unsigned int)))){return((__libcpp_clz(static_cast<unsigned int>(__t)))-(numeric_limits::digits-numeric_limits<__xcodeml_template_type_0_0>::digits));}else{if(((sizeof(__xcodeml_template_type_0_0))<=(sizeof(unsigned long)))){return((__libcpp_clz(static_cast<unsigned long>(__t)))-(numeric_limits::digits-numeric_limits<__xcodeml_template_type_0_0>::digits));}else{if(((sizeof(__xcodeml_template_type_0_0))<=(sizeof(unsigned long long)))){return((__libcpp_clz(static_cast<unsigned long long>(__t)))-(numeric_limits::digits-numeric_limits<__xcodeml_template_type_0_0>::digits));}else{{int __ret=0;
                                                                                                                           ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:4090:332: error: 'numeric_limits' is not a class, namespace, or enumeration
if(((sizeof(__xcodeml_template_type_0_0))<=(sizeof(unsigned int)))){return((__libcpp_clz(static_cast<unsigned int>(__t)))-(numeric_limits::digits-numeric_limits<__xcodeml_template_type_0_0>::digits));}else{if(((sizeof(__xcodeml_template_type_0_0))<=(sizeof(unsigned long)))){return((__libcpp_clz(static_cast<unsigned long>(__t)))-(numeric_limits::digits-numeric_limits<__xcodeml_template_type_0_0>::digits));}else{if(((sizeof(__xcodeml_template_type_0_0))<=(sizeof(unsigned long long)))){return((__libcpp_clz(static_cast<unsigned long long>(__t)))-(numeric_limits::digits-numeric_limits<__xcodeml_template_type_0_0>::digits));}else{{int __ret=0;
                                                                                                                                                                                                                                                                                                                                           ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:4090:550: error: 'numeric_limits' is not a class, namespace, or enumeration
if(((sizeof(__xcodeml_template_type_0_0))<=(sizeof(unsigned int)))){return((__libcpp_clz(static_cast<unsigned int>(__t)))-(numeric_limits::digits-numeric_limits<__xcodeml_template_type_0_0>::digits));}else{if(((sizeof(__xcodeml_template_type_0_0))<=(sizeof(unsigned long)))){return((__libcpp_clz(static_cast<unsigned long>(__t)))-(numeric_limits::digits-numeric_limits<__xcodeml_template_type_0_0>::digits));}else{if(((sizeof(__xcodeml_template_type_0_0))<=(sizeof(unsigned long long)))){return((__libcpp_clz(static_cast<unsigned long long>(__t)))-(numeric_limits::digits-numeric_limits<__xcodeml_template_type_0_0>::digits));}else{{int __ret=0;

vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:4092:32: error: 'numeric_limits' is not a class, namespace, or enumeration
unsigned int const __ulldigits=numeric_limits::digits;
                               ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:4100:53: error: expected ';' at end of declaration
template <>int __countl_zero(unsigned long long __t)
                                                    ^
                                                    ;
vec.cpp:4101:120: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>int __countl_one(__xcodeml_template_type_0_0 __t){integral_constant<bool,expression>::value"__countl_one requires unsigned";
                                                                                                                       ^
vec.cpp:4104:120: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>int __countr_one(__xcodeml_template_type_0_0 __t){integral_constant<bool,expression>::value"__countr_one requires unsigned";
                                                                                                                       ^
vec.cpp:4107:118: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>int __popcount(__xcodeml_template_type_0_0 __t){integral_constant<bool,expression>::value"__libcpp_popcount requires unsigned";
                                                                                                                     ^
vec.cpp:4110:8: error: 'numeric_limits' is not a class, namespace, or enumeration
(__t>>=numeric_limits::digits);
       ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:4115:127: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>unsigned int __bit_log2(__xcodeml_template_type_0_0 __t){integral_constant<bool,expression>::value"__bit_log2 requires unsigned";
                                                                                                                              ^
vec.cpp:4116:14: error: no member named 'numeric_limits' in namespace 'std'
return((std::numeric_limits<__xcodeml_template_type_0_0>::digits-1)-((__t)));
        ~~~~~^
vec.cpp:4116:29: error: '__xcodeml_template_type_0_0' does not refer to a value
return((std::numeric_limits<__xcodeml_template_type_0_0>::digits-1)-((__t)));
                            ^
vec.cpp:4115:19: note: declared here
template<typename __xcodeml_template_type_0_0>unsigned int __bit_log2(__xcodeml_template_type_0_0 __t){integral_constant<bool,expression>::value"__bit_log2 requires unsigned";
                  ^
vec.cpp:4116:59: error: no member named 'digits' in the global namespace
return((std::numeric_limits<__xcodeml_template_type_0_0>::digits-1)-((__t)));
                                                        ~~^
vec.cpp:4118:117: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>bool __ispow2(__xcodeml_template_type_0_0 __t){integral_constant<bool,expression>::value"__ispow2 requires unsigned";
                                                                                                                    ^
vec.cpp:4159:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:4160:17: error: template 'initializer_list' cannot be referenced with a class specifier
template<>class initializer_list template<>class initializer_list<unsigned long>{private:unsigned long const(*__begin_);
                ^
vec.cpp:4123:67: note: declared here
namespace std{template<typename __xcodeml_template_type_0_0>class initializer_list{private:__xcodeml_template_type_0_0 const(*__begin_);
                                                                  ^
vec.cpp:4160:34: error: expected unqualified-id
template<>class initializer_list template<>class initializer_list<unsigned long>{private:unsigned long const(*__begin_);
                                 ^
vec.cpp:4176:143: error: use of undeclared identifier '__il'
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0 const(*begin(initializer_list<__xcodeml_template_type_0_0>)){return(__il.begin());
                                                                                                                                              ^
vec.cpp:4178:141: error: use of undeclared identifier '__il'
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0 const(*end(initializer_list<__xcodeml_template_type_0_0>)){return(__il.end());
                                                                                                                                            ^
vec.cpp:4249:13: error: functions that differ only in their return type cannot be overloaded
char const(*strchr(char const(*__s),int __c)){return(__libcpp_strchr(__s,__c));
            ^
vec.cpp:4210:17: note: previous declaration is here
extern"C"{char(*strchr(char const(*),int));};
                ^
vec.cpp:4255:13: error: functions that differ only in their return type cannot be overloaded
char const(*strpbrk(char const(*__s1),char const(*__s2))){return(__libcpp_strpbrk(__s1,__s2));
            ^
vec.cpp:4229:17: note: previous declaration is here
extern"C"{char(*strpbrk(char const(*),char const(*)));};
                ^
vec.cpp:4261:13: error: functions that differ only in their return type cannot be overloaded
char const(*strrchr(char const(*__s),int __c)){return(__libcpp_strrchr(__s,__c));
            ^
vec.cpp:4230:17: note: previous declaration is here
extern"C"{char(*strrchr(char const(*),int));};
                ^
vec.cpp:4267:13: error: functions that differ only in their return type cannot be overloaded
void const(*memchr(void const(*__s),int __c,unsigned long __n)){return(__libcpp_memchr(__s,__c,__n));
            ^
vec.cpp:4199:17: note: previous declaration is here
extern"C"{void(*memchr(void const(*),int,unsigned long));};
                ^
vec.cpp:4273:13: error: functions that differ only in their return type cannot be overloaded
char const(*strstr(char const(*__s1),char const(*__s2))){return(__libcpp_strstr(__s1,__s2));
            ^
vec.cpp:4234:17: note: previous declaration is here
extern"C"{char(*strstr(char const(*),char const(*)));};
                ^
vec.cpp:4278:31: error: expected unqualified-id
namespace std{namespace __1{::;
                              ^
vec.cpp:4279:3: error: expected unqualified-id
::;
  ^
vec.cpp:4280:3: error: expected unqualified-id
::;
  ^
vec.cpp:4281:3: error: expected unqualified-id
::;
  ^
vec.cpp:4282:3: error: expected unqualified-id
::;
  ^
vec.cpp:4283:3: error: expected unqualified-id
::;
  ^
vec.cpp:4284:3: error: expected unqualified-id
::;
  ^
vec.cpp:4285:3: error: expected unqualified-id
::;
  ^
vec.cpp:4286:3: error: expected unqualified-id
::;
  ^
vec.cpp:4287:3: error: expected unqualified-id
::;
  ^
vec.cpp:4288:3: error: expected unqualified-id
::;
  ^
vec.cpp:4289:3: error: expected unqualified-id
::;
  ^
vec.cpp:4290:3: error: expected unqualified-id
::;
  ^
vec.cpp:4291:3: error: expected unqualified-id
::;
  ^
vec.cpp:4292:3: error: expected unqualified-id
::;
  ^
vec.cpp:4293:3: error: expected unqualified-id
::;
  ^
vec.cpp:4294:3: error: expected unqualified-id
::;
  ^
vec.cpp:4295:3: error: expected unqualified-id
::;
  ^
vec.cpp:4296:3: error: expected unqualified-id
::;
  ^
vec.cpp:4297:3: error: expected unqualified-id
::;
  ^
vec.cpp:4298:3: error: expected unqualified-id
::;
  ^
vec.cpp:4299:3: error: expected unqualified-id
::;
  ^
vec.cpp:4300:3: error: expected unqualified-id
::;
  ^
vec.cpp:4307:138: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>class tuple_size<__xcodeml_template_type_0_0 const>:public integral_constant<unsigned long,expression>{}
                                                                                                                                         ^
vec.cpp:4309:141: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>class tuple_size<__xcodeml_template_type_0_0 volatile>:public integral_constant<unsigned long,expression>{}
                                                                                                                                            ^
vec.cpp:4311:147: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>class tuple_size<__xcodeml_template_type_0_0 volatile const>:public integral_constant<unsigned long,expression>{}
                                                                                                                                                  ^
vec.cpp:4315:85: error: use of undeclared identifier 'expression'
template<unsigned long _Ip,typename __xcodeml_template_type_0_1>class tuple_element<expression,__xcodeml_template_type_0_1 const>{public:typedef typename add_const<typename tuple_element<expression,__xcodeml_template_type_0_1>::type>::type type;
                                                                                    ^
vec.cpp:4318:85: error: use of undeclared identifier 'expression'
template<unsigned long _Ip,typename __xcodeml_template_type_0_1>class tuple_element<expression,__xcodeml_template_type_0_1 volatile>{public:typedef typename add_volatile<typename tuple_element<expression,__xcodeml_template_type_0_1>::type>::type type;
                                                                                    ^
vec.cpp:4321:85: error: use of undeclared identifier 'expression'
template<unsigned long _Ip,typename __xcodeml_template_type_0_1>class tuple_element<expression,__xcodeml_template_type_0_1 volatile const>{public:typedef typename add_cv<typename tuple_element<expression,__xcodeml_template_type_0_1>::type>::type type;
                                                                                    ^
vec.cpp:4336:33: error: expected expression
template<>class __tuple_indices<...>{}
                                ^
vec.cpp:4338:177: error: expected a type
template<typename __xcodeml_template_type_0_0,__xcodeml_template_type_0_0 _Values>class __integer_sequence{public:template<typename __xcodeml_template_type_1_1>using __convert=<__xcodeml_template_type_1_1,...>;
                                                                                                                                                                                ^
vec.cpp:4338:177: error: expected ';' after alias declaration
template<typename __xcodeml_template_type_0_0,__xcodeml_template_type_0_0 _Values>class __integer_sequence{public:template<typename __xcodeml_template_type_1_1>using __convert=<__xcodeml_template_type_1_1,...>;
                                                                                                                                                                                ^
                                                                                                                                                                                ;
vec.cpp:4339:76: error: expected expression
public:template<unsigned long _Sp>using __to_tuple_indices=__tuple_indices<...>;
                                                                           ^
vec.cpp:4342:50: error: expected expression
template<>class __integer_sequence<unsigned long,...>{public:template<typename __xcodeml_template_type_0_1>using __convert=<__xcodeml_template_type_0_1,...>;
                                                 ^
vec.cpp:4350:8: warning: typedef requires a name [-Wmissing-declarations]
public:typedef void/*type*/;
       ^~~~~~~~~~~~
vec.cpp:4356:49: error: expected expression
public:typedef class::std::__1::__tuple_indices<...>type;
                                                ^
vec.cpp:4361:72: error: expected expression
template<typename __xcodeml_template_type_0_0>class __tuple_like<tuple<...> >:public integral_constant<bool,1>{}
                                                                       ^
vec.cpp:4361:77: error: expected a type
template<typename __xcodeml_template_type_0_0>class __tuple_like<tuple<...> >:public integral_constant<bool,1>{}
                                                                            ^
vec.cpp:4363:70: error: expected expression
template<typename __xcodeml_template_type_0_0>class tuple_size<tuple<...> >:public integral_constant<unsigned long,expression>{}
                                                                     ^
vec.cpp:4363:75: error: expected a type
template<typename __xcodeml_template_type_0_0>class tuple_size<tuple<...> >:public integral_constant<unsigned long,expression>{}
                                                                          ^
vec.cpp:4365:88: error: use of undeclared identifier 'expression'
template<unsigned long _Ip,typename __xcodeml_template_type_0_1>typename tuple_element<expression,tuple<...> >::type&get(tuple<...>)
                                                                                       ^
vec.cpp:4365:110: error: expected unqualified-id
template<unsigned long _Ip,typename __xcodeml_template_type_0_1>typename tuple_element<expression,tuple<...> >::type&get(tuple<...>)
                                                                                                             ^
vec.cpp:4371:125: error: use of undeclared identifier 'expression'
template<unsigned long _Ip,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>typename tuple_element<expression,pair<__xcodeml_template_type_0_1,__xcodeml_template_type_0_2> >::type&get(pair<__xcodeml_template_type_0_1,__xcodeml_template_type_0_2>)
                                                                                                                            ^
vec.cpp:4371:198: error: expected unqualified-id
template<unsigned long _Ip,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>typename tuple_element<expression,pair<__xcodeml_template_type_0_1,__xcodeml_template_type_0_2> >::type&get(pair<__xcodeml_template_type_0_1,__xcodeml_template_type_0_2>)
                                                                                                                                                                                                     ^
vec.cpp:4377:120: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0,unsigned long _Size>class __tuple_like<array<__xcodeml_template_type_0_0,expression> >:public integral_constant<bool,1>{}
                                                                                                                       ^
vec.cpp:4377:132: error: expected a type
template<typename __xcodeml_template_type_0_0,unsigned long _Size>class __tuple_like<array<__xcodeml_template_type_0_0,expression> >:public integral_constant<bool,1>{}
                                                                                                                                   ^
vec.cpp:4379:151: error: use of undeclared identifier 'expression'
template<unsigned long _Ip,typename __xcodeml_template_type_0_1,unsigned long _Size>__xcodeml_template_type_0_1&get(array<__xcodeml_template_type_0_1,expression>)
                                                                                                                                                      ^
vec.cpp:4379:151: error: use of undeclared identifier 'expression'
vec.cpp:4379:163: error: expected ';' at end of declaration
template<unsigned long _Ip,typename __xcodeml_template_type_0_1,unsigned long _Size>__xcodeml_template_type_0_1&get(array<__xcodeml_template_type_0_1,expression>)
                                                                                                                                                                  ^
                                                                                                                                                                  ;
vec.cpp:4380:157: error: use of undeclared identifier 'expression'
template<unsigned long _Ip,typename __xcodeml_template_type_0_1,unsigned long _Size>__xcodeml_template_type_0_1 const&get(array<__xcodeml_template_type_0_1,expression>)
                                                                                                                                                            ^
vec.cpp:4380:157: error: use of undeclared identifier 'expression'
vec.cpp:4380:169: error: expected ';' at end of declaration
template<unsigned long _Ip,typename __xcodeml_template_type_0_1,unsigned long _Size>__xcodeml_template_type_0_1 const&get(array<__xcodeml_template_type_0_1,expression>)
                                                                                                                                                                        ^
                                                                                                                                                                        ;
vec.cpp:4381:152: error: use of undeclared identifier 'expression'
template<unsigned long _Ip,typename __xcodeml_template_type_0_1,unsigned long _Size>__xcodeml_template_type_0_1(*get(array<__xcodeml_template_type_0_1,expression>))
                                                                                                                                                       ^
vec.cpp:4381:165: error: expected ';' at end of declaration
template<unsigned long _Ip,typename __xcodeml_template_type_0_1,unsigned long _Size>__xcodeml_template_type_0_1(*get(array<__xcodeml_template_type_0_1,expression>))
                                                                                                                                                                    ^
                                                                                                                                                                    ;
vec.cpp:4382:158: error: use of undeclared identifier 'expression'
template<unsigned long _Ip,typename __xcodeml_template_type_0_1,unsigned long _Size>__xcodeml_template_type_0_1 const(*get(array<__xcodeml_template_type_0_1,expression>))
                                                                                                                                                             ^
vec.cpp:4382:171: error: expected ';' at end of declaration
template<unsigned long _Ip,typename __xcodeml_template_type_0_1,unsigned long _Size>__xcodeml_template_type_0_1 const(*get(array<__xcodeml_template_type_0_1,expression>))
                                                                                                                                                                          ^
                                                                                                                                                                          ;
vec.cpp:4385:31: error: expected expression
template<>class __tuple_types<...>{}
                              ^
vec.cpp:4387:85: error: use of undeclared identifier 'expression'
template<unsigned long _Ip,typename __xcodeml_template_type_0_1>class tuple_element<expression,__tuple_types<...> >{
                                                                                    ^
vec.cpp:4393:78: error: expected expression
template<typename __xcodeml_template_type_0_0>class tuple_size<__tuple_types<...> >:public integral_constant<unsigned long,expression>{}
                                                                             ^
vec.cpp:4393:83: error: expected a type
template<typename __xcodeml_template_type_0_0>class tuple_size<__tuple_types<...> >:public integral_constant<unsigned long,expression>{}
                                                                                  ^
vec.cpp:4395:80: error: expected expression
template<typename __xcodeml_template_type_0_0>class __tuple_like<__tuple_types<...> >:public integral_constant<bool,1>{}
                                                                               ^
vec.cpp:4395:85: error: expected a type
template<typename __xcodeml_template_type_0_0>class __tuple_like<__tuple_types<...> >:public integral_constant<bool,1>{}
                                                                                    ^
vec.cpp:4423:117: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>using __apply_cv_t=__apply_cv_mf<expression,expression,expression>;
                                                                                                                    ^
vec.cpp:4426:97: error: expected expression
template<typename __xcodeml_template_type_0_1,unsigned long _Idx>class __make_tuple_types_flat< <...>,__tuple_indices<...> >{public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1>using __apply_quals=__tuple_types<...>;
                                                                                                ^
vec.cpp:4426:119: error: expected expression
template<typename __xcodeml_template_type_0_1,unsigned long _Idx>class __make_tuple_types_flat< <...>,__tuple_indices<...> >{public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1>using __apply_quals=__tuple_types<...>;
                                                                                                                      ^
vec.cpp:4426:124: error: expected unqualified-id
template<typename __xcodeml_template_type_0_1,unsigned long _Idx>class __make_tuple_types_flat< <...>,__tuple_indices<...> >{public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1>using __apply_quals=__tuple_types<...>;
                                                                                                                           ^
vec.cpp:4429:148: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0,unsigned long _Np,unsigned long _Idx>class __make_tuple_types_flat<array<__xcodeml_template_type_0_0,expression>,__tuple_indices<...> >{public:template<unsigned long>using __value_type=__xcodeml_template_type_0_0;
                                                                                                                                                   ^
vec.cpp:4429:159: error: expected a type
template<typename __xcodeml_template_type_0_0,unsigned long _Np,unsigned long _Idx>class __make_tuple_types_flat<array<__xcodeml_template_type_0_0,expression>,__tuple_indices<...> >{public:template<unsigned long>using __value_type=__xcodeml_template_type_0_0;
                                                                                                                                                              ^
vec.cpp:4437:162: error: use of undeclared identifier 'expression'
public:using _Maker=__make_tuple_types_flat<typename remove_cv<typename remove_reference<__xcodeml_template_type_0_0>::type>::type,typename __make_tuple_indices<expression,expression>::type>;
                                                                                                                                                                 ^
vec.cpp:4437:186: error: no type named 'type' in the global namespace
public:using _Maker=__make_tuple_types_flat<typename remove_cv<typename remove_reference<__xcodeml_template_type_0_0>::type>::type,typename __make_tuple_indices<expression,expression>::type>;
                                                                                                                                                                                       ~~^
vec.cpp:4442:96: error: expected expression
template<typename __xcodeml_template_type_0_0,unsigned long _Ep>class __make_tuple_types<tuple<...>,expression,0,1>{public:typedef __tuple_types<...>;
                                                                                               ^
vec.cpp:4442:100: error: expected a type
template<typename __xcodeml_template_type_0_0,unsigned long _Ep>class __make_tuple_types<tuple<...>,expression,0,1>{public:typedef __tuple_types<...>;
                                                                                                   ^
vec.cpp:4445:104: error: expected expression
template<typename __xcodeml_template_type_0_0,unsigned long _Ep>class __make_tuple_types<__tuple_types<...>,expression,0,1>{public:typedef __tuple_types<...>;
                                                                                                       ^
vec.cpp:4445:108: error: expected a type
template<typename __xcodeml_template_type_0_0,unsigned long _Ep>class __make_tuple_types<__tuple_types<...>,expression,0,1>{public:typedef __tuple_types<...>;
                                                                                                           ^
vec.cpp:4450:56: error: use of undeclared identifier 'expression'
template<bool _Pred>using __all=integral_constant<bool,expression>;
                                                       ^
vec.cpp:4451:147: error: use of undeclared identifier 'expression'
class __tuple_sfinae_base{public:template<typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>static integral_constant<bool,expression>
                                                                                                                                                  ^
vec.cpp:4452:1: error: expected member name or ';' after declaration specifiers
public:template<>static class::std::__1::integral_constant<bool,0>__do_test(...)
^
vec.cpp:4454:121: error: expected expression
public:template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>using __convertible=decltype ();
                                                                                                                        ^
vec.cpp:4455:120: error: expected expression
public:template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>using __assignable=decltype ();
                                                                                                                       ^
vec.cpp:4461:181: error: expected class name
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __tuple_convertible<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1,1,1>:public/**/{}
                                                                                                                                                                                    ^
vec.cpp:4466:183: error: expected class name
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __tuple_constructible<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1,1,1>:public/**/{}
                                                                                                                                                                                      ^
vec.cpp:4471:180: error: expected class name
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __tuple_assignable<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1,1,1>:public/**/{}
                                                                                                                                                                                   ^
vec.cpp:4473:85: error: use of undeclared identifier 'expression'
template<unsigned long _Ip,typename __xcodeml_template_type_0_1>class tuple_element<expression,tuple<...> >{public:typedef typename tuple_element<expression,__tuple_types<...> >::type type;
                                                                                    ^
vec.cpp:4476:110: error: use of undeclared identifier 'expression'
template<unsigned long _Ip,typename __xcodeml_template_type_0_1>using tuple_element_t=typename tuple_element<expression,void/**/>::type;
                                                                                                             ^
vec.cpp:4476:132: error: expected ';' after alias declaration
template<unsigned long _Ip,typename __xcodeml_template_type_0_1>using tuple_element_t=typename tuple_element<expression,void/**/>::type;
                                                                                                                                   ^
                                                                                                                                   ;
vec.cpp:4481:134: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0,unsigned long _Expected>class __tuple_like_with_size_imp<1,__xcodeml_template_type_0_0,expression>:public integral_constant<bool,expression>{}
                                                                                                                                     ^
vec.cpp:4483:168: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0,unsigned long _ExpectedSize,typename __xcodeml_template_type_0_2>using __tuple_like_with_size=__tuple_like_with_size_imp<expression,tuple_size<__xcodeml_template_type_0_2>,expression>;
                                                                                                                                                                       ^
vec.cpp:4483:218: error: expected ';' after alias declaration
template<typename __xcodeml_template_type_0_0,unsigned long _ExpectedSize,typename __xcodeml_template_type_0_2>using __tuple_like_with_size=__tuple_like_with_size_imp<expression,tuple_size<__xcodeml_template_type_0_2>,expression>;
                                                                                                                                                                                                                         ^
                                                                                                                                                                                                                         ;
vec.cpp:4483:219: error: unknown type name 'expression'
template<typename __xcodeml_template_type_0_0,unsigned long _ExpectedSize,typename __xcodeml_template_type_0_2>using __tuple_like_with_size=__tuple_like_with_size_imp<expression,tuple_size<__xcodeml_template_type_0_2>,expression>;
                                                                                                                                                                                                                          ^
vec.cpp:4483:229: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0,unsigned long _ExpectedSize,typename __xcodeml_template_type_0_2>using __tuple_like_with_size=__tuple_like_with_size_imp<expression,tuple_size<__xcodeml_template_type_0_2>,expression>;
                                                                                                                                                                                                                                    ^
vec.cpp:4490:8: error: expected member name or ';' after declaration specifiers
static template <>bool __enable_implicit(){return false;
~~~~~~ ^
vec.cpp:4524:31: error: expected unqualified-id
namespace std{namespace __1{::;
                              ^
vec.cpp:4525:3: error: expected unqualified-id
::;
  ^
vec.cpp:4526:3: error: expected unqualified-id
::;
  ^
vec.cpp:4527:3: error: expected unqualified-id
::;
  ^
vec.cpp:4528:3: error: expected unqualified-id
::;
  ^
vec.cpp:4529:3: error: expected unqualified-id
::;
  ^
vec.cpp:4530:3: error: expected unqualified-id
::;
  ^
vec.cpp:4531:3: error: expected unqualified-id
::;
  ^
vec.cpp:4532:3: error: expected unqualified-id
::;
  ^
vec.cpp:4533:3: error: expected unqualified-id
::;
  ^
vec.cpp:4534:3: error: expected unqualified-id
::;
  ^
vec.cpp:4535:3: error: expected unqualified-id
::;
  ^
vec.cpp:4536:3: error: expected unqualified-id
::;
  ^
vec.cpp:4537:3: error: expected unqualified-id
::;
  ^
vec.cpp:4538:3: error: expected unqualified-id
::;
  ^
vec.cpp:4539:3: error: expected unqualified-id
::;
  ^
vec.cpp:4540:3: error: expected unqualified-id
::;
  ^
vec.cpp:4541:3: error: expected unqualified-id
::;
  ^
vec.cpp:4542:3: error: expected unqualified-id
::;
  ^
vec.cpp:4543:3: error: expected unqualified-id
::;
  ^
vec.cpp:4544:3: error: expected unqualified-id
::;
  ^
vec.cpp:4545:3: error: expected unqualified-id
::;
  ^
vec.cpp:4546:3: error: expected unqualified-id
::;
  ^
vec.cpp:4547:3: error: expected unqualified-id
::;
  ^
vec.cpp:4548:3: error: expected unqualified-id
::;
  ^
vec.cpp:4549:3: error: expected unqualified-id
::;
  ^
vec.cpp:4550:3: error: expected unqualified-id
::;
  ^
vec.cpp:4551:3: error: expected unqualified-id
::;
  ^
vec.cpp:4566:84: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0,unsigned long _Np>typename enable_if<expression,void>::type swap(__xcodeml_template_type_0_0&__a,__xcodeml_template_type_0_0&__b){(std::__1::(__a,(__a+_Np),__b));
                                                                                   ^
vec.cpp:4566:102: error: definition or redeclaration of 'type' cannot name the global scope
template<typename __xcodeml_template_type_0_0,unsigned long _Np>typename enable_if<expression,void>::type swap(__xcodeml_template_type_0_0&__a,__xcodeml_template_type_0_0&__b){(std::__1::(__a,(__a+_Np),__b));
                                                                                                   ~~^
vec.cpp:4566:106: error: expected ';' at end of declaration
template<typename __xcodeml_template_type_0_0,unsigned long _Np>typename enable_if<expression,void>::type swap(__xcodeml_template_type_0_0&__a,__xcodeml_template_type_0_0&__b){(std::__1::(__a,(__a+_Np),__b));
                                                                                                         ^
                                                                                                         ;
vec.cpp:4566:112: error: unknown type name '__xcodeml_template_type_0_0'
template<typename __xcodeml_template_type_0_0,unsigned long _Np>typename enable_if<expression,void>::type swap(__xcodeml_template_type_0_0&__a,__xcodeml_template_type_0_0&__b){(std::__1::(__a,(__a+_Np),__b));
                                                                                                               ^
vec.cpp:4566:144: error: unknown type name '__xcodeml_template_type_0_0'
template<typename __xcodeml_template_type_0_0,unsigned long _Np>typename enable_if<expression,void>::type swap(__xcodeml_template_type_0_0&__a,__xcodeml_template_type_0_0&__b){(std::__1::(__a,(__a+_Np),__b));
                                                                                                                                               ^
vec.cpp:4566:107: error: C++ requires a type specifier for all declarations
template<typename __xcodeml_template_type_0_0,unsigned long _Np>typename enable_if<expression,void>::type swap(__xcodeml_template_type_0_0&__a,__xcodeml_template_type_0_0&__b){(std::__1::(__a,(__a+_Np),__b));
                                                                                                          ^
vec.cpp:4566:188: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0,unsigned long _Np>typename enable_if<expression,void>::type swap(__xcodeml_template_type_0_0&__a,__xcodeml_template_type_0_0&__b){(std::__1::(__a,(__a+_Np),__b));
                                                                                                                                                                                           ^
vec.cpp:4566:198: error: use of undeclared identifier '_Np'
template<typename __xcodeml_template_type_0_0,unsigned long _Np>typename enable_if<expression,void>::type swap(__xcodeml_template_type_0_0&__a,__xcodeml_template_type_0_0&__b){(std::__1::(__a,(__a+_Np),__b));
                                                                                                                                                                                                     ^
vec.cpp:4568:68: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>typename conditional<expression,__xcodeml_template_type_0_0 const&,__xcodeml_template_type_0_0(*)>::type move_if_noexcept(__xcodeml_template_type_0_0&__x){return(std::__1::(__x));
                                                                   ^
vec.cpp:4568:147: error: definition or redeclaration of 'type' cannot name the global scope
template<typename __xcodeml_template_type_0_0>typename conditional<expression,__xcodeml_template_type_0_0 const&,__xcodeml_template_type_0_0(*)>::type move_if_noexcept(__xcodeml_template_type_0_0&__x){return(std::__1::(__x));
                                                                                                                                                ~~^
vec.cpp:4568:151: error: expected ';' at end of declaration
template<typename __xcodeml_template_type_0_0>typename conditional<expression,__xcodeml_template_type_0_0 const&,__xcodeml_template_type_0_0(*)>::type move_if_noexcept(__xcodeml_template_type_0_0&__x){return(std::__1::(__x));
                                                                                                                                                      ^
                                                                                                                                                      ;
vec.cpp:4568:169: error: unknown type name '__xcodeml_template_type_0_0'
template<typename __xcodeml_template_type_0_0>typename conditional<expression,__xcodeml_template_type_0_0 const&,__xcodeml_template_type_0_0(*)>::type move_if_noexcept(__xcodeml_template_type_0_0&__x){return(std::__1::(__x));
                                                                                                                                                                        ^
vec.cpp:4568:152: error: C++ requires a type specifier for all declarations
template<typename __xcodeml_template_type_0_0>typename conditional<expression,__xcodeml_template_type_0_0 const&,__xcodeml_template_type_0_0(*)>::type move_if_noexcept(__xcodeml_template_type_0_0&__x){return(std::__1::(__x));
                                                                                                                                                       ^
vec.cpp:4568:219: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0>typename conditional<expression,__xcodeml_template_type_0_0 const&,__xcodeml_template_type_0_0(*)>::type move_if_noexcept(__xcodeml_template_type_0_0&__x){return(std::__1::(__x));
                                                                                                                                                                                                                          ^
vec.cpp:4587:61: error: use of undeclared identifier 'expression'
public:template<bool _Val>using _EnableB=typename enable_if<expression,bool>::type;
                                                            ^
vec.cpp:4587:79: error: expected ';' after alias declaration
public:template<bool _Val>using _EnableB=typename enable_if<expression,bool>::type;
                                                                              ^
                                                                              ;
vec.cpp:4596:76: error: use of undeclared identifier 'expression'
public:template<bool _MaybeEnable>using _CheckArgsDep=typename conditional<expression,class::std::__1::pair::_CheckArgs,class::std::__1::__check_tuple_constructor_fail>::type;
                                                                           ^
vec.cpp:4596:171: error: expected ';' after alias declaration
public:template<bool _MaybeEnable>using _CheckArgsDep=typename conditional<expression,class::std::__1::pair::_CheckArgs,class::std::__1::__check_tuple_constructor_fail>::type;
                                                                                                                                                                          ^
                                                                                                                                                                          ;
vec.cpp:4605:91: error: use of undeclared identifier 'expression'
public:template<typename __xcodeml_template_type_1_0>using _CheckTLC=typename conditional<expression,class::std::__1::pair::_CheckTupleLikeConstructor,class::std::__1::__check_tuple_constructor_fail>::type;
                                                                                          ^
vec.cpp:4605:202: error: expected ';' after alias declaration
public:template<typename __xcodeml_template_type_1_0>using _CheckTLC=typename conditional<expression,class::std::__1::pair::_CheckTupleLikeConstructor,class::std::__1::__check_tuple_constructor_fail>::type;
                                                                                                                                                                                                         ^
                                                                                                                                                                                                         ;
vec.cpp:4606:53: error: use of undeclared identifier 'expression'
public:template<bool _Dummy=true,typename enable_if<expression,bool>::type=false>pair():first(),second(){}
                                                    ^
vec.cpp:4606:71: error: parameter declarator cannot be qualified
public:template<bool _Dummy=true,typename enable_if<expression,bool>::type=false>pair():first(),second(){}
                                                                    ~~^
vec.cpp:4607:53: error: use of undeclared identifier 'expression'
public:template<bool _Dummy=true,typename enable_if<expression,bool>::type=false>pair(__xcodeml_template_type_0_0 const&__t1,__xcodeml_template_type_0_1 const&__t2):first(__t1),second(__t2){}
                                                    ^
vec.cpp:4607:71: error: parameter declarator cannot be qualified
public:template<bool _Dummy=true,typename enable_if<expression,bool>::type=false>pair(__xcodeml_template_type_0_0 const&__t1,__xcodeml_template_type_0_1 const&__t2):first(__t1),second(__t2){}
                                                                    ~~^
vec.cpp:4608:53: error: use of undeclared identifier 'expression'
public:template<bool _Dummy=true,typename enable_if<expression,bool>::type=false>pair(__xcodeml_template_type_0_0 const&__t1,__xcodeml_template_type_0_1 const&__t2):first(__t1),second(__t2){}
                                                    ^
vec.cpp:4608:71: error: parameter declarator cannot be qualified
public:template<bool _Dummy=true,typename enable_if<expression,bool>::type=false>pair(__xcodeml_template_type_0_0 const&__t1,__xcodeml_template_type_0_1 const&__t2):first(__t1),second(__t2){}
                                                                    ~~^
vec.cpp:4608:82: error: constructor cannot be redeclared
public:template<bool _Dummy=true,typename enable_if<expression,bool>::type=false>pair(__xcodeml_template_type_0_0 const&__t1,__xcodeml_template_type_0_1 const&__t2):first(__t1),second(__t2){}
                                                                                 ^
vec.cpp:4607:82: note: previous definition is here
public:template<bool _Dummy=true,typename enable_if<expression,bool>::type=false>pair(__xcodeml_template_type_0_0 const&__t1,__xcodeml_template_type_0_1 const&__t2):first(__t1),second(__t2){}
                                                                                 ^
vec.cpp:4609:110: error: use of undeclared identifier 'expression'
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1,typename enable_if<expression,bool>::type=false>pair(__xcodeml_template_type_1_0(*__u1),__xcodeml_template_type_1_1(*__u2)):first((std::__1::__xcodeml_template_type_1_0(__u1))),second((std::__1::__xcodeml_template_type_1_1(__u2))){}
                                                                                                             ^
vec.cpp:4609:128: error: parameter declarator cannot be qualified
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1,typename enable_if<expression,bool>::type=false>pair(__xcodeml_template_type_1_0(*__u1),__xcodeml_template_type_1_1(*__u2)):first((std::__1::__xcodeml_template_type_1_0(__u1))),second((std::__1::__xcodeml_template_type_1_1(__u2))){}
                                                                                                                             ~~^
vec.cpp:4610:110: error: use of undeclared identifier 'expression'
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1,typename enable_if<expression,bool>::type=false>pair(__xcodeml_template_type_1_0(*__u1),__xcodeml_template_type_1_1(*__u2)):first((std::__1::__xcodeml_template_type_1_0(__u1))),second((std::__1::__xcodeml_template_type_1_1(__u2))){}
                                                                                                             ^
vec.cpp:4610:128: error: parameter declarator cannot be qualified
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1,typename enable_if<expression,bool>::type=false>pair(__xcodeml_template_type_1_0(*__u1),__xcodeml_template_type_1_1(*__u2)):first((std::__1::__xcodeml_template_type_1_0(__u1))),second((std::__1::__xcodeml_template_type_1_1(__u2))){}
                                                                                                                             ~~^
vec.cpp:4610:139: error: constructor cannot be redeclared
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1,typename enable_if<expression,bool>::type=false>pair(__xcodeml_template_type_1_0(*__u1),__xcodeml_template_type_1_1(*__u2)):first((std::__1::__xcodeml_template_type_1_0(__u1))),second((std::__1::__xcodeml_template_type_1_1(__u2))){}
                                                                                                                                          ^
vec.cpp:4609:139: note: previous definition is here
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1,typename enable_if<expression,bool>::type=false>pair(__xcodeml_template_type_1_0(*__u1),__xcodeml_template_type_1_1(*__u2)):first((std::__1::__xcodeml_template_type_1_0(__u1))),second((std::__1::__xcodeml_template_type_1_1(__u2))){}
                                                                                                                                          ^
vec.cpp:4611:110: error: use of undeclared identifier 'expression'
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1,typename enable_if<expression,bool>::type=false>pair(pair<__xcodeml_template_type_1_0,__xcodeml_template_type_1_1>):first(__p.first),second(__p.second){}
                                                                                                             ^
vec.cpp:4611:128: error: parameter declarator cannot be qualified
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1,typename enable_if<expression,bool>::type=false>pair(pair<__xcodeml_template_type_1_0,__xcodeml_template_type_1_1>):first(__p.first),second(__p.second){}
                                                                                                                             ~~^
vec.cpp:4612:110: error: use of undeclared identifier 'expression'
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1,typename enable_if<expression,bool>::type=false>pair(pair<__xcodeml_template_type_1_0,__xcodeml_template_type_1_1>):first(__p.first),second(__p.second){}
                                                                                                             ^
vec.cpp:4612:128: error: parameter declarator cannot be qualified
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1,typename enable_if<expression,bool>::type=false>pair(pair<__xcodeml_template_type_1_0,__xcodeml_template_type_1_1>):first(__p.first),second(__p.second){}
                                                                                                                             ~~^
vec.cpp:4612:139: error: constructor cannot be redeclared
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1,typename enable_if<expression,bool>::type=false>pair(pair<__xcodeml_template_type_1_0,__xcodeml_template_type_1_1>):first(__p.first),second(__p.second){}
                                                                                                                                          ^
vec.cpp:4611:139: note: previous definition is here
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1,typename enable_if<expression,bool>::type=false>pair(pair<__xcodeml_template_type_1_0,__xcodeml_template_type_1_1>):first(__p.first),second(__p.second){}
                                                                                                                                          ^
vec.cpp:4613:110: error: use of undeclared identifier 'expression'
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1,typename enable_if<expression,bool>::type=false>pair(pair<__xcodeml_template_type_1_0,__xcodeml_template_type_1_1>):first((std::__1::__xcodeml_template_type_1_0(__p.first))),second((std::__1::__xcodeml_template_type_1_1(__p.second))){}
                                                                                                             ^
vec.cpp:4613:128: error: parameter declarator cannot be qualified
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1,typename enable_if<expression,bool>::type=false>pair(pair<__xcodeml_template_type_1_0,__xcodeml_template_type_1_1>):first((std::__1::__xcodeml_template_type_1_0(__p.first))),second((std::__1::__xcodeml_template_type_1_1(__p.second))){}
                                                                                                                             ~~^
vec.cpp:4613:139: error: constructor cannot be redeclared
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1,typename enable_if<expression,bool>::type=false>pair(pair<__xcodeml_template_type_1_0,__xcodeml_template_type_1_1>):first((std::__1::__xcodeml_template_type_1_0(__p.first))),second((std::__1::__xcodeml_template_type_1_1(__p.second))){}
                                                                                                                                          ^
vec.cpp:4611:139: note: previous definition is here
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1,typename enable_if<expression,bool>::type=false>pair(pair<__xcodeml_template_type_1_0,__xcodeml_template_type_1_1>):first(__p.first),second(__p.second){}
                                                                                                                                          ^
vec.cpp:4614:110: error: use of undeclared identifier 'expression'
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1,typename enable_if<expression,bool>::type=false>pair(pair<__xcodeml_template_type_1_0,__xcodeml_template_type_1_1>):first((std::__1::__xcodeml_template_type_1_0(__p.first))),second((std::__1::__xcodeml_template_type_1_1(__p.second))){}
                                                                                                             ^
vec.cpp:4614:128: error: parameter declarator cannot be qualified
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1,typename enable_if<expression,bool>::type=false>pair(pair<__xcodeml_template_type_1_0,__xcodeml_template_type_1_1>):first((std::__1::__xcodeml_template_type_1_0(__p.first))),second((std::__1::__xcodeml_template_type_1_1(__p.second))){}
                                                                                                                             ~~^
vec.cpp:4614:139: error: constructor cannot be redeclared
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1,typename enable_if<expression,bool>::type=false>pair(pair<__xcodeml_template_type_1_0,__xcodeml_template_type_1_1>):first((std::__1::__xcodeml_template_type_1_0(__p.first))),second((std::__1::__xcodeml_template_type_1_1(__p.second))){}
                                                                                                                                          ^
vec.cpp:4611:139: note: previous definition is here
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1,typename enable_if<expression,bool>::type=false>pair(pair<__xcodeml_template_type_1_0,__xcodeml_template_type_1_1>):first(__p.first),second(__p.second){}
                                                                                                                                          ^
vec.cpp:4615:73: error: use of undeclared identifier 'expression'
public:template<typename __xcodeml_template_type_1_0,typename enable_if<expression,bool>::type=false>pair(__xcodeml_template_type_1_0(*__p)):first((std::__1::0((std::__1::__xcodeml_template_type_1_0(__p))))),second((std::__1::1((std::__1::__xcodeml_template_type_1_0(__p))))){}
                                                                        ^
vec.cpp:4615:91: error: parameter declarator cannot be qualified
public:template<typename __xcodeml_template_type_1_0,typename enable_if<expression,bool>::type=false>pair(__xcodeml_template_type_1_0(*__p)):first((std::__1::0((std::__1::__xcodeml_template_type_1_0(__p))))),second((std::__1::1((std::__1::__xcodeml_template_type_1_0(__p))))){}
                                                                                        ~~^
vec.cpp:4616:73: error: use of undeclared identifier 'expression'
public:template<typename __xcodeml_template_type_1_0,typename enable_if<expression,bool>::type=false>pair(__xcodeml_template_type_1_0(*__p)):first((std::__1::0((std::__1::__xcodeml_template_type_1_0(__p))))),second((std::__1::1((std::__1::__xcodeml_template_type_1_0(__p))))){}
                                                                        ^
vec.cpp:4616:91: error: parameter declarator cannot be qualified
public:template<typename __xcodeml_template_type_1_0,typename enable_if<expression,bool>::type=false>pair(__xcodeml_template_type_1_0(*__p)):first((std::__1::0((std::__1::__xcodeml_template_type_1_0(__p))))),second((std::__1::1((std::__1::__xcodeml_template_type_1_0(__p))))){}
                                                                                        ~~^
vec.cpp:4616:102: error: constructor cannot be redeclared
public:template<typename __xcodeml_template_type_1_0,typename enable_if<expression,bool>::type=false>pair(__xcodeml_template_type_1_0(*__p)):first((std::__1::0((std::__1::__xcodeml_template_type_1_0(__p))))),second((std::__1::1((std::__1::__xcodeml_template_type_1_0(__p))))){}
                                                                                                     ^
vec.cpp:4615:102: note: previous definition is here
public:template<typename __xcodeml_template_type_1_0,typename enable_if<expression,bool>::type=false>pair(__xcodeml_template_type_1_0(*__p)):first((std::__1::0((std::__1::__xcodeml_template_type_1_0(__p))))),second((std::__1::1((std::__1::__xcodeml_template_type_1_0(__p))))){}
                                                                                                     ^
vec.cpp:4617:146: error: expected expression
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1>pair(class::std::__1::piecewise_construct_t __pc,tuple<...>,tuple<...>):pair(__pc __first_args __second_args __xcodeml_identity<typename __make_tuple_indices<expression,0>::type>::t()__xcodeml_identity<typename __make_tuple_indices<expression,0>::type>::t()){}
                                                                                                                                                 ^
vec.cpp:4617:157: error: expected expression
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1>pair(class::std::__1::piecewise_construct_t __pc,tuple<...>,tuple<...>):pair(__pc __first_args __second_args __xcodeml_identity<typename __make_tuple_indices<expression,0>::type>::t()__xcodeml_identity<typename __make_tuple_indices<expression,0>::type>::t()){}
                                                                                                                                                            ^
vec.cpp:4618:50: error: use of undeclared identifier 'expression'
public:class pair&operator=(typename conditional<expression,class pair,class::std::__1::__nat>::type const&__p){(this->first=__p.first);
                                                 ^
vec.cpp:4618:97: error: parameter declarator cannot be qualified
public:class pair&operator=(typename conditional<expression,class pair,class::std::__1::__nat>::type const&__p){(this->first=__p.first);
                                                                                              ~~^
vec.cpp:4618:102: error: expected ')'
public:class pair&operator=(typename conditional<expression,class pair,class::std::__1::__nat>::type const&__p){(this->first=__p.first);
                                                                                                     ^
vec.cpp:4618:28: note: to match this '('
public:class pair&operator=(typename conditional<expression,class pair,class::std::__1::__nat>::type const&__p){(this->first=__p.first);
                           ^
vec.cpp:4622:50: error: use of undeclared identifier 'expression'
public:class pair&operator=(typename conditional<expression,class pair,class::std::__1::__nat>::type(*__p)){(this->first=(std::__1::__xcodeml_template_type_0_0(__p.first)));
                                                 ^
vec.cpp:4622:103: error: C++ requires a type specifier for all declarations
public:class pair&operator=(typename conditional<expression,class pair,class::std::__1::__nat>::type(*__p)){(this->first=(std::__1::__xcodeml_template_type_0_0(__p.first)));
                                                                                                      ^
vec.cpp:4622:97: error: parameter declarator cannot be qualified
public:class pair&operator=(typename conditional<expression,class pair,class::std::__1::__nat>::type(*__p)){(this->first=(std::__1::__xcodeml_template_type_0_0(__p.first)));
                                                                                              ~~^
vec.cpp:4626:73: error: use of undeclared identifier 'expression'
public:template<typename __xcodeml_template_type_1_0,typename enable_if<expression,bool>::type=false>class pair&operator=(__xcodeml_template_type_1_0(*__p)){(this->first=(std::__1::0((std::__1::__xcodeml_template_type_1_0(__p)))));
                                                                        ^
vec.cpp:4626:91: error: parameter declarator cannot be qualified
public:template<typename __xcodeml_template_type_1_0,typename enable_if<expression,bool>::type=false>class pair&operator=(__xcodeml_template_type_1_0(*__p)){(this->first=(std::__1::0((std::__1::__xcodeml_template_type_1_0(__p)))));
                                                                                        ~~^
vec.cpp:4635:178: error: expected expression
private:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1,unsigned long _I1,unsigned long _I2>pair(class::std::__1::piecewise_construct_t,tuple<...>,tuple<...>,__tuple_indices<...>,__tuple_indices<...>)
                                                                                                                                                                                 ^
vec.cpp:4635:189: error: expected expression
private:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1,unsigned long _I1,unsigned long _I2>pair(class::std::__1::piecewise_construct_t,tuple<...>,tuple<...>,__tuple_indices<...>,__tuple_indices<...>)
                                                                                                                                                                                            ^
vec.cpp:4635:210: error: expected expression
private:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1,unsigned long _I1,unsigned long _I2>pair(class::std::__1::piecewise_construct_t,tuple<...>,tuple<...>,__tuple_indices<...>,__tuple_indices<...>)
                                                                                                                                                                                                                 ^
vec.cpp:4635:231: error: expected expression
private:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1,unsigned long _I1,unsigned long _I2>pair(class::std::__1::piecewise_construct_t,tuple<...>,tuple<...>,__tuple_indices<...>,__tuple_indices<...>)
                                                                                                                                                                                                                                      ^
vec.cpp:4635:236: error: expected ';' at end of declaration list
private:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1,unsigned long _I1,unsigned long _I2>pair(class::std::__1::piecewise_construct_t,tuple<...>,tuple<...>,__tuple_indices<...>,__tuple_indices<...>)
                                                                                                                                                                                                                                           ^
                                                                                                                                                                                                                                           ;
vec.cpp:4590:176: error: expected expression
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1>static bool __enable_explicit(){return((is_constructible<__xcodeml_template_type_0_0,...>::value&&is_constructible<__xcodeml_template_type_0_1,...>::value)&&((!is_convertible<__xcodeml_template_type_1_0,__xcodeml_template_type_0_0>::value)||(!is_convertible<__xcodeml_template_type_1_1,__xcodeml_template_type_0_1>::value)));
                                                                                                                                                                               ^
vec.cpp:4590:182: error: no type named 'value' in the global namespace
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1>static bool __enable_explicit(){return((is_constructible<__xcodeml_template_type_0_0,...>::value&&is_constructible<__xcodeml_template_type_0_1,...>::value)&&((!is_convertible<__xcodeml_template_type_1_0,__xcodeml_template_type_0_0>::value)||(!is_convertible<__xcodeml_template_type_1_1,__xcodeml_template_type_0_1>::value)));
                                                                                                                                                                                   ~~^
vec.cpp:4590:234: error: expected expression
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1>static bool __enable_explicit(){return((is_constructible<__xcodeml_template_type_0_0,...>::value&&is_constructible<__xcodeml_template_type_0_1,...>::value)&&((!is_convertible<__xcodeml_template_type_1_0,__xcodeml_template_type_0_0>::value)||(!is_convertible<__xcodeml_template_type_1_1,__xcodeml_template_type_0_1>::value)));
                                                                                                                                                                                                                                         ^
vec.cpp:4590:238: error: expected ')'
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1>static bool __enable_explicit(){return((is_constructible<__xcodeml_template_type_0_0,...>::value&&is_constructible<__xcodeml_template_type_0_1,...>::value)&&((!is_convertible<__xcodeml_template_type_1_0,__xcodeml_template_type_0_0>::value)||(!is_convertible<__xcodeml_template_type_1_1,__xcodeml_template_type_0_1>::value)));
                                                                                                                                                                                                                                             ^
vec.cpp:4590:130: note: to match this '('
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1>static bool __enable_explicit(){return((is_constructible<__xcodeml_template_type_0_0,...>::value&&is_constructible<__xcodeml_template_type_0_1,...>::value)&&((!is_convertible<__xcodeml_template_type_1_0,__xcodeml_template_type_0_0>::value)||(!is_convertible<__xcodeml_template_type_1_1,__xcodeml_template_type_0_1>::value)));
                                                                                                                                 ^
vec.cpp:4592:177: error: expected expression
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1>static bool __enable_implicit(){return(((is_constructible<__xcodeml_template_type_0_0,...>::value&&is_constructible<__xcodeml_template_type_0_1,...>::value)&&is_convertible<__xcodeml_template_type_1_0,__xcodeml_template_type_0_0>::value)&&is_convertible<__xcodeml_template_type_1_1,__xcodeml_template_type_0_1>::value);
                                                                                                                                                                                ^
vec.cpp:4592:183: error: no type named 'value' in the global namespace
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1>static bool __enable_implicit(){return(((is_constructible<__xcodeml_template_type_0_0,...>::value&&is_constructible<__xcodeml_template_type_0_1,...>::value)&&is_convertible<__xcodeml_template_type_1_0,__xcodeml_template_type_0_0>::value)&&is_convertible<__xcodeml_template_type_1_1,__xcodeml_template_type_0_1>::value);
                                                                                                                                                                                    ~~^
vec.cpp:4592:235: error: expected expression
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1>static bool __enable_implicit(){return(((is_constructible<__xcodeml_template_type_0_0,...>::value&&is_constructible<__xcodeml_template_type_0_1,...>::value)&&is_convertible<__xcodeml_template_type_1_0,__xcodeml_template_type_0_0>::value)&&is_convertible<__xcodeml_template_type_1_1,__xcodeml_template_type_0_1>::value);
                                                                                                                                                                                                                                          ^
vec.cpp:4592:239: error: expected ')'
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1>static bool __enable_implicit(){return(((is_constructible<__xcodeml_template_type_0_0,...>::value&&is_constructible<__xcodeml_template_type_0_1,...>::value)&&is_convertible<__xcodeml_template_type_1_0,__xcodeml_template_type_0_0>::value)&&is_convertible<__xcodeml_template_type_1_1,__xcodeml_template_type_0_1>::value);
                                                                                                                                                                                                                                              ^
vec.cpp:4592:131: note: to match this '('
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1>static bool __enable_implicit(){return(((is_constructible<__xcodeml_template_type_0_0,...>::value&&is_constructible<__xcodeml_template_type_0_1,...>::value)&&is_convertible<__xcodeml_template_type_1_0,__xcodeml_template_type_0_0>::value)&&is_convertible<__xcodeml_template_type_1_1,__xcodeml_template_type_0_1>::value);
                                                                                                                                  ^
vec.cpp:4597:192: error: use of undeclared identifier 'expression'
public:class _CheckTupleLikeConstructor{public:template<typename __xcodeml_template_type_1_0>static bool __enable_implicit(){return __tuple_convertible<__xcodeml_template_type_1_0,class pair,expression,expression>::value;
                                                                                                                                                                                               ^
vec.cpp:4599:154: error: use of undeclared identifier 'expression'
public:template<typename __xcodeml_template_type_1_0>static bool __enable_explicit(){return(__tuple_constructible<__xcodeml_template_type_1_0,class pair,expression,expression>::value&&(!__tuple_convertible<__xcodeml_template_type_1_0,class pair,expression,expression>::value));
                                                                                                                                                         ^
vec.cpp:4599:178: error: no type named 'value' in the global namespace
public:template<typename __xcodeml_template_type_1_0>static bool __enable_explicit(){return(__tuple_constructible<__xcodeml_template_type_1_0,class pair,expression,expression>::value&&(!__tuple_convertible<__xcodeml_template_type_1_0,class pair,expression,expression>::value));
                                                                                                                                                                               ~~^
vec.cpp:4599:186: error: expected ')'
public:template<typename __xcodeml_template_type_1_0>static bool __enable_explicit(){return(__tuple_constructible<__xcodeml_template_type_1_0,class pair,expression,expression>::value&&(!__tuple_convertible<__xcodeml_template_type_1_0,class pair,expression,expression>::value));
                                                                                                                                                                                         ^
vec.cpp:4599:185: note: to match this '('
public:template<typename __xcodeml_template_type_1_0>static bool __enable_explicit(){return(__tuple_constructible<__xcodeml_template_type_1_0,class pair,expression,expression>::value&&(!__tuple_convertible<__xcodeml_template_type_1_0,class pair,expression,expression>::value));
                                                                                                                                                                                        ^
vec.cpp:4601:149: error: use of undeclared identifier 'expression'
public:template<typename __xcodeml_template_type_1_0>static bool __enable_assign(){return __tuple_assignable<__xcodeml_template_type_1_0,class pair,expression,expression>::value;
                                                                                                                                                    ^
vec.cpp:4609:232: error: no member named '__xcodeml_template_type_1_0' in namespace 'std::__1'
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1,typename enable_if<expression,bool>::type=false>pair(__xcodeml_template_type_1_0(*__u1),__xcodeml_template_type_1_1(*__u2)):first((std::__1::__xcodeml_template_type_1_0(__u1))),second((std::__1::__xcodeml_template_type_1_1(__u2))){}
                                                                                                                                                                                                                             ~~~~~~~~~~^
vec.cpp:4609:286: error: no member named '__xcodeml_template_type_1_1' in namespace 'std::__1'
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1,typename enable_if<expression,bool>::type=false>pair(__xcodeml_template_type_1_0(*__u1),__xcodeml_template_type_1_1(*__u2)):first((std::__1::__xcodeml_template_type_1_0(__u1))),second((std::__1::__xcodeml_template_type_1_1(__u2))){}
                                                                                                                                                                                                                                                                                   ~~~~~~~~~~^
vec.cpp:4610:232: error: no member named '__xcodeml_template_type_1_0' in namespace 'std::__1'
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1,typename enable_if<expression,bool>::type=false>pair(__xcodeml_template_type_1_0(*__u1),__xcodeml_template_type_1_1(*__u2)):first((std::__1::__xcodeml_template_type_1_0(__u1))),second((std::__1::__xcodeml_template_type_1_1(__u2))){}
                                                                                                                                                                                                                             ~~~~~~~~~~^
vec.cpp:4610:286: error: no member named '__xcodeml_template_type_1_1' in namespace 'std::__1'
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1,typename enable_if<expression,bool>::type=false>pair(__xcodeml_template_type_1_0(*__u1),__xcodeml_template_type_1_1(*__u2)):first((std::__1::__xcodeml_template_type_1_0(__u1))),second((std::__1::__xcodeml_template_type_1_1(__u2))){}
                                                                                                                                                                                                                                                                                   ~~~~~~~~~~^
vec.cpp:4611:213: error: use of undeclared identifier '__p'
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1,typename enable_if<expression,bool>::type=false>pair(pair<__xcodeml_template_type_1_0,__xcodeml_template_type_1_1>):first(__p.first),second(__p.second){}
                                                                                                                                                                                                                    ^
vec.cpp:4611:231: error: use of undeclared identifier '__p'
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1,typename enable_if<expression,bool>::type=false>pair(pair<__xcodeml_template_type_1_0,__xcodeml_template_type_1_1>):first(__p.first),second(__p.second){}
                                                                                                                                                                                                                                      ^
vec.cpp:4612:213: error: use of undeclared identifier '__p'
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1,typename enable_if<expression,bool>::type=false>pair(pair<__xcodeml_template_type_1_0,__xcodeml_template_type_1_1>):first(__p.first),second(__p.second){}
                                                                                                                                                                                                                    ^
vec.cpp:4612:231: error: use of undeclared identifier '__p'
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1,typename enable_if<expression,bool>::type=false>pair(pair<__xcodeml_template_type_1_0,__xcodeml_template_type_1_1>):first(__p.first),second(__p.second){}
                                                                                                                                                                                                                                      ^
vec.cpp:4613:224: error: no member named '__xcodeml_template_type_1_0' in namespace 'std::__1'
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1,typename enable_if<expression,bool>::type=false>pair(pair<__xcodeml_template_type_1_0,__xcodeml_template_type_1_1>):first((std::__1::__xcodeml_template_type_1_0(__p.first))),second((std::__1::__xcodeml_template_type_1_1(__p.second))){}
                                                                                                                                                                                                                     ~~~~~~~~~~^
vec.cpp:4613:252: error: use of undeclared identifier '__p'
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1,typename enable_if<expression,bool>::type=false>pair(pair<__xcodeml_template_type_1_0,__xcodeml_template_type_1_1>):first((std::__1::__xcodeml_template_type_1_0(__p.first))),second((std::__1::__xcodeml_template_type_1_1(__p.second))){}
                                                                                                                                                                                                                                                           ^
vec.cpp:4613:283: error: no member named '__xcodeml_template_type_1_1' in namespace 'std::__1'
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1,typename enable_if<expression,bool>::type=false>pair(pair<__xcodeml_template_type_1_0,__xcodeml_template_type_1_1>):first((std::__1::__xcodeml_template_type_1_0(__p.first))),second((std::__1::__xcodeml_template_type_1_1(__p.second))){}
                                                                                                                                                                                                                                                                                ~~~~~~~~~~^
vec.cpp:4613:311: error: use of undeclared identifier '__p'
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1,typename enable_if<expression,bool>::type=false>pair(pair<__xcodeml_template_type_1_0,__xcodeml_template_type_1_1>):first((std::__1::__xcodeml_template_type_1_0(__p.first))),second((std::__1::__xcodeml_template_type_1_1(__p.second))){}
                                                                                                                                                                                                                                                                                                                      ^
vec.cpp:4614:224: error: no member named '__xcodeml_template_type_1_0' in namespace 'std::__1'
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1,typename enable_if<expression,bool>::type=false>pair(pair<__xcodeml_template_type_1_0,__xcodeml_template_type_1_1>):first((std::__1::__xcodeml_template_type_1_0(__p.first))),second((std::__1::__xcodeml_template_type_1_1(__p.second))){}
                                                                                                                                                                                                                     ~~~~~~~~~~^
vec.cpp:4614:252: error: use of undeclared identifier '__p'
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1,typename enable_if<expression,bool>::type=false>pair(pair<__xcodeml_template_type_1_0,__xcodeml_template_type_1_1>):first((std::__1::__xcodeml_template_type_1_0(__p.first))),second((std::__1::__xcodeml_template_type_1_1(__p.second))){}
                                                                                                                                                                                                                                                           ^
vec.cpp:4614:283: error: no member named '__xcodeml_template_type_1_1' in namespace 'std::__1'
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1,typename enable_if<expression,bool>::type=false>pair(pair<__xcodeml_template_type_1_0,__xcodeml_template_type_1_1>):first((std::__1::__xcodeml_template_type_1_0(__p.first))),second((std::__1::__xcodeml_template_type_1_1(__p.second))){}
                                                                                                                                                                                                                                                                                ~~~~~~~~~~^
vec.cpp:4614:311: error: use of undeclared identifier '__p'
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1,typename enable_if<expression,bool>::type=false>pair(pair<__xcodeml_template_type_1_0,__xcodeml_template_type_1_1>):first((std::__1::__xcodeml_template_type_1_0(__p.first))),second((std::__1::__xcodeml_template_type_1_1(__p.second))){}
                                                                                                                                                                                                                                                                                                                      ^
vec.cpp:4615:159: error: expected unqualified-id
public:template<typename __xcodeml_template_type_1_0,typename enable_if<expression,bool>::type=false>pair(__xcodeml_template_type_1_0(*__p)):first((std::__1::0((std::__1::__xcodeml_template_type_1_0(__p))))),second((std::__1::1((std::__1::__xcodeml_template_type_1_0(__p))))){}
                                                                                                                                                              ^
vec.cpp:4615:227: error: expected unqualified-id
public:template<typename __xcodeml_template_type_1_0,typename enable_if<expression,bool>::type=false>pair(__xcodeml_template_type_1_0(*__p)):first((std::__1::0((std::__1::__xcodeml_template_type_1_0(__p))))),second((std::__1::1((std::__1::__xcodeml_template_type_1_0(__p))))){}
                                                                                                                                                                                                                                  ^
vec.cpp:4616:159: error: expected unqualified-id
public:template<typename __xcodeml_template_type_1_0,typename enable_if<expression,bool>::type=false>pair(__xcodeml_template_type_1_0(*__p)):first((std::__1::0((std::__1::__xcodeml_template_type_1_0(__p))))),second((std::__1::1((std::__1::__xcodeml_template_type_1_0(__p))))){}
                                                                                                                                                              ^
vec.cpp:4616:227: error: expected unqualified-id
public:template<typename __xcodeml_template_type_1_0,typename enable_if<expression,bool>::type=false>pair(__xcodeml_template_type_1_0(*__p)):first((std::__1::0((std::__1::__xcodeml_template_type_1_0(__p))))),second((std::__1::1((std::__1::__xcodeml_template_type_1_0(__p))))){}
                                                                                                                                                                                                                                  ^
vec.cpp:4617:173: error: expected ')'
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1>pair(class::std::__1::piecewise_construct_t __pc,tuple<...>,tuple<...>):pair(__pc __first_args __second_args __xcodeml_identity<typename __make_tuple_indices<expression,0>::type>::t()__xcodeml_identity<typename __make_tuple_indices<expression,0>::type>::t()){}
                                                                                                                                                                            ^
vec.cpp:4617:167: note: to match this '('
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1>pair(class::std::__1::piecewise_construct_t __pc,tuple<...>,tuple<...>):pair(__pc __first_args __second_args __xcodeml_identity<typename __make_tuple_indices<expression,0>::type>::t()__xcodeml_identity<typename __make_tuple_indices<expression,0>::type>::t()){}
                                                                                                                                                                      ^
vec.cpp:4618:126: error: use of undeclared identifier '__p'
public:class pair&operator=(typename conditional<expression,class pair,class::std::__1::__nat>::type const&__p){(this->first=__p.first);
                                                                                                                             ^
vec.cpp:4619:15: error: use of undeclared identifier '__p'
(this->second=__p.second);
              ^
vec.cpp:4622:133: error: no member named '__xcodeml_template_type_0_0' in namespace 'std::__1'
public:class pair&operator=(typename conditional<expression,class pair,class::std::__1::__nat>::type(*__p)){(this->first=(std::__1::__xcodeml_template_type_0_0(__p.first)));
                                                                                                                          ~~~~~~~~~~^
vec.cpp:4622:161: error: use of undeclared identifier '__p'
public:class pair&operator=(typename conditional<expression,class pair,class::std::__1::__nat>::type(*__p)){(this->first=(std::__1::__xcodeml_template_type_0_0(__p.first)));
                                                                                                                                                                ^
vec.cpp:4623:26: error: no member named '__xcodeml_template_type_0_1' in namespace 'std::__1'
(this->second=(std::__1::__xcodeml_template_type_0_1(__p.second)));
               ~~~~~~~~~~^
vec.cpp:4623:54: error: use of undeclared identifier '__p'
(this->second=(std::__1::__xcodeml_template_type_0_1(__p.second)));
                                                     ^
vec.cpp:4626:182: error: expected unqualified-id
public:template<typename __xcodeml_template_type_1_0,typename enable_if<expression,bool>::type=false>class pair&operator=(__xcodeml_template_type_1_0(*__p)){(this->first=(std::__1::0((std::__1::__xcodeml_template_type_1_0(__p)))));
                                                                                                                                                                                     ^
vec.cpp:4627:26: error: expected unqualified-id
(this->second=(std::__1::1((std::__1::__xcodeml_template_type_1_0(__p)))));
                         ^
vec.cpp:4630:44: error: expected unqualified-id
public:void swap(class pair&__p){std::__1::;
                                           ^
vec.cpp:4639:233: error: use of undeclared identifier '__x'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator==(pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>,pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>){return((__x.first,__y.first)&&(__x.second,__y.second));
                                                                                                                                                                                                                                        ^
vec.cpp:4639:243: error: use of undeclared identifier '__y'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator==(pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>,pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>){return((__x.first,__y.first)&&(__x.second,__y.second));
                                                                                                                                                                                                                                                  ^
vec.cpp:4639:256: error: use of undeclared identifier '__x'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator==(pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>,pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>){return((__x.first,__y.first)&&(__x.second,__y.second));
                                                                                                                                                                                                                                                               ^
vec.cpp:4639:267: error: use of undeclared identifier '__y'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator==(pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>,pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>){return((__x.first,__y.first)&&(__x.second,__y.second));
                                                                                                                                                                                                                                                                          ^
vec.cpp:4641:234: error: use of undeclared identifier '__x'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator!=(pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>,pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>){return(!(__x,__y));
                                                                                                                                                                                                                                         ^
vec.cpp:4641:238: error: use of undeclared identifier '__y'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator!=(pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>,pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>){return(!(__x,__y));
                                                                                                                                                                                                                                             ^
vec.cpp:4643:232: error: use of undeclared identifier '__x'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator<(pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>,pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>){return((__x.first,__y.first)||((!(__y.first,__x.first))&&(__x.second,__y.second)));
                                                                                                                                                                                                                                       ^
vec.cpp:4643:242: error: use of undeclared identifier '__y'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator<(pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>,pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>){return((__x.first,__y.first)||((!(__y.first,__x.first))&&(__x.second,__y.second)));
                                                                                                                                                                                                                                                 ^
vec.cpp:4643:258: error: use of undeclared identifier '__y'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator<(pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>,pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>){return((__x.first,__y.first)||((!(__y.first,__x.first))&&(__x.second,__y.second)));
                                                                                                                                                                                                                                                                 ^
vec.cpp:4643:268: error: use of undeclared identifier '__x'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator<(pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>,pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>){return((__x.first,__y.first)||((!(__y.first,__x.first))&&(__x.second,__y.second)));
                                                                                                                                                                                                                                                                           ^
vec.cpp:4643:282: error: use of undeclared identifier '__x'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator<(pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>,pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>){return((__x.first,__y.first)||((!(__y.first,__x.first))&&(__x.second,__y.second)));
                                                                                                                                                                                                                                                                                         ^
vec.cpp:4643:293: error: use of undeclared identifier '__y'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator<(pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>,pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>){return((__x.first,__y.first)||((!(__y.first,__x.first))&&(__x.second,__y.second)));
                                                                                                                                                                                                                                                                                                    ^
vec.cpp:4645:231: error: use of undeclared identifier '__y'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator>(pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>,pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>){return(__y,__x);
                                                                                                                                                                                                                                      ^
vec.cpp:4645:235: error: use of undeclared identifier '__x'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator>(pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>,pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>){return(__y,__x);
                                                                                                                                                                                                                                          ^
vec.cpp:4647:234: error: use of undeclared identifier '__x'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator>=(pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>,pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>){return(!(__x,__y));
                                                                                                                                                                                                                                         ^
vec.cpp:4647:238: error: use of undeclared identifier '__y'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator>=(pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>,pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>){return(!(__x,__y));
                                                                                                                                                                                                                                             ^
vec.cpp:4649:234: error: use of undeclared identifier '__y'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator<=(pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>,pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>){return(!(__y,__x));
                                                                                                                                                                                                                                         ^
vec.cpp:4649:238: error: use of undeclared identifier '__x'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator<=(pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>,pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>){return(!(__y,__x));
                                                                                                                                                                                                                                             ^
vec.cpp:4651:103: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>typename enable_if<expression,void>::type swap(pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>,pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>){(__x.swap(__y));
                                                                                                      ^
vec.cpp:4651:121: error: definition or redeclaration of 'type' cannot name the global scope
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>typename enable_if<expression,void>::type swap(pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>,pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>){(__x.swap(__y));
                                                                                                                      ~~^
vec.cpp:4651:125: error: expected ';' at end of declaration
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>typename enable_if<expression,void>::type swap(pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>,pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>){(__x.swap(__y));
                                                                                                                            ^
                                                                                                                            ;
vec.cpp:4651:136: error: use of undeclared identifier '__xcodeml_template_type_0_0'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>typename enable_if<expression,void>::type swap(pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>,pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>){(__x.swap(__y));
                                                                                                                                       ^
vec.cpp:4651:126: error: unknown type name 'swap'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>typename enable_if<expression,void>::type swap(pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>,pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>){(__x.swap(__y));
                                                                                                                             ^
vec.cpp:4651:136: error: use of undeclared identifier '__xcodeml_template_type_0_0'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>typename enable_if<expression,void>::type swap(pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>,pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>){(__x.swap(__y));
                                                                                                                                       ^
vec.cpp:4651:192: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>typename enable_if<expression,void>::type swap(pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>,pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>){(__x.swap(__y));
                                                                                                                                                                                               ^
vec.cpp:4651:192: error: expected ')'
vec.cpp:4651:130: note: to match this '('
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>typename enable_if<expression,void>::type swap(pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>,pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>){(__x.swap(__y));
                                                                                                                                 ^
vec.cpp:4663:215: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>pair<typename __unwrap_ref_decay<__xcodeml_template_type_0_0>::type,typename __unwrap_ref_decay<__xcodeml_template_type_0_1>::type>{return __xcodeml_identity<pair<typename __unwrap_ref_decay<__xcodeml_template_type_0_0>::type,typename __unwrap_ref_decay<__xcodeml_template_type_0_1>::type> >::t((std::__1::__xcodeml_template_type_0_0(__t1)),(std::__1::__xcodeml_template_type_0_1(__t2)));
                                                                                                                                                                                                                      ^
vec.cpp:4667:122: error: use of undeclared identifier 'expression'
template<unsigned long _Ip,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class tuple_element<expression,pair<__xcodeml_template_type_0_1,__xcodeml_template_type_0_2> >{
                                                                                                                         ^
vec.cpp:4680:230: error: use of undeclared identifier '__p'
template<>class __get_pair<0>{public:template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>static __xcodeml_template_type_0_0&get(pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>){return __p.first;
                                                                                                                                                                                                                                     ^
vec.cpp:4682:206: error: use of undeclared identifier '__p'
public:template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>static __xcodeml_template_type_0_0 const&get(pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>){return __p.first;
                                                                                                                                                                                                             ^
vec.cpp:4684:212: error: no member named '__xcodeml_template_type_0_0' in namespace 'std::__1'
public:template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>static __xcodeml_template_type_0_0(*get(pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>)){return(std::__1::__xcodeml_template_type_0_0(__p.first));
                                                                                                                                                                                                         ~~~~~~~~~~^
vec.cpp:4684:240: error: use of undeclared identifier '__p'
public:template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>static __xcodeml_template_type_0_0(*get(pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>)){return(std::__1::__xcodeml_template_type_0_0(__p.first));
                                                                                                                                                                                                                                               ^
vec.cpp:4686:218: error: no member named '__xcodeml_template_type_0_0' in namespace 'std::__1'
public:template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>static __xcodeml_template_type_0_0 const(*get(pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>)){return(std::__1::__xcodeml_template_type_0_0(__p.first));
                                                                                                                                                                                                               ~~~~~~~~~~^
vec.cpp:4686:246: error: use of undeclared identifier '__p'
public:template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>static __xcodeml_template_type_0_0 const(*get(pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>)){return(std::__1::__xcodeml_template_type_0_0(__p.first));
                                                                                                                                                                                                                                                     ^
vec.cpp:4690:230: error: use of undeclared identifier '__p'
template<>class __get_pair<1>{public:template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>static __xcodeml_template_type_0_1&get(pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>){return __p.second;
                                                                                                                                                                                                                                     ^
vec.cpp:4692:206: error: use of undeclared identifier '__p'
public:template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>static __xcodeml_template_type_0_1 const&get(pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>){return __p.second;
                                                                                                                                                                                                             ^
vec.cpp:4694:212: error: no member named '__xcodeml_template_type_0_1' in namespace 'std::__1'
public:template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>static __xcodeml_template_type_0_1(*get(pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>)){return(std::__1::__xcodeml_template_type_0_1(__p.second));
                                                                                                                                                                                                         ~~~~~~~~~~^
vec.cpp:4694:240: error: use of undeclared identifier '__p'
public:template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>static __xcodeml_template_type_0_1(*get(pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>)){return(std::__1::__xcodeml_template_type_0_1(__p.second));
                                                                                                                                                                                                                                               ^
vec.cpp:4696:218: error: no member named '__xcodeml_template_type_0_1' in namespace 'std::__1'
public:template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>static __xcodeml_template_type_0_1 const(*get(pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>)){return(std::__1::__xcodeml_template_type_0_1(__p.second));
                                                                                                                                                                                                               ~~~~~~~~~~^
vec.cpp:4696:246: error: use of undeclared identifier '__p'
public:template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>static __xcodeml_template_type_0_1 const(*get(pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>)){return(std::__1::__xcodeml_template_type_0_1(__p.second));
                                                                                                                                                                                                                                                     ^
vec.cpp:4700:125: error: use of undeclared identifier 'expression'
template<unsigned long _Ip,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>typename tuple_element<expression,pair<__xcodeml_template_type_0_1,__xcodeml_template_type_0_2> >::type&get(pair<__xcodeml_template_type_0_1,__xcodeml_template_type_0_2>){return(__get_pair<expression>::get(__p));
                                                                                                                            ^
vec.cpp:4700:198: error: expected unqualified-id
template<unsigned long _Ip,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>typename tuple_element<expression,pair<__xcodeml_template_type_0_1,__xcodeml_template_type_0_2> >::type&get(pair<__xcodeml_template_type_0_1,__xcodeml_template_type_0_2>){return(__get_pair<expression>::get(__p));
                                                                                                                                                                                                     ^
vec.cpp:4733:80: error: expected expression
template<unsigned long _Ip>using index_sequence=integer_sequence<unsigned long,...>;
                                                                               ^
vec.cpp:4734:128: error: use of undeclared identifier 'integer_sequence'
template<typename __xcodeml_template_type_0_0,__xcodeml_template_type_0_0 _Ep>using __make_integer_sequence=__make_integer_seq<integer_sequence,__xcodeml_template_type_0_0,expression>;
                                                                                                                               ^
vec.cpp:4735:126: error: use of undeclared identifier 'integer_sequence'
template<typename __xcodeml_template_type_0_0,__xcodeml_template_type_0_0 _Np>using make_integer_sequence=__make_integer_seq<integer_sequence,__xcodeml_template_type_0_0,expression>;
                                                                                                                             ^
vec.cpp:4736:73: error: use of undeclared identifier 'integer_sequence'
template<unsigned long _Np>using make_index_sequence=__make_integer_seq<integer_sequence,unsigned long,expression>;
                                                                        ^
vec.cpp:4737:91: error: use of undeclared identifier 'integer_sequence'
template<typename __xcodeml_template_type_0_0>using index_sequence_for=__make_integer_seq<integer_sequence,unsigned long,expression>;
                                                                                          ^
vec.cpp:4738:249: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>__xcodeml_template_type_0_0 exchange(__xcodeml_template_type_0_0&__obj,__xcodeml_template_type_0_1(*__new_value)){__xcodeml_template_type_0_0 __old_value=(std::__1::(__obj));
                                                                                                                                                                                                                                                        ^
vec.cpp:4739:19: error: no member named '__xcodeml_template_type_0_1' in namespace 'std::__1'
(__obj=(std::__1::__xcodeml_template_type_0_1(__new_value)));
        ~~~~~~~~~~^
vec.cpp:4746:49: error: no class named '_PairT' in namespace 'std::__1'
template<>class unary_function<class::std::__1::_PairT,unsigned long>{public:typedef class::std::__1::_PairT argument_type;
                                    ~~~~~~~~~~~~^
vec.cpp:4749:50: error: expected unqualified-id
template<>class unary_function<bool,unsigned long>{public:typedef bool argument_type;
                                                 ^
vec.cpp:4811:7: error: no member named 'memcpy' in namespace 'std'
(std::memcpy((&__r),__p,(sizeof(__r))));
 ~~~~~^
vec.cpp:4815:7: error: no member named 'memcpy' in namespace 'std'
(std::memcpy((&__r),__p,(sizeof(__r))));
 ~~~~~^
vec.cpp:4819:7: error: no member named 'memcpy' in namespace 'std'
(std::memcpy((&__r),__p,(sizeof(__r))));
 ~~~~~^
vec.cpp:4843:7: error: no member named 'swap' in namespace 'std'
(std::swap(__z,__x));
 ~~~~~^
vec.cpp:4872:41: error: no matching function for call to '__loadword'
if((__len>=4)){{unsigned int const __a=(__loadword(__s));
                                        ^~~~~~~~~~
vec.cpp:4810:75: note: candidate template ignored: couldn't infer template argument '__xcodeml_template_type_0_0'
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0 __loadword(void const(*__p)){__xcodeml_template_type_0_0 __r;
                                                                          ^
vec.cpp:4897:8: error: no matching constructor for initialization of '__xcodeml_identity<class ::std::__1::pair<unsigned long, unsigned long> >::t' (aka 'std::__1::pair<unsigned long, unsigned long>')
return __xcodeml_identity<class::std::__1::pair<unsigned long,unsigned long> >::t((__a+__z),(__b+__c));
       ^                                                                          ~~~~~~~~~~~~~~~~~~~
vec.cpp:644:82: note: candidate constructor template not viable: requires 0 arguments, but 2 were provided
public:template<bool _Dummy=true,typename enable_if<expression,bool>::type=false>pair()
                                                                                 ^
vec.cpp:625:8: note: candidate constructor not viable: requires 1 argument, but 2 were provided
public:pair(class pair const&);
       ^
vec.cpp:626:8: note: candidate constructor not viable: requires 1 argument, but 2 were provided
public:pair(class::std::__1::pair<unsigned long,unsigned long>(*)):__non_trivially_copyable_base(),first(),second(){}
       ^
vec.cpp:4927:1: error: unknown type name '__xcodeml_template_type_0_0'
__xcodeml_template_type_0_0 __murmur2_or_cityhash::operator()(void const(*__key),__xcodeml_template_type_0_0 __len){__xcodeml_template_type_0_0 const __m=0x5bd1e995;
^
vec.cpp:4927:29: error: '__murmur2_or_cityhash' is not a class, namespace, or enumeration
__xcodeml_template_type_0_0 __murmur2_or_cityhash::operator()(void const(*__key),__xcodeml_template_type_0_0 __len){__xcodeml_template_type_0_0 const __m=0x5bd1e995;
                            ^
vec.cpp:4822:109: note: '__murmur2_or_cityhash' declared here
template<typename __xcodeml_template_type_0_0,unsigned long=((sizeof(__xcodeml_template_type_0_0))*8)>class __murmur2_or_cityhash;
                                                                                                            ^
vec.cpp:4927:82: error: unknown type name '__xcodeml_template_type_0_0'
__xcodeml_template_type_0_0 __murmur2_or_cityhash::operator()(void const(*__key),__xcodeml_template_type_0_0 __len){__xcodeml_template_type_0_0 const __m=0x5bd1e995;
                                                                                 ^
vec.cpp:4993:77: error: expected member name or ';' after declaration specifiers
private:static pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_0>{(__a+=__w);
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
vec.cpp:4975:40: error: type-id cannot have a name
unsigned int const __b=(unsigned int(((__s+__len)-4)));
                                       ^~~
vec.cpp:4975:43: error: expected ')'
unsigned int const __b=(unsigned int(((__s+__len)-4)));
                                          ^
vec.cpp:4975:39: note: to match this '('
unsigned int const __b=(unsigned int(((__s+__len)-4)));
                                      ^
vec.cpp:4975:50: error: expected ')'
unsigned int const __b=(unsigned int(((__s+__len)-4)));
                                                 ^
vec.cpp:4975:38: note: to match this '('
unsigned int const __b=(unsigned int(((__s+__len)-4)));
                                     ^
vec.cpp:4975:55: error: expected expression
unsigned int const __b=(unsigned int(((__s+__len)-4)));
                                                      ^
vec.cpp:5026:1: error: unknown type name '__xcodeml_template_type_0_0'
__xcodeml_template_type_0_0 __murmur2_or_cityhash::operator()(void const(*__key),__xcodeml_template_type_0_0 __len){char const(*__s)=static_cast<char const(*)>(__key);
^
vec.cpp:5026:29: error: '__murmur2_or_cityhash' is not a class, namespace, or enumeration
__xcodeml_template_type_0_0 __murmur2_or_cityhash::operator()(void const(*__key),__xcodeml_template_type_0_0 __len){char const(*__s)=static_cast<char const(*)>(__key);
                            ^
vec.cpp:4822:109: note: '__murmur2_or_cityhash' declared here
template<typename __xcodeml_template_type_0_0,unsigned long=((sizeof(__xcodeml_template_type_0_0))*8)>class __murmur2_or_cityhash;
                                                                                                            ^
vec.cpp:5026:82: error: unknown type name '__xcodeml_template_type_0_0'
__xcodeml_template_type_0_0 __murmur2_or_cityhash::operator()(void const(*__key),__xcodeml_template_type_0_0 __len){char const(*__s)=static_cast<char const(*)>(__key);
                                                                                 ^
vec.cpp:5053:48: error: no class named '_PairT' in namespace 'std::__1'
template<>class __scalar_hash<class::std::__1::_PairT,2>:public unary_function<class::std::__1::_PairT,unsigned long>{public:unsigned long operator()(class::std::__1::_PairT __v)const{union __xcodeml_6{public:class::std::__1::_PairT __t;
                                   ~~~~~~~~~~~~^
vec.cpp:5231:114: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
template<>class hash<float>:public __scalar_hash<float,0>{public:unsigned long operator()(float __v)const{if((__v==0.0f)){return 0;};
                                                                                                              ~~~^~~~~~
vec.cpp:5231:114: note: remove extraneous parentheses around the comparison to silence this warning
template<>class hash<float>:public __scalar_hash<float,0>{public:unsigned long operator()(float __v)const{if((__v==0.0f)){return 0;};
                                                                                                             ~   ^     ~
vec.cpp:5231:114: note: use '=' to turn this equality comparison into an assignment
template<>class hash<float>:public __scalar_hash<float,0>{public:unsigned long operator()(float __v)const{if((__v==0.0f)){return 0;};
                                                                                                                 ^~
                                                                                                                 =
vec.cpp:5236:117: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
template<>class hash<double>:public __scalar_hash<double,1>{public:unsigned long operator()(double __v)const{if((__v==0.0)){return 0;};
                                                                                                                 ~~~^~~~~
vec.cpp:5236:117: note: remove extraneous parentheses around the comparison to silence this warning
template<>class hash<double>:public __scalar_hash<double,1>{public:unsigned long operator()(double __v)const{if((__v==0.0)){return 0;};
                                                                                                                ~   ^    ~
vec.cpp:5236:117: note: use '=' to turn this equality comparison into an assignment
template<>class hash<double>:public __scalar_hash<double,1>{public:unsigned long operator()(double __v)const{if((__v==0.0)){return 0;};
                                                                                                                    ^~
                                                                                                                    =
vec.cpp:5241:132: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
template<>class hash<long double>:public __scalar_hash<long double,2>{public:unsigned long operator()(long double __v)const{if((__v==0.0L)){return 0;};
                                                                                                                                ~~~^~~~~~
vec.cpp:5241:132: note: remove extraneous parentheses around the comparison to silence this warning
template<>class hash<long double>:public __scalar_hash<long double,2>{public:unsigned long operator()(long double __v)const{if((__v==0.0L)){return 0;};
                                                                                                                               ~   ^     ~
vec.cpp:5241:132: note: use '=' to turn this equality comparison into an assignment
template<>class hash<long double>:public __scalar_hash<long double,2>{public:unsigned long operator()(long double __v)const{if((__v==0.0L)){return 0;};
                                                                                                                                   ^~
                                                                                                                                   =
vec.cpp:5268:105: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>class hash:public __enum_hash<__xcodeml_template_type_0_0,expression>{}
                                                                                                        ^
vec.cpp:5271:139: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>using __check_hash_requirements=integral_constant<bool,expression>;
                                                                                                                                          ^
vec.cpp:5272:132: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>using __has_enabled_hash=integral_constant<bool,expression>;
                                                                                                                                   ^
vec.cpp:5647:122: error: expected ';' after return statement
template<typename __xcodeml_template_type_0_0>bool __libcpp_signbit(__xcodeml_template_type_0_0 __lcpp_x){return __lcpp_x float((__lcpp_x))double((__lcpp_x))long double((__lcpp_x))float((__lcpp_x))double((__lcpp_x))long double((__lcpp_x))float((__lcpp_x))double((__lcpp_x))long double((__lcpp_x))float((__lcpp_x))double((__lcpp_x))long double((__lcpp_x));
                                                                                                                         ^
                                                                                                                         ;
vec.cpp:5649:66: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,bool>::type signbit(__xcodeml_template_type_0_0 __lcpp_x){return((((typename __promote<__xcodeml_template_type_0_0,void,void>::type)__lcpp_x)));
                                                                 ^
vec.cpp:5649:84: warning: extra qualification on member 'type' [-Wextra-qualification]
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,bool>::type signbit(__xcodeml_template_type_0_0 __lcpp_x){return((((typename __promote<__xcodeml_template_type_0_0,void,void>::type)__lcpp_x)));
                                                                                   ^
vec.cpp:5649:88: error: expected ';' at end of declaration
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,bool>::type signbit(__xcodeml_template_type_0_0 __lcpp_x){return((((typename __promote<__xcodeml_template_type_0_0,void,void>::type)__lcpp_x)));
                                                                                       ^
                                                                                       ;
vec.cpp:5649:97: error: unknown type name '__xcodeml_template_type_0_0'
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,bool>::type signbit(__xcodeml_template_type_0_0 __lcpp_x){return((((typename __promote<__xcodeml_template_type_0_0,void,void>::type)__lcpp_x)));
                                                                                                ^
vec.cpp:5649:89: error: C++ requires a type specifier for all declarations
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,bool>::type signbit(__xcodeml_template_type_0_0 __lcpp_x){return((((typename __promote<__xcodeml_template_type_0_0,void,void>::type)__lcpp_x)));
                                                                                        ^
vec.cpp:5649:164: error: use of undeclared identifier '__xcodeml_template_type_0_0'
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,bool>::type signbit(__xcodeml_template_type_0_0 __lcpp_x){return((((typename __promote<__xcodeml_template_type_0_0,void,void>::type)__lcpp_x)));
                                                                                                                                                                   ^
vec.cpp:5649:204: error: no type named 'type' in the global namespace
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,bool>::type signbit(__xcodeml_template_type_0_0 __lcpp_x){return((((typename __promote<__xcodeml_template_type_0_0,void,void>::type)__lcpp_x)));
                                                                                                                                                                                                         ~~^
vec.cpp:5651:66: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,bool>::type signbit(__xcodeml_template_type_0_0 __lcpp_x){return(__lcpp_x<0);
                                                                 ^
vec.cpp:5651:84: warning: extra qualification on member 'type' [-Wextra-qualification]
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,bool>::type signbit(__xcodeml_template_type_0_0 __lcpp_x){return(__lcpp_x<0);
                                                                                   ^
vec.cpp:5651:88: error: expected ';' at end of declaration
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,bool>::type signbit(__xcodeml_template_type_0_0 __lcpp_x){return(__lcpp_x<0);
                                                                                       ^
                                                                                       ;
vec.cpp:5651:97: error: unknown type name '__xcodeml_template_type_0_0'
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,bool>::type signbit(__xcodeml_template_type_0_0 __lcpp_x){return(__lcpp_x<0);
                                                                                                ^
vec.cpp:5651:89: error: C++ requires a type specifier for all declarations
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,bool>::type signbit(__xcodeml_template_type_0_0 __lcpp_x){return(__lcpp_x<0);
                                                                                        ^
vec.cpp:5653:66: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,bool>::type signbit(__xcodeml_template_type_0_0){return false;
                                                                 ^
vec.cpp:5653:84: warning: extra qualification on member 'type' [-Wextra-qualification]
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,bool>::type signbit(__xcodeml_template_type_0_0){return false;
                                                                                   ^
vec.cpp:5653:88: error: expected ';' at end of declaration
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,bool>::type signbit(__xcodeml_template_type_0_0){return false;
                                                                                       ^
                                                                                       ;
vec.cpp:5653:89: error: unknown type name 'signbit'
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,bool>::type signbit(__xcodeml_template_type_0_0){return false;
                                                                                        ^
vec.cpp:5653:126: error: expected expression
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,bool>::type signbit(__xcodeml_template_type_0_0){return false;
                                                                                                                             ^
vec.cpp:5654:2: error: expected ';' after top level declarator
}
 ^
 ;
vec.cpp:6349:6: warning: function previously declared with an explicit exception specification redeclared with an implicit exception specification [-Wimplicit-exception-spec-mismatch]
void operator delete(void(*__p));
     ^
vec.cpp:6354:6: warning: function previously declared with an explicit exception specification redeclared with an implicit exception specification [-Wimplicit-exception-spec-mismatch]
void operator delete[](void(*__p));
     ^
vec.cpp:6357:44: error: ISO C++ forbids forward references to 'enum' types
void(*operator new(unsigned long __sz,enum align_val_t));
                                           ^
vec.cpp:6401:172: error: expected ';' after expression
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0(*__launder(__xcodeml_template_type_0_0(*__p))){(!is_function<__xcodeml_template_type_0_0>::value)"can't launder functions";
                                                                                                                                                                           ^
                                                                                                                                                                           ;
vec.cpp:6401:172: warning: expression result unused [-Wunused-value]
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0(*__launder(__xcodeml_template_type_0_0(*__p))){(!is_function<__xcodeml_template_type_0_0>::value)"can't launder functions";
                                                                                                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:6402:78: error: expected ';' after expression
(!is_same<void,typename remove_cv<__xcodeml_template_type_0_0>::type>::value)"can't launder cv-void";
                                                                             ^
                                                                             ;
vec.cpp:6402:78: warning: expression result unused [-Wunused-value]
(!is_same<void,typename remove_cv<__xcodeml_template_type_0_0>::type>::value)"can't launder cv-void";
                                                                             ^~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:6418:79: error: '__has_result_type' is not a class, namespace, or enumeration
private:template<typename __xcodeml_template_type_1_0>static class::std::__1::__has_result_type::__two __test(...)
                                                                              ^
vec.cpp:6413:53: note: '__has_result_type' declared here
template<typename __xcodeml_template_type_0_0>class __has_result_type{private:
                                                    ^
vec.cpp:6418:115: error: expected ';' at end of declaration list
private:template<typename __xcodeml_template_type_1_0>static class::std::__1::__has_result_type::__two __test(...)
                                                                                                                  ^
                                                                                                                  ;
vec.cpp:6430:168: error: use of undeclared identifier '__t'
template<>class less<void>{public:template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>decltype (operator()(__xcodeml_template_type_0_0(*__t),__xcodeml_template_type_0_1(*__u))const){return((std::__1::__xcodeml_template_type_0_0(__t)),(std::__1::__xcodeml_template_type_0_1(__u)));
                                                                                                                                                                       ^
vec.cpp:6430:202: error: use of undeclared identifier '__u'
template<>class less<void>{public:template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>decltype (operator()(__xcodeml_template_type_0_0(*__t),__xcodeml_template_type_0_1(*__u))const){return((std::__1::__xcodeml_template_type_0_0(__t)),(std::__1::__xcodeml_template_type_0_1(__u)));
                                                                                                                                                                                                         ^
vec.cpp:6430:213: error: expected member name or ';' after declaration specifiers
template<>class less<void>{public:template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>decltype (operator()(__xcodeml_template_type_0_0(*__t),__xcodeml_template_type_0_1(*__u))const){return((std::__1::__xcodeml_template_type_0_0(__t)),(std::__1::__xcodeml_template_type_0_1(__u)));
                                                                                                                                                                                                                    ^
vec.cpp:6440:33: error: '__derives_from_unary_function' is not a class, namespace, or enumeration
private:static class::std::__1::__derives_from_unary_function::__two __test(...);
                                ^
vec.cpp:6435:53: note: '__derives_from_unary_function' declared here
template<typename __xcodeml_template_type_0_0>class __derives_from_unary_function{private:
                                                    ^
vec.cpp:6442:1: error: expected member name or ';' after declaration specifiers
public:
^
vec.cpp:6453:33: error: '__derives_from_binary_function' is not a class, namespace, or enumeration
private:static class::std::__1::__derives_from_binary_function::__two __test(...);
                                ^
vec.cpp:6448:53: note: '__derives_from_binary_function' declared here
template<typename __xcodeml_template_type_0_0>class __derives_from_binary_function{private:
                                                    ^
vec.cpp:6455:1: error: expected member name or ';' after declaration specifiers
public:
^
vec.cpp:6461:169: error: expected class name
template<typename __xcodeml_template_type_0_0,bool=__derives_from_unary_function<__xcodeml_template_type_0_0>::value>class __maybe_derive_from_unary_function:public/**/{}
                                                                                                                                                                        ^
vec.cpp:6466:171: error: expected class name
template<typename __xcodeml_template_type_0_0,bool=__derives_from_binary_function<__xcodeml_template_type_0_0>::value>class __maybe_derive_from_binary_function:public/**/{}
                                                                                                                                                                          ^
vec.cpp:6471:205: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0,bool=__has_result_type<__xcodeml_template_type_0_0>::value>class __weak_result_type_imp:public __maybe_derive_from_unary_function<__xcodeml_template_type_0_0,expression>,public __maybe_derive_from_binary_function<__xcodeml_template_type_0_0,expression>{public:typedef typename __xcodeml_template_type_0_0::result_type result_type;
                                                                                                                                                                                                            ^
vec.cpp:6471:288: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0,bool=__has_result_type<__xcodeml_template_type_0_0>::value>class __weak_result_type_imp:public __maybe_derive_from_unary_function<__xcodeml_template_type_0_0,expression>,public __maybe_derive_from_binary_function<__xcodeml_template_type_0_0,expression>{public:typedef typename __xcodeml_template_type_0_0::result_type result_type;
                                                                                                                                                                                                                                                                                               ^
vec.cpp:6475:177: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>class __weak_result_type_imp<__xcodeml_template_type_0_0,0>:public __maybe_derive_from_unary_function<__xcodeml_template_type_0_0,expression>,public __maybe_derive_from_binary_function<__xcodeml_template_type_0_0,expression>{}
                                                                                                                                                                                ^
vec.cpp:6475:260: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>class __weak_result_type_imp<__xcodeml_template_type_0_0,0>:public __maybe_derive_from_unary_function<__xcodeml_template_type_0_0,expression>,public __maybe_derive_from_binary_function<__xcodeml_template_type_0_0,expression>{}
                                                                                                                                                                                                                                                                   ^
vec.cpp:6477:130: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>class __weak_result_type:public __weak_result_type_imp<__xcodeml_template_type_0_0,expression>{}
                                                                                                                                 ^
vec.cpp:6495:90: error: class template partial specialization contains a template parameter that cannot be deduced; this partial specialization will never be used [-Wunusable-partial-specialization]
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __weak_result_type<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)()>:public unary_function<__xcodeml_template_type_0_1(*),__xcodeml_template_type_0_0>{}
                                                                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:6495:56: note: non-deducible template parameter '__xcodeml_template_type_0_1'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __weak_result_type<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)()>:public unary_function<__xcodeml_template_type_0_1(*),__xcodeml_template_type_0_0>{}
                                                       ^
vec.cpp:6497:90: error: class template partial specialization contains a template parameter that cannot be deduced; this partial specialization will never be used [-Wunusable-partial-specialization]
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __weak_result_type<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)()const>:public unary_function<__xcodeml_template_type_0_1 const(*),__xcodeml_template_type_0_0>{}
                                                                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:6497:56: note: non-deducible template parameter '__xcodeml_template_type_0_1'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __weak_result_type<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)()const>:public unary_function<__xcodeml_template_type_0_1 const(*),__xcodeml_template_type_0_0>{}
                                                       ^
vec.cpp:6499:90: error: class template partial specialization contains a template parameter that cannot be deduced; this partial specialization will never be used [-Wunusable-partial-specialization]
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __weak_result_type<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)()volatile>:public unary_function<__xcodeml_template_type_0_1 volatile(*),__xcodeml_template_type_0_0>{}
                                                                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:6499:56: note: non-deducible template parameter '__xcodeml_template_type_0_1'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __weak_result_type<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)()volatile>:public unary_function<__xcodeml_template_type_0_1 volatile(*),__xcodeml_template_type_0_0>{}
                                                       ^
vec.cpp:6501:90: error: class template partial specialization contains a template parameter that cannot be deduced; this partial specialization will never be used [-Wunusable-partial-specialization]
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __weak_result_type<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)()const volatile>:public unary_function<__xcodeml_template_type_0_1 volatile const(*),__xcodeml_template_type_0_0>{}
                                                                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:6501:56: note: non-deducible template parameter '__xcodeml_template_type_0_1'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __weak_result_type<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)()const volatile>:public unary_function<__xcodeml_template_type_0_1 volatile const(*),__xcodeml_template_type_0_0>{}
                                                       ^
vec.cpp:6509:127: error: class template partial specialization contains a template parameter that cannot be deduced; this partial specialization will never be used [-Wunusable-partial-specialization]
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __weak_result_type<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(__xcodeml_template_type_0_2)>:public binary_function<__xcodeml_template_type_0_1(*),__xcodeml_template_type_0_2,__xcodeml_template_type_0_0>{}
                                                                                                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:6509:56: note: non-deducible template parameter '__xcodeml_template_type_0_1'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __weak_result_type<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(__xcodeml_template_type_0_2)>:public binary_function<__xcodeml_template_type_0_1(*),__xcodeml_template_type_0_2,__xcodeml_template_type_0_0>{}
                                                       ^
vec.cpp:6511:127: error: class template partial specialization contains a template parameter that cannot be deduced; this partial specialization will never be used [-Wunusable-partial-specialization]
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __weak_result_type<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(__xcodeml_template_type_0_2)const>:public binary_function<__xcodeml_template_type_0_1 const(*),__xcodeml_template_type_0_2,__xcodeml_template_type_0_0>{}
                                                                                                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:6511:56: note: non-deducible template parameter '__xcodeml_template_type_0_1'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __weak_result_type<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(__xcodeml_template_type_0_2)const>:public binary_function<__xcodeml_template_type_0_1 const(*),__xcodeml_template_type_0_2,__xcodeml_template_type_0_0>{}
                                                       ^
vec.cpp:6513:127: error: class template partial specialization contains a template parameter that cannot be deduced; this partial specialization will never be used [-Wunusable-partial-specialization]
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __weak_result_type<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(__xcodeml_template_type_0_2)volatile>:public binary_function<__xcodeml_template_type_0_1 volatile(*),__xcodeml_template_type_0_2,__xcodeml_template_type_0_0>{}
                                                                                                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:6513:56: note: non-deducible template parameter '__xcodeml_template_type_0_1'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __weak_result_type<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(__xcodeml_template_type_0_2)volatile>:public binary_function<__xcodeml_template_type_0_1 volatile(*),__xcodeml_template_type_0_2,__xcodeml_template_type_0_0>{}
                                                       ^
vec.cpp:6515:127: error: class template partial specialization contains a template parameter that cannot be deduced; this partial specialization will never be used [-Wunusable-partial-specialization]
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __weak_result_type<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(__xcodeml_template_type_0_2)const volatile>:public binary_function<__xcodeml_template_type_0_1 volatile const(*),__xcodeml_template_type_0_2,__xcodeml_template_type_0_0>{}
                                                                                                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:6515:56: note: non-deducible template parameter '__xcodeml_template_type_0_1'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __weak_result_type<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(__xcodeml_template_type_0_2)const volatile>:public binary_function<__xcodeml_template_type_0_1 volatile const(*),__xcodeml_template_type_0_2,__xcodeml_template_type_0_0>{}
                                                       ^
vec.cpp:6517:247: error: 'void' must be the first and only parameter if specified
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3,typename __xcodeml_template_type_0_4>class __weak_result_type<__xcodeml_template_type_0_0(__xcodeml_template_type_0_1,__xcodeml_template_type_0_2,__xcodeml_template_type_0_3,void/**/)>{public:typedef __xcodeml_template_type_0_0 result_type;
                                                                                                                                                                                                                                                      ^
vec.cpp:6517:201: error: class template partial specialization contains a template parameter that cannot be deduced; this partial specialization will never be used [-Wunusable-partial-specialization]
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3,typename __xcodeml_template_type_0_4>class __weak_result_type<__xcodeml_template_type_0_0(__xcodeml_template_type_0_1,__xcodeml_template_type_0_2,__xcodeml_template_type_0_3,void/**/)>{public:typedef __xcodeml_template_type_0_0 result_type;
                                                                                                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:6517:167: note: non-deducible template parameter '__xcodeml_template_type_0_4'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3,typename __xcodeml_template_type_0_4>class __weak_result_type<__xcodeml_template_type_0_0(__xcodeml_template_type_0_1,__xcodeml_template_type_0_2,__xcodeml_template_type_0_3,void/**/)>{public:typedef __xcodeml_template_type_0_0 result_type;
                                                                                                                                                                      ^
vec.cpp:6520:248: error: 'void' must be the first and only parameter if specified
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3,typename __xcodeml_template_type_0_4>class __weak_result_type<__xcodeml_template_type_0_0&(__xcodeml_template_type_0_1,__xcodeml_template_type_0_2,__xcodeml_template_type_0_3,void/**/)>{public:typedef __xcodeml_template_type_0_0 result_type;
                                                                                                                                                                                                                                                       ^
vec.cpp:6520:201: error: class template partial specialization contains a template parameter that cannot be deduced; this partial specialization will never be used [-Wunusable-partial-specialization]
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3,typename __xcodeml_template_type_0_4>class __weak_result_type<__xcodeml_template_type_0_0&(__xcodeml_template_type_0_1,__xcodeml_template_type_0_2,__xcodeml_template_type_0_3,void/**/)>{public:typedef __xcodeml_template_type_0_0 result_type;
                                                                                                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:6520:167: note: non-deducible template parameter '__xcodeml_template_type_0_4'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3,typename __xcodeml_template_type_0_4>class __weak_result_type<__xcodeml_template_type_0_0&(__xcodeml_template_type_0_1,__xcodeml_template_type_0_2,__xcodeml_template_type_0_3,void/**/)>{public:typedef __xcodeml_template_type_0_0 result_type;
                                                                                                                                                                      ^
vec.cpp:6523:250: error: 'void' must be the first and only parameter if specified
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3,typename __xcodeml_template_type_0_4>class __weak_result_type<__xcodeml_template_type_0_0(*)(__xcodeml_template_type_0_1,__xcodeml_template_type_0_2,__xcodeml_template_type_0_3,void/**/)>{public:typedef __xcodeml_template_type_0_0 result_type;
                                                                                                                                                                                                                                                         ^
vec.cpp:6523:201: error: class template partial specialization contains a template parameter that cannot be deduced; this partial specialization will never be used [-Wunusable-partial-specialization]
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3,typename __xcodeml_template_type_0_4>class __weak_result_type<__xcodeml_template_type_0_0(*)(__xcodeml_template_type_0_1,__xcodeml_template_type_0_2,__xcodeml_template_type_0_3,void/**/)>{public:typedef __xcodeml_template_type_0_0 result_type;
                                                                                                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:6523:167: note: non-deducible template parameter '__xcodeml_template_type_0_4'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3,typename __xcodeml_template_type_0_4>class __weak_result_type<__xcodeml_template_type_0_0(*)(__xcodeml_template_type_0_1,__xcodeml_template_type_0_2,__xcodeml_template_type_0_3,void/**/)>{public:typedef __xcodeml_template_type_0_0 result_type;
                                                                                                                                                                      ^
vec.cpp:6526:302: error: 'void' must be the first and only parameter if specified
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3,typename __xcodeml_template_type_0_4>class __weak_result_type<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(__xcodeml_template_type_0_2,__xcodeml_template_type_0_3,void/**/)>{public:typedef __xcodeml_template_type_0_0 result_type;
                                                                                                                                                                                                                                                                                                             ^
vec.cpp:6526:201: error: class template partial specialization contains template parameters that cannot be deduced; this partial specialization will never be used [-Wunusable-partial-specialization]
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3,typename __xcodeml_template_type_0_4>class __weak_result_type<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(__xcodeml_template_type_0_2,__xcodeml_template_type_0_3,void/**/)>{public:typedef __xcodeml_template_type_0_0 result_type;
                                                                                                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:6526:56: note: non-deducible template parameter '__xcodeml_template_type_0_1'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3,typename __xcodeml_template_type_0_4>class __weak_result_type<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(__xcodeml_template_type_0_2,__xcodeml_template_type_0_3,void/**/)>{public:typedef __xcodeml_template_type_0_0 result_type;
                                                       ^
vec.cpp:6526:167: note: non-deducible template parameter '__xcodeml_template_type_0_4'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3,typename __xcodeml_template_type_0_4>class __weak_result_type<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(__xcodeml_template_type_0_2,__xcodeml_template_type_0_3,void/**/)>{public:typedef __xcodeml_template_type_0_0 result_type;
                                                                                                                                                                      ^
vec.cpp:6529:302: error: 'void' must be the first and only parameter if specified
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3,typename __xcodeml_template_type_0_4>class __weak_result_type<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(__xcodeml_template_type_0_2,__xcodeml_template_type_0_3,void/**/)const>{public:typedef __xcodeml_template_type_0_0 result_type;
                                                                                                                                                                                                                                                                                                             ^
vec.cpp:6529:201: error: class template partial specialization contains template parameters that cannot be deduced; this partial specialization will never be used [-Wunusable-partial-specialization]
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3,typename __xcodeml_template_type_0_4>class __weak_result_type<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(__xcodeml_template_type_0_2,__xcodeml_template_type_0_3,void/**/)const>{public:typedef __xcodeml_template_type_0_0 result_type;
                                                                                                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:6529:56: note: non-deducible template parameter '__xcodeml_template_type_0_1'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3,typename __xcodeml_template_type_0_4>class __weak_result_type<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(__xcodeml_template_type_0_2,__xcodeml_template_type_0_3,void/**/)const>{public:typedef __xcodeml_template_type_0_0 result_type;
                                                       ^
vec.cpp:6529:167: note: non-deducible template parameter '__xcodeml_template_type_0_4'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3,typename __xcodeml_template_type_0_4>class __weak_result_type<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(__xcodeml_template_type_0_2,__xcodeml_template_type_0_3,void/**/)const>{public:typedef __xcodeml_template_type_0_0 result_type;
                                                                                                                                                                      ^
vec.cpp:6532:302: error: 'void' must be the first and only parameter if specified
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3,typename __xcodeml_template_type_0_4>class __weak_result_type<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(__xcodeml_template_type_0_2,__xcodeml_template_type_0_3,void/**/)volatile>{public:typedef __xcodeml_template_type_0_0 result_type;
                                                                                                                                                                                                                                                                                                             ^
vec.cpp:6532:201: error: class template partial specialization contains template parameters that cannot be deduced; this partial specialization will never be used [-Wunusable-partial-specialization]
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3,typename __xcodeml_template_type_0_4>class __weak_result_type<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(__xcodeml_template_type_0_2,__xcodeml_template_type_0_3,void/**/)volatile>{public:typedef __xcodeml_template_type_0_0 result_type;
                                                                                                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:6532:56: note: non-deducible template parameter '__xcodeml_template_type_0_1'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3,typename __xcodeml_template_type_0_4>class __weak_result_type<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(__xcodeml_template_type_0_2,__xcodeml_template_type_0_3,void/**/)volatile>{public:typedef __xcodeml_template_type_0_0 result_type;
                                                       ^
vec.cpp:6532:167: note: non-deducible template parameter '__xcodeml_template_type_0_4'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3,typename __xcodeml_template_type_0_4>class __weak_result_type<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(__xcodeml_template_type_0_2,__xcodeml_template_type_0_3,void/**/)volatile>{public:typedef __xcodeml_template_type_0_0 result_type;
                                                                                                                                                                      ^
vec.cpp:6535:302: error: 'void' must be the first and only parameter if specified
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3,typename __xcodeml_template_type_0_4>class __weak_result_type<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(__xcodeml_template_type_0_2,__xcodeml_template_type_0_3,void/**/)const volatile>{public:typedef __xcodeml_template_type_0_0 result_type;
                                                                                                                                                                                                                                                                                                             ^
vec.cpp:6535:201: error: class template partial specialization contains template parameters that cannot be deduced; this partial specialization will never be used [-Wunusable-partial-specialization]
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3,typename __xcodeml_template_type_0_4>class __weak_result_type<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(__xcodeml_template_type_0_2,__xcodeml_template_type_0_3,void/**/)const volatile>{public:typedef __xcodeml_template_type_0_0 result_type;
                                                                                                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:6535:56: note: non-deducible template parameter '__xcodeml_template_type_0_1'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3,typename __xcodeml_template_type_0_4>class __weak_result_type<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(__xcodeml_template_type_0_2,__xcodeml_template_type_0_3,void/**/)const volatile>{public:typedef __xcodeml_template_type_0_0 result_type;
                                                       ^
vec.cpp:6535:167: note: non-deducible template parameter '__xcodeml_template_type_0_4'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3,typename __xcodeml_template_type_0_4>class __weak_result_type<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)(__xcodeml_template_type_0_2,__xcodeml_template_type_0_3,void/**/)const volatile>{public:typedef __xcodeml_template_type_0_0 result_type;
                                                                                                                                                                      ^
vec.cpp:6542:212: error: no member named '__xcodeml_template_type_1_0' in namespace 'std::__1'
template<typename __xcodeml_template_type_0_0>class __invoke_void_return_wrapper{public:template<typename __xcodeml_template_type_1_0>static __xcodeml_template_type_0_0 __call(void/*__args*/){return(((std::__1::__xcodeml_template_type_1_0(__args))));
                                                                                                                                                                                                         ~~~~~~~~~~^
vec.cpp:6542:240: error: use of undeclared identifier '__args'
template<typename __xcodeml_template_type_0_0>class __invoke_void_return_wrapper{public:template<typename __xcodeml_template_type_1_0>static __xcodeml_template_type_0_0 __call(void/*__args*/){return(((std::__1::__xcodeml_template_type_1_0(__args))));
                                                                                                                                                                                                                                               ^
vec.cpp:6547:153: error: no member named '__xcodeml_template_type_0_0' in namespace 'std::__1'
template<>class __invoke_void_return_wrapper<void>{public:template<typename __xcodeml_template_type_0_0>static void __call(void/*__args*/){(((std::__1::__xcodeml_template_type_0_0(__args))));
                                                                                                                                              ~~~~~~~~~~^
vec.cpp:6547:181: error: use of undeclared identifier '__args'
template<>class __invoke_void_return_wrapper<void>{public:template<typename __xcodeml_template_type_0_0>static void __call(void/*__args*/){(((std::__1::__xcodeml_template_type_0_0(__args))));
                                                                                                                                                                                    ^
vec.cpp:6564:104: error: expected expression
public:template<typename __xcodeml_template_type_1_0>typename __invoke_of<__xcodeml_template_type_0_0&,...>::type operator()(void/*__args*/)const{return(((this->get()),(std::__1::__xcodeml_template_type_1_0(__args))));
                                                                                                       ^
vec.cpp:6564:110: error: member 'type' declared as a template
public:template<typename __xcodeml_template_type_1_0>typename __invoke_of<__xcodeml_template_type_0_0&,...>::type operator()(void/*__args*/)const{return(((this->get()),(std::__1::__xcodeml_template_type_1_0(__args))));
       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                                        ^
vec.cpp:6564:114: error: expected ';' at end of declaration list
public:template<typename __xcodeml_template_type_1_0>typename __invoke_of<__xcodeml_template_type_0_0&,...>::type operator()(void/*__args*/)const{return(((this->get()),(std::__1::__xcodeml_template_type_1_0(__args))));
                                                                                                                 ^
                                                                                                                 ;
vec.cpp:6556:75: error: expected unqualified-id
public:reference_wrapper(__xcodeml_template_type_0_0&__f):__f_((std::__1::(__f))){}
                                                                          ^
vec.cpp:6569:93: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0>reference_wrapper<__xcodeml_template_type_0_0>{return __xcodeml_identity<reference_wrapper<__xcodeml_template_type_0_0> >::t(__t);
                                                                                            ^
vec.cpp:6582:90: error: explicit specialization of undeclared template class '__is_transparent'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __is_transparent<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1,typename __void_t<typename __xcodeml_template_type_0_0::is_transparent>::type>:public integral_constant<bool,1>{}
                                                                                         ^               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:6592:79: error: '__has_allocator_type' is not a class, namespace, or enumeration
private:template<typename __xcodeml_template_type_1_0>static class::std::__1::__has_allocator_type::__two __test(...)
                                                                              ^
vec.cpp:6587:53: note: '__has_allocator_type' declared here
template<typename __xcodeml_template_type_0_0>class __has_allocator_type{private:
                                                    ^
vec.cpp:6592:118: error: expected ';' at end of declaration list
private:template<typename __xcodeml_template_type_1_0>static class::std::__1::__has_allocator_type::__two __test(...)
                                                                                                                     ^
                                                                                                                     ;
vec.cpp:6599:199: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,bool=__has_allocator_type<__xcodeml_template_type_0_0>::value>class __uses_allocator:public integral_constant<bool,expression>{}
                                                                                                                                                                                                      ^
vec.cpp:6604:185: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class uses_allocator:public __uses_allocator<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1,expression>{}
                                                                                                                                                                                        ^
vec.cpp:6607:173: error: expected a qualified name after 'typename'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __uses_alloc_ctor_imp{public:typedef typename __uncvref<__xcodeml_template_type_0_1>::type _RawAlloc;
                                                                                                                                                                            ^
vec.cpp:6607:182: error: expected member name or ';' after declaration specifiers
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __uses_alloc_ctor_imp{public:typedef typename __uncvref<__xcodeml_template_type_0_1>::type _RawAlloc;
                                                                                                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~^
vec.cpp:6608:83: error: expected a qualified name after 'typename'
public:static bool const __ua=uses_allocator<__xcodeml_template_type_0_0,typename __uncvref<__xcodeml_template_type_0_1>::type>::value;
                                                                                  ^
vec.cpp:6608:92: error: expected '>'
public:static bool const __ua=uses_allocator<__xcodeml_template_type_0_0,typename __uncvref<__xcodeml_template_type_0_1>::type>::value;
                                                                                           ^
vec.cpp:6608:93: error: '__xcodeml_template_type_0_1' does not refer to a value
public:static bool const __ua=uses_allocator<__xcodeml_template_type_0_0,typename __uncvref<__xcodeml_template_type_0_1>::type>::value;
                                                                                            ^
vec.cpp:6607:56: note: declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __uses_alloc_ctor_imp{public:typedef typename __uncvref<__xcodeml_template_type_0_1>::type _RawAlloc;
                                                       ^
vec.cpp:6608:130: error: no member named 'value' in the global namespace
public:static bool const __ua=uses_allocator<__xcodeml_template_type_0_0,typename __uncvref<__xcodeml_template_type_0_1>::type>::value;
                                                                                                                               ~~^
vec.cpp:6609:76: error: expected expression
public:static bool const __ic=is_constructible<__xcodeml_template_type_0_0,...>::value;
                                                                           ^
vec.cpp:6614:174: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __uses_alloc_ctor:public integral_constant<int,expression>{}
                                                                                                                                                                             ^
vec.cpp:6617:153: error: 'void' must be the first and only parameter if specified
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>void __user_alloc_construct_impl(class::std::__1::integral_constant<int,0>,__xcodeml_template_type_0_0(*__storage),__xcodeml_template_type_0_1 const&,void/*__args*/){new(__storage)__xcodeml_identity<__xcodeml_template_type_0_0>::t((std::__1::__xcodeml_template_type_0_2(__args)));
                                                                                                                                                        ^
vec.cpp:6617:301: error: missing 'typename' prior to dependent type name '__xcodeml_identity<__xcodeml_template_type_0_0>::t'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>void __user_alloc_construct_impl(class::std::__1::integral_constant<int,0>,__xcodeml_template_type_0_0(*__storage),__xcodeml_template_type_0_1 const&,void/*__args*/){new(__storage)__xcodeml_identity<__xcodeml_template_type_0_0>::t((std::__1::__xcodeml_template_type_0_2(__args)));
                                                                                                                                                                                                                                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                                                                                                                                                                                                                                                                                            typename 
vec.cpp:6617:363: error: no member named '__xcodeml_template_type_0_2' in namespace 'std::__1'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>void __user_alloc_construct_impl(class::std::__1::integral_constant<int,0>,__xcodeml_template_type_0_0(*__storage),__xcodeml_template_type_0_1 const&,void/*__args*/){new(__storage)__xcodeml_identity<__xcodeml_template_type_0_0>::t((std::__1::__xcodeml_template_type_0_2(__args)));
                                                                                                                                                                                                                                                                                                                                                                ~~~~~~~~~~^
vec.cpp:6617:391: error: use of undeclared identifier '__args'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>void __user_alloc_construct_impl(class::std::__1::integral_constant<int,0>,__xcodeml_template_type_0_0(*__storage),__xcodeml_template_type_0_1 const&,void/*__args*/){new(__storage)__xcodeml_identity<__xcodeml_template_type_0_0>::t((std::__1::__xcodeml_template_type_0_2(__args)));
                                                                                                                                                                                                                                                                                                                                                                                                      ^
vec.cpp:6619:153: error: 'void' must be the first and only parameter if specified
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>void __user_alloc_construct_impl(class::std::__1::integral_constant<int,1>,__xcodeml_template_type_0_0(*__storage),__xcodeml_template_type_0_1 const&__a,void/*__args*/){new(__storage)__xcodeml_identity<__xcodeml_template_type_0_0>::t(allocator_arg,__a,(std::__1::__xcodeml_template_type_0_2(__args)));
                                                                                                                                                        ^
vec.cpp:6619:304: error: missing 'typename' prior to dependent type name '__xcodeml_identity<__xcodeml_template_type_0_0>::t'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>void __user_alloc_construct_impl(class::std::__1::integral_constant<int,1>,__xcodeml_template_type_0_0(*__storage),__xcodeml_template_type_0_1 const&__a,void/*__args*/){new(__storage)__xcodeml_identity<__xcodeml_template_type_0_0>::t(allocator_arg,__a,(std::__1::__xcodeml_template_type_0_2(__args)));
                                                                                                                                                                                                                                                                                                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                                                                                                                                                                                                                                                                                               typename 
vec.cpp:6619:384: error: no member named '__xcodeml_template_type_0_2' in namespace 'std::__1'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>void __user_alloc_construct_impl(class::std::__1::integral_constant<int,1>,__xcodeml_template_type_0_0(*__storage),__xcodeml_template_type_0_1 const&__a,void/*__args*/){new(__storage)__xcodeml_identity<__xcodeml_template_type_0_0>::t(allocator_arg,__a,(std::__1::__xcodeml_template_type_0_2(__args)));
                                                                                                                                                                                                                                                                                                                                                                                     ~~~~~~~~~~^
vec.cpp:6619:412: error: use of undeclared identifier '__args'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>void __user_alloc_construct_impl(class::std::__1::integral_constant<int,1>,__xcodeml_template_type_0_0(*__storage),__xcodeml_template_type_0_1 const&__a,void/*__args*/){new(__storage)__xcodeml_identity<__xcodeml_template_type_0_0>::t(allocator_arg,__a,(std::__1::__xcodeml_template_type_0_2(__args)));
                                                                                                                                                                                                                                                                                                                                                                                                                           ^
vec.cpp:6621:153: error: 'void' must be the first and only parameter if specified
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>void __user_alloc_construct_impl(class::std::__1::integral_constant<int,2>,__xcodeml_template_type_0_0(*__storage),__xcodeml_template_type_0_1 const&__a,void/*__args*/){new(__storage)__xcodeml_identity<__xcodeml_template_type_0_0>::t((std::__1::__xcodeml_template_type_0_2(__args)),__a);
                                                                                                                                                        ^
vec.cpp:6621:304: error: missing 'typename' prior to dependent type name '__xcodeml_identity<__xcodeml_template_type_0_0>::t'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>void __user_alloc_construct_impl(class::std::__1::integral_constant<int,2>,__xcodeml_template_type_0_0(*__storage),__xcodeml_template_type_0_1 const&__a,void/*__args*/){new(__storage)__xcodeml_identity<__xcodeml_template_type_0_0>::t((std::__1::__xcodeml_template_type_0_2(__args)),__a);
                                                                                                                                                                                                                                                                                                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                                                                                                                                                                                                                                                                                               typename 
vec.cpp:6621:366: error: no member named '__xcodeml_template_type_0_2' in namespace 'std::__1'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>void __user_alloc_construct_impl(class::std::__1::integral_constant<int,2>,__xcodeml_template_type_0_0(*__storage),__xcodeml_template_type_0_1 const&__a,void/*__args*/){new(__storage)__xcodeml_identity<__xcodeml_template_type_0_0>::t((std::__1::__xcodeml_template_type_0_2(__args)),__a);
                                                                                                                                                                                                                                                                                                                                                                   ~~~~~~~~~~^
vec.cpp:6621:394: error: use of undeclared identifier '__args'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>void __user_alloc_construct_impl(class::std::__1::integral_constant<int,2>,__xcodeml_template_type_0_0(*__storage),__xcodeml_template_type_0_1 const&__a,void/*__args*/){new(__storage)__xcodeml_identity<__xcodeml_template_type_0_0>::t((std::__1::__xcodeml_template_type_0_2(__args)),__a);
                                                                                                                                                                                                                                                                                                                                                                                                         ^
vec.cpp:6640:79: error: '__has_iterator_typedefs' is not a class, namespace, or enumeration
private:template<typename __xcodeml_template_type_1_0>static class::std::__1::__has_iterator_typedefs::__two __test(...)
                                                                              ^
vec.cpp:6635:53: note: '__has_iterator_typedefs' declared here
template<typename __xcodeml_template_type_0_0>class __has_iterator_typedefs{private:
                                                    ^
vec.cpp:6640:121: error: expected ';' at end of declaration list
private:template<typename __xcodeml_template_type_1_0>static class::std::__1::__has_iterator_typedefs::__two __test(...)
                                                                                                                        ^
                                                                                                                        ;
vec.cpp:6652:79: error: '__has_iterator_category' is not a class, namespace, or enumeration
private:template<typename __xcodeml_template_type_1_0>static class::std::__1::__has_iterator_category::__two __test(...)
                                                                              ^
vec.cpp:6647:53: note: '__has_iterator_category' declared here
template<typename __xcodeml_template_type_0_0>class __has_iterator_category{private:
                                                    ^
vec.cpp:6652:121: error: expected ';' at end of declaration list
private:template<typename __xcodeml_template_type_1_0>static class::std::__1::__has_iterator_category::__two __test(...)
                                                                                                                        ^
                                                                                                                        ;
vec.cpp:6672:160: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>class __iterator_traits<__xcodeml_template_type_0_0,1>:public __iterator_traits_impl<__xcodeml_template_type_0_0,expression>{}
                                                                                                                                                               ^
vec.cpp:6674:122: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>class iterator_traits:public __iterator_traits<__xcodeml_template_type_0_0,expression>{}
                                                                                                                         ^
vec.cpp:6684:242: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,bool=__has_iterator_category<iterator_traits<__xcodeml_template_type_0_0> >::value>class __has_iterator_category_convertible_to:public integral_constant<bool,expression>{}
                                                                                                                                                                                                                                                 ^
vec.cpp:6689:183: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>class __is_input_iterator:public __has_iterator_category_convertible_to<__xcodeml_template_type_0_0,class::std::__1::input_iterator_tag,expression>{}
                                                                                                                                                                                      ^
vec.cpp:6692:187: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>class __is_forward_iterator:public __has_iterator_category_convertible_to<__xcodeml_template_type_0_0,class::std::__1::forward_iterator_tag,expression>{}
                                                                                                                                                                                          ^
vec.cpp:6695:199: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>class __is_bidirectional_iterator:public __has_iterator_category_convertible_to<__xcodeml_template_type_0_0,class::std::__1::bidirectional_iterator_tag,expression>{}
                                                                                                                                                                                                      ^
vec.cpp:6698:199: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>class __is_random_access_iterator:public __has_iterator_category_convertible_to<__xcodeml_template_type_0_0,class::std::__1::random_access_iterator_tag,expression>{}
                                                                                                                                                                                                      ^
vec.cpp:6701:111: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>class __is_exactly_input_iterator:public integral_constant<bool,expression>{}
                                                                                                              ^
vec.cpp:6735:66: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type next(__xcodeml_template_type_0_0 __x,typename iterator_traits<__xcodeml_template_type_0_0>::difference_type __n){((void)0);
                                                                 ^
vec.cpp:6735:107: error: definition or redeclaration of 'type' cannot name the global scope
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type next(__xcodeml_template_type_0_0 __x,typename iterator_traits<__xcodeml_template_type_0_0>::difference_type __n){((void)0);
                                                                                                        ~~^
vec.cpp:6735:111: error: expected ';' at end of declaration
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type next(__xcodeml_template_type_0_0 __x,typename iterator_traits<__xcodeml_template_type_0_0>::difference_type __n){((void)0);
                                                                                                              ^
                                                                                                              ;
vec.cpp:6735:117: error: unknown type name '__xcodeml_template_type_0_0'
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type next(__xcodeml_template_type_0_0 __x,typename iterator_traits<__xcodeml_template_type_0_0>::difference_type __n){((void)0);
                                                                                                                    ^
vec.cpp:6735:204: error: parameter declarator cannot be qualified
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type next(__xcodeml_template_type_0_0 __x,typename iterator_traits<__xcodeml_template_type_0_0>::difference_type __n){((void)0);
                                                                                                                                                                                                         ~~^
vec.cpp:6735:220: error: expected ')'
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type next(__xcodeml_template_type_0_0 __x,typename iterator_traits<__xcodeml_template_type_0_0>::difference_type __n){((void)0);
                                                                                                                                                                                                                           ^
vec.cpp:6735:116: note: to match this '('
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type next(__xcodeml_template_type_0_0 __x,typename iterator_traits<__xcodeml_template_type_0_0>::difference_type __n){((void)0);
                                                                                                                   ^
vec.cpp:6735:112: error: C++ requires a type specifier for all declarations
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type next(__xcodeml_template_type_0_0 __x,typename iterator_traits<__xcodeml_template_type_0_0>::difference_type __n){((void)0);
                                                                                                               ^
vec.cpp:6736:12: error: expected unqualified-id
(std::__1::(__x,__n));
           ^
vec.cpp:6736:17: error: use of undeclared identifier '__n'
(std::__1::(__x,__n));
                ^
vec.cpp:6739:66: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type prev(__xcodeml_template_type_0_0 __x,typename iterator_traits<__xcodeml_template_type_0_0>::difference_type __n){((void)0);
                                                                 ^
vec.cpp:6739:107: error: definition or redeclaration of 'type' cannot name the global scope
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type prev(__xcodeml_template_type_0_0 __x,typename iterator_traits<__xcodeml_template_type_0_0>::difference_type __n){((void)0);
                                                                                                        ~~^
vec.cpp:6739:111: error: expected ';' at end of declaration
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type prev(__xcodeml_template_type_0_0 __x,typename iterator_traits<__xcodeml_template_type_0_0>::difference_type __n){((void)0);
                                                                                                              ^
                                                                                                              ;
vec.cpp:6739:117: error: unknown type name '__xcodeml_template_type_0_0'
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type prev(__xcodeml_template_type_0_0 __x,typename iterator_traits<__xcodeml_template_type_0_0>::difference_type __n){((void)0);
                                                                                                                    ^
vec.cpp:6739:204: error: parameter declarator cannot be qualified
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type prev(__xcodeml_template_type_0_0 __x,typename iterator_traits<__xcodeml_template_type_0_0>::difference_type __n){((void)0);
                                                                                                                                                                                                         ~~^
vec.cpp:6739:220: error: expected ')'
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type prev(__xcodeml_template_type_0_0 __x,typename iterator_traits<__xcodeml_template_type_0_0>::difference_type __n){((void)0);
                                                                                                                                                                                                                           ^
vec.cpp:6739:116: note: to match this '('
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type prev(__xcodeml_template_type_0_0 __x,typename iterator_traits<__xcodeml_template_type_0_0>::difference_type __n){((void)0);
                                                                                                                   ^
vec.cpp:6739:112: error: C++ requires a type specifier for all declarations
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type prev(__xcodeml_template_type_0_0 __x,typename iterator_traits<__xcodeml_template_type_0_0>::difference_type __n){((void)0);
                                                                                                               ^
vec.cpp:6740:12: error: expected unqualified-id
(std::__1::(__x,(-__n)));
           ^
vec.cpp:6740:19: error: use of undeclared identifier '__n'
(std::__1::(__x,(-__n)));
                  ^
vec.cpp:6762:123: error: use of undeclared identifier '__u'
public:template<typename __xcodeml_template_type_1_0>reverse_iterator(reverse_iterator<__xcodeml_template_type_1_0>):__t((__u.base())),current((__u.base())){}
                                                                                                                          ^
vec.cpp:6762:145: error: use of undeclared identifier '__u'
public:template<typename __xcodeml_template_type_1_0>reverse_iterator(reverse_iterator<__xcodeml_template_type_1_0>):__t((__u.base())),current((__u.base())){}
                                                                                                                                                ^
vec.cpp:6763:161: error: use of undeclared identifier '__u'
public:template<typename __xcodeml_template_type_1_0>class reverse_iterator&operator=(reverse_iterator<__xcodeml_template_type_1_0>){(this->__t=(this->current=(__u.base())));
                                                                                                                                                                ^
vec.cpp:6771:106: error: expected unqualified-id
public:typename iterator_traits<__xcodeml_template_type_0_0>::pointer operator->()const{return(std::__1::((this->operator*())));
                                                                                                         ^
vec.cpp:6801:17: error: template 'reverse_iterator' cannot be referenced with a class specifier
template<>class reverse_iterator template<>class reverse_iterator;
                ^
vec.cpp:6748:53: note: declared here
template<typename __xcodeml_template_type_0_0>class reverse_iterator:public iterator<typename iterator_traits<__xcodeml_template_type_0_0>::iterator_category,typename iterator_traits<__xcodeml_template_type_0_0>::value_type,typename iterator_traits<__xcodeml_template_type_0_0>::difference_type,typename iterator_traits<__xcodeml_template_type_0_0>::pointer,typename iterator_traits<__xcodeml_template_type_0_0>::reference>{private:
                                                    ^
vec.cpp:6801:34: error: expected unqualified-id
template<>class reverse_iterator template<>class reverse_iterator;
                                 ^
vec.cpp:6802:201: error: use of undeclared identifier '__x'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator==(reverse_iterator<__xcodeml_template_type_0_0>,reverse_iterator<__xcodeml_template_type_0_1>){return((__x.base()),(__y.base()));
                                                                                                                                                                                                        ^
vec.cpp:6802:214: error: use of undeclared identifier '__y'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator==(reverse_iterator<__xcodeml_template_type_0_0>,reverse_iterator<__xcodeml_template_type_0_1>){return((__x.base()),(__y.base()));
                                                                                                                                                                                                                     ^
vec.cpp:6804:200: error: use of undeclared identifier '__x'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator<(reverse_iterator<__xcodeml_template_type_0_0>,reverse_iterator<__xcodeml_template_type_0_1>){return((__x.base()),(__y.base()));
                                                                                                                                                                                                       ^
vec.cpp:6804:213: error: use of undeclared identifier '__y'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator<(reverse_iterator<__xcodeml_template_type_0_0>,reverse_iterator<__xcodeml_template_type_0_1>){return((__x.base()),(__y.base()));
                                                                                                                                                                                                                    ^
vec.cpp:6806:201: error: use of undeclared identifier '__x'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator!=(reverse_iterator<__xcodeml_template_type_0_0>,reverse_iterator<__xcodeml_template_type_0_1>){return((__x.base()),(__y.base()));
                                                                                                                                                                                                        ^
vec.cpp:6806:214: error: use of undeclared identifier '__y'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator!=(reverse_iterator<__xcodeml_template_type_0_0>,reverse_iterator<__xcodeml_template_type_0_1>){return((__x.base()),(__y.base()));
                                                                                                                                                                                                                     ^
vec.cpp:6808:200: error: use of undeclared identifier '__x'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator>(reverse_iterator<__xcodeml_template_type_0_0>,reverse_iterator<__xcodeml_template_type_0_1>){return((__x.base()),(__y.base()));
                                                                                                                                                                                                       ^
vec.cpp:6808:213: error: use of undeclared identifier '__y'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator>(reverse_iterator<__xcodeml_template_type_0_0>,reverse_iterator<__xcodeml_template_type_0_1>){return((__x.base()),(__y.base()));
                                                                                                                                                                                                                    ^
vec.cpp:6810:201: error: use of undeclared identifier '__x'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator>=(reverse_iterator<__xcodeml_template_type_0_0>,reverse_iterator<__xcodeml_template_type_0_1>){return((__x.base()),(__y.base()));
                                                                                                                                                                                                        ^
vec.cpp:6810:214: error: use of undeclared identifier '__y'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator>=(reverse_iterator<__xcodeml_template_type_0_0>,reverse_iterator<__xcodeml_template_type_0_1>){return((__x.base()),(__y.base()));
                                                                                                                                                                                                                     ^
vec.cpp:6812:201: error: use of undeclared identifier '__x'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator<=(reverse_iterator<__xcodeml_template_type_0_0>,reverse_iterator<__xcodeml_template_type_0_1>){return((__x.base()),(__y.base()));
                                                                                                                                                                                                        ^
vec.cpp:6812:214: error: use of undeclared identifier '__y'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator<=(reverse_iterator<__xcodeml_template_type_0_0>,reverse_iterator<__xcodeml_template_type_0_1>){return((__x.base()),(__y.base()));
                                                                                                                                                                                                                     ^
vec.cpp:6814:149: error: expected '(' for function-style cast or type construction
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>decltype (operator-(reverse_iterator<__xcodeml_template_type_0_0>,reverse_iterator<__xcodeml_template_type_0_1>)){return((__y.base()),(__x.base()));
                                                                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
vec.cpp:6814:195: error: expected '(' for function-style cast or type construction
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>decltype (operator-(reverse_iterator<__xcodeml_template_type_0_0>,reverse_iterator<__xcodeml_template_type_0_1>)){return((__y.base()),(__x.base()));
                                                                                                                                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
vec.cpp:6814:197: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>decltype (operator-(reverse_iterator<__xcodeml_template_type_0_0>,reverse_iterator<__xcodeml_template_type_0_1>)){return((__y.base()),(__x.base()));
                                                                                                                                                                                                    ^
vec.cpp:6840:47: error: no template named 'back_insert_iterator'
template<typename __xcodeml_template_type_0_0>back_insert_iterator<__xcodeml_template_type_0_0>{return __xcodeml_identity<back_insert_iterator<__xcodeml_template_type_0_0> >::t(__x);
                                              ^
vec.cpp:6840:96: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0>back_insert_iterator<__xcodeml_template_type_0_0>{return __xcodeml_identity<back_insert_iterator<__xcodeml_template_type_0_0> >::t(__x);
                                                                                               ^
vec.cpp:6862:47: error: no template named 'front_insert_iterator'
template<typename __xcodeml_template_type_0_0>front_insert_iterator<__xcodeml_template_type_0_0>{return __xcodeml_identity<front_insert_iterator<__xcodeml_template_type_0_0> >::t(__x);
                                              ^
vec.cpp:6862:97: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0>front_insert_iterator<__xcodeml_template_type_0_0>{return __xcodeml_identity<front_insert_iterator<__xcodeml_template_type_0_0> >::t(__x);
                                                                                                ^
vec.cpp:6887:47: error: no template named 'insert_iterator'
template<typename __xcodeml_template_type_0_0>insert_iterator<__xcodeml_template_type_0_0>{return __xcodeml_identity<insert_iterator<__xcodeml_template_type_0_0> >::t(__x,__i);
                                              ^
vec.cpp:6887:91: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0>insert_iterator<__xcodeml_template_type_0_0>{return __xcodeml_identity<insert_iterator<__xcodeml_template_type_0_0> >::t(__x,__i);
                                                                                          ^
vec.cpp:6916:174: error: no template named 'istream_iterator'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3>bool operator==(istream_iterator<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1,__xcodeml_template_type_0_2,__xcodeml_template_type_0_3>,istream_iterator<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1,__xcodeml_template_type_0_2,__xcodeml_template_type_0_3>){return(__x.__in_stream_,__y.__in_stream_);
                                                                                                                                                                             ^
vec.cpp:6916:304: error: no template named 'istream_iterator'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3>bool operator==(istream_iterator<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1,__xcodeml_template_type_0_2,__xcodeml_template_type_0_3>,istream_iterator<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1,__xcodeml_template_type_0_2,__xcodeml_template_type_0_3>){return(__x.__in_stream_,__y.__in_stream_);
                                                                                                                                                                                                                                                                                                               ^
vec.cpp:6916:442: error: use of undeclared identifier '__x'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3>bool operator==(istream_iterator<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1,__xcodeml_template_type_0_2,__xcodeml_template_type_0_3>,istream_iterator<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1,__xcodeml_template_type_0_2,__xcodeml_template_type_0_3>){return(__x.__in_stream_,__y.__in_stream_);
                                                                                                                                                                                                                                                                                                                                                                                                                                                         ^
vec.cpp:6916:459: error: use of undeclared identifier '__y'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3>bool operator==(istream_iterator<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1,__xcodeml_template_type_0_2,__xcodeml_template_type_0_3>,istream_iterator<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1,__xcodeml_template_type_0_2,__xcodeml_template_type_0_3>){return(__x.__in_stream_,__y.__in_stream_);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                          ^
vec.cpp:6918:174: error: no template named 'istream_iterator'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3>bool operator!=(istream_iterator<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1,__xcodeml_template_type_0_2,__xcodeml_template_type_0_3>,istream_iterator<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1,__xcodeml_template_type_0_2,__xcodeml_template_type_0_3>){return(!(__x,__y));
                                                                                                                                                                             ^
vec.cpp:6918:304: error: no template named 'istream_iterator'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3>bool operator!=(istream_iterator<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1,__xcodeml_template_type_0_2,__xcodeml_template_type_0_3>,istream_iterator<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1,__xcodeml_template_type_0_2,__xcodeml_template_type_0_3>){return(!(__x,__y));
                                                                                                                                                                                                                                                                                                               ^
vec.cpp:6918:444: error: use of undeclared identifier '__x'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3>bool operator!=(istream_iterator<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1,__xcodeml_template_type_0_2,__xcodeml_template_type_0_3>,istream_iterator<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1,__xcodeml_template_type_0_2,__xcodeml_template_type_0_3>){return(!(__x,__y));
                                                                                                                                                                                                                                                                                                                                                                                                                                                           ^
vec.cpp:6918:448: error: use of undeclared identifier '__y'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3>bool operator!=(istream_iterator<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1,__xcodeml_template_type_0_2,__xcodeml_template_type_0_3>,istream_iterator<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1,__xcodeml_template_type_0_2,__xcodeml_template_type_0_3>){return(!(__x,__y));
                                                                                                                                                                                                                                                                                                                                                                                                                                                               ^
vec.cpp:6923:8: warning: typedef requires a name [-Wmissing-declarations]
public:typedef basic_ostream<__xcodeml_template_type_0_1,__xcodeml_template_type_0_2>;
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:6925:9: warning: declaration does not declare anything [-Wmissing-declarations]
private:basic_ostream<__xcodeml_template_type_0_1,__xcodeml_template_type_0_2>;
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:6928:122: error: expected unqualified-id
public:ostream_iterator(basic_ostream<__xcodeml_template_type_0_1,__xcodeml_template_type_0_2>):__out_stream_((std::__1::(__s))),__delim_(0){}
                                                                                                                         ^
vec.cpp:6928:123: error: use of undeclared identifier '__s'
public:ostream_iterator(basic_ostream<__xcodeml_template_type_0_1,__xcodeml_template_type_0_2>):__out_stream_((std::__1::(__s))),__delim_(0){}
                                                                                                                          ^
vec.cpp:6929:170: error: expected unqualified-id
public:ostream_iterator(basic_ostream<__xcodeml_template_type_0_1,__xcodeml_template_type_0_2>,__xcodeml_template_type_0_1 const(*__delimiter)):__out_stream_((std::__1::(__s))),__delim_(__delimiter){}
                                                                                                                                                                         ^
vec.cpp:6929:171: error: use of undeclared identifier '__s'
public:ostream_iterator(basic_ostream<__xcodeml_template_type_0_1,__xcodeml_template_type_0_2>,__xcodeml_template_type_0_1 const(*__delimiter)):__out_stream_((std::__1::(__s))),__delim_(__delimiter){}
                                                                                                                                                                          ^
vec.cpp:6947:8: warning: typedef requires a name [-Wmissing-declarations]
public:typedef basic_streambuf<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>;
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:6948:8: warning: typedef requires a name [-Wmissing-declarations]
public:typedef basic_istream<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>;
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:6950:9: warning: declaration does not declare anything [-Wmissing-declarations]
private:basic_streambuf<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>;
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:6952:9: warning: declaration does not declare anything [-Wmissing-declarations]
private:basic_streambuf<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>;
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:6973:25: error: 'istreambuf_iterator' is not a class, namespace, or enumeration
public:class::std::__1::istreambuf_iterator::__proxy operator++(int){return __xcodeml_identity<class::std::__1::istreambuf_iterator::__proxy>::t((this->__sbuf_.sbumpc()),this->__sbuf_);
                        ^
vec.cpp:6943:90: note: 'istreambuf_iterator' declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class istreambuf_iterator:public iterator<class::std::__1::input_iterator_tag,__xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1::off_type,__xcodeml_template_type_0_0(*),__xcodeml_template_type_0_0>{public:
                                                                                         ^
vec.cpp:6953:144: error: use of undeclared identifier '__s'
private:__proxy(__xcodeml_template_type_0_0 __c,basic_streambuf<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>):__keep_(__c),__sbuf_(__s){}
                                                                                                                                               ^
vec.cpp:6960:85: error: expected unqualified-id
private:bool __test_for_eof()const{if((this->__sbuf_&&(__xcodeml_template_type_0_1::.eq_int_type((this->__sbuf_.sgetc()),(__xcodeml_template_type_0_1::.eof()))))){(this->__sbuf_=0);};
                                                                                    ^
vec.cpp:6960:152: error: expected unqualified-id
private:bool __test_for_eof()const{if((this->__sbuf_&&(__xcodeml_template_type_0_1::.eq_int_type((this->__sbuf_.sgetc()),(__xcodeml_template_type_0_1::.eof()))))){(this->__sbuf_=0);};
                                                                                                                                                       ^
vec.cpp:6964:30: error: member initializer '__sbuf_' does not name a non-static data member or base class
public:istreambuf_iterator():__sbuf_(0){}
                             ^~~~~~~~~~
vec.cpp:6965:109: error: use of undeclared identifier '__s'
public:istreambuf_iterator(basic_istream<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>):__sbuf_((__s.rdbuf())){}
                                                                                                            ^
vec.cpp:6966:110: error: use of undeclared identifier '__s'
public:istreambuf_iterator(basic_streambuf<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>):__sbuf_(__s){}
                                                                                                             ^
vec.cpp:6967:53: error: member initializer '__sbuf_' does not name a non-static data member or base class
public:istreambuf_iterator(class __proxy const&__p):__sbuf_(__p.__sbuf_){}
                                                    ^~~~~~~~~~~~~~~~~~~~
vec.cpp:6973:113: error: 'istreambuf_iterator' is not a class, namespace, or enumeration
public:class::std::__1::istreambuf_iterator::__proxy operator++(int){return __xcodeml_identity<class::std::__1::istreambuf_iterator::__proxy>::t((this->__sbuf_.sbumpc()),this->__sbuf_);
                                                                                                                ^
vec.cpp:6943:90: note: 'istreambuf_iterator' declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class istreambuf_iterator:public iterator<class::std::__1::input_iterator_tag,__xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1::off_type,__xcodeml_template_type_0_0(*),__xcodeml_template_type_0_0>{public:
                                                                                         ^
vec.cpp:6980:262: error: use of undeclared identifier '__a'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator==(istreambuf_iterator<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>,istreambuf_iterator<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>){return(__a.equal(__b));
                                                                                                                                                                                                                                                                     ^
vec.cpp:6980:272: error: use of undeclared identifier '__b'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator==(istreambuf_iterator<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>,istreambuf_iterator<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>){return(__a.equal(__b));
                                                                                                                                                                                                                                                                               ^
vec.cpp:6982:264: error: use of undeclared identifier '__a'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator!=(istreambuf_iterator<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>,istreambuf_iterator<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>){return(!(__a.equal(__b)));
                                                                                                                                                                                                                                                                       ^
vec.cpp:6982:274: error: use of undeclared identifier '__b'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator!=(istreambuf_iterator<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>,istreambuf_iterator<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>){return(!(__a.equal(__b)));
                                                                                                                                                                                                                                                                                 ^
vec.cpp:6987:8: warning: typedef requires a name [-Wmissing-declarations]
public:typedef basic_streambuf<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>;
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:6988:8: warning: typedef requires a name [-Wmissing-declarations]
public:typedef basic_ostream<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>;
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:6990:9: warning: declaration does not declare anything [-Wmissing-declarations]
private:basic_streambuf<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>;
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:7005:15: error: expected member name or ';' after declaration specifiers
public:friend template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1>ostreambuf_iterator<__xcodeml_template_type_1_0,__xcodeml_template_type_1_1>;
              ^
vec.cpp:6992:109: error: use of undeclared identifier '__s'
public:ostreambuf_iterator(basic_ostream<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>):__sbuf_((__s.rdbuf())){}
                                                                                                            ^
vec.cpp:6993:110: error: use of undeclared identifier '__s'
public:ostreambuf_iterator(basic_streambuf<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>):__sbuf_(__s){}
                                                                                                             ^
vec.cpp:6994:126: error: expected unqualified-id
public:class ostreambuf_iterator&operator=(__xcodeml_template_type_0_0 __c){if((this->__sbuf_&&(__xcodeml_template_type_0_1::.eq_int_type((this->__sbuf_.sputc(__c)),(__xcodeml_template_type_0_1::.eof()))))){(this->__sbuf_=0);};
                                                                                                                             ^
vec.cpp:6994:196: error: expected unqualified-id
public:class ostreambuf_iterator&operator=(__xcodeml_template_type_0_0 __c){if((this->__sbuf_&&(__xcodeml_template_type_0_1::.eq_int_type((this->__sbuf_.sputc(__c)),(__xcodeml_template_type_0_1::.eof()))))){(this->__sbuf_=0);};
                                                                                                                                                                                                   ^
vec.cpp:7018:37: error: use of undeclared identifier 'expression'
public:typedef typename conditional<expression,typename remove_reference<typename iterator_traits<__xcodeml_template_type_0_0>::reference>::type(*),typename iterator_traits<__xcodeml_template_type_0_0>::reference>::type reference;
                                    ^
vec.cpp:7018:129: error: non-friend class member 'reference' cannot have a qualified name
public:typedef typename conditional<expression,typename remove_reference<typename iterator_traits<__xcodeml_template_type_0_0>::reference>::type(*),typename iterator_traits<__xcodeml_template_type_0_0>::reference>::type reference;
                                                                                                                              ~~^
vec.cpp:7018:129: error: typedef declarator cannot be qualified
public:typedef typename conditional<expression,typename remove_reference<typename iterator_traits<__xcodeml_template_type_0_0>::reference>::type(*),typename iterator_traits<__xcodeml_template_type_0_0>::reference>::type reference;
                                                                                                                              ~~^
vec.cpp:7018:138: error: expected ';' at end of declaration list
public:typedef typename conditional<expression,typename remove_reference<typename iterator_traits<__xcodeml_template_type_0_0>::reference>::type(*),typename iterator_traits<__xcodeml_template_type_0_0>::reference>::type reference;
                                                                                                                                         ^
                                                                                                                                         ;
vec.cpp:7024:29: error: use of undeclared identifier 'expression'
public:typename conditional<expression,typename remove_reference<typename iterator_traits<__xcodeml_template_type_0_0>::reference>::type(*),typename iterator_traits<__xcodeml_template_type_0_0>::reference>::type operator*()const{return static_cast<typename conditional<expression,typename remove_reference<typename iterator_traits<__xcodeml_template_type_0_0>::reference>::type(*),typename iterator_traits<__xcodeml_template_type_0_0>::reference>::type>((*this->__i));
                            ^
vec.cpp:7024:121: error: non-friend class member 'reference' cannot have a qualified name
public:typename conditional<expression,typename remove_reference<typename iterator_traits<__xcodeml_template_type_0_0>::reference>::type(*),typename iterator_traits<__xcodeml_template_type_0_0>::reference>::type operator*()const{return static_cast<typename conditional<expression,typename remove_reference<typename iterator_traits<__xcodeml_template_type_0_0>::reference>::type(*),typename iterator_traits<__xcodeml_template_type_0_0>::reference>::type>((*this->__i));
                                                                                                                      ~~^
vec.cpp:7024:121: error: duplicate member 'reference'
vec.cpp:7018:129: note: previous declaration is here
public:typedef typename conditional<expression,typename remove_reference<typename iterator_traits<__xcodeml_template_type_0_0>::reference>::type(*),typename iterator_traits<__xcodeml_template_type_0_0>::reference>::type reference;
                                                                                                                                ^
vec.cpp:7024:130: error: expected ';' at end of declaration list
public:typename conditional<expression,typename remove_reference<typename iterator_traits<__xcodeml_template_type_0_0>::reference>::type(*),typename iterator_traits<__xcodeml_template_type_0_0>::reference>::type operator*()const{return static_cast<typename conditional<expression,typename remove_reference<typename iterator_traits<__xcodeml_template_type_0_0>::reference>::type(*),typename iterator_traits<__xcodeml_template_type_0_0>::reference>::type>((*this->__i));
                                                                                                                                 ^
                                                                                                                                 ;
vec.cpp:7021:117: error: use of undeclared identifier '__u'
public:template<typename __xcodeml_template_type_1_0>move_iterator(move_iterator<__xcodeml_template_type_1_0>):__i((__u.base())){}
                                                                                                                    ^
vec.cpp:7057:195: error: use of undeclared identifier '__x'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator==(move_iterator<__xcodeml_template_type_0_0>,move_iterator<__xcodeml_template_type_0_1>){return((__x.base()),(__y.base()));
                                                                                                                                                                                                  ^
vec.cpp:7057:208: error: use of undeclared identifier '__y'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator==(move_iterator<__xcodeml_template_type_0_0>,move_iterator<__xcodeml_template_type_0_1>){return((__x.base()),(__y.base()));
                                                                                                                                                                                                               ^
vec.cpp:7059:194: error: use of undeclared identifier '__x'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator<(move_iterator<__xcodeml_template_type_0_0>,move_iterator<__xcodeml_template_type_0_1>){return((__x.base()),(__y.base()));
                                                                                                                                                                                                 ^
vec.cpp:7059:207: error: use of undeclared identifier '__y'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator<(move_iterator<__xcodeml_template_type_0_0>,move_iterator<__xcodeml_template_type_0_1>){return((__x.base()),(__y.base()));
                                                                                                                                                                                                              ^
vec.cpp:7061:195: error: use of undeclared identifier '__x'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator!=(move_iterator<__xcodeml_template_type_0_0>,move_iterator<__xcodeml_template_type_0_1>){return((__x.base()),(__y.base()));
                                                                                                                                                                                                  ^
vec.cpp:7061:208: error: use of undeclared identifier '__y'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator!=(move_iterator<__xcodeml_template_type_0_0>,move_iterator<__xcodeml_template_type_0_1>){return((__x.base()),(__y.base()));
                                                                                                                                                                                                               ^
vec.cpp:7063:194: error: use of undeclared identifier '__x'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator>(move_iterator<__xcodeml_template_type_0_0>,move_iterator<__xcodeml_template_type_0_1>){return((__x.base()),(__y.base()));
                                                                                                                                                                                                 ^
vec.cpp:7063:207: error: use of undeclared identifier '__y'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator>(move_iterator<__xcodeml_template_type_0_0>,move_iterator<__xcodeml_template_type_0_1>){return((__x.base()),(__y.base()));
                                                                                                                                                                                                              ^
vec.cpp:7065:195: error: use of undeclared identifier '__x'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator>=(move_iterator<__xcodeml_template_type_0_0>,move_iterator<__xcodeml_template_type_0_1>){return((__x.base()),(__y.base()));
                                                                                                                                                                                                  ^
vec.cpp:7065:208: error: use of undeclared identifier '__y'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator>=(move_iterator<__xcodeml_template_type_0_0>,move_iterator<__xcodeml_template_type_0_1>){return((__x.base()),(__y.base()));
                                                                                                                                                                                                               ^
vec.cpp:7067:195: error: use of undeclared identifier '__x'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator<=(move_iterator<__xcodeml_template_type_0_0>,move_iterator<__xcodeml_template_type_0_1>){return((__x.base()),(__y.base()));
                                                                                                                                                                                                  ^
vec.cpp:7067:208: error: use of undeclared identifier '__y'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator<=(move_iterator<__xcodeml_template_type_0_0>,move_iterator<__xcodeml_template_type_0_1>){return((__x.base()),(__y.base()));
                                                                                                                                                                                                               ^
vec.cpp:7069:146: error: expected '(' for function-style cast or type construction
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>decltype (operator-(move_iterator<__xcodeml_template_type_0_0>,move_iterator<__xcodeml_template_type_0_1>)){return((__x.base()),(__y.base()));
                                                                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
vec.cpp:7069:189: error: expected '(' for function-style cast or type construction
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>decltype (operator-(move_iterator<__xcodeml_template_type_0_0>,move_iterator<__xcodeml_template_type_0_1>)){return((__x.base()),(__y.base()));
                                                                                                                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
vec.cpp:7069:191: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>decltype (operator-(move_iterator<__xcodeml_template_type_0_0>,move_iterator<__xcodeml_template_type_0_1>)){return((__x.base()),(__y.base()));
                                                                                                                                                                                              ^
vec.cpp:7076:29: error: expected unqualified-id
template<>class __wrap_iter template<>class __wrap_iter;
                            ^
vec.cpp:7077:111: error: expected ')'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator==(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>)
                                                                                                              ^
vec.cpp:7077:99: note: to match this '('
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator==(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>)
                                                                                                  ^
vec.cpp:7077:89: error: overloaded 'operator==' must be a binary operator (has 1 parameter)
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator==(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>)
                                                                                        ^
vec.cpp:7077:182: error: expected ';' at end of declaration
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator==(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>)
                                                                                                                                                                                     ^
                                                                                                                                                                                     ;
vec.cpp:7078:110: error: expected ')'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator<(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>)
                                                                                                             ^
vec.cpp:7078:98: note: to match this '('
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator<(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>)
                                                                                                 ^
vec.cpp:7078:89: error: overloaded 'operator<' must be a binary operator (has 1 parameter)
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator<(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>)
                                                                                        ^
vec.cpp:7078:181: error: expected ';' at end of declaration
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator<(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>)
                                                                                                                                                                                    ^
                                                                                                                                                                                    ;
vec.cpp:7079:111: error: expected ')'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator!=(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>)
                                                                                                              ^
vec.cpp:7079:99: note: to match this '('
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator!=(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>)
                                                                                                  ^
vec.cpp:7079:89: error: overloaded 'operator!=' must be a binary operator (has 1 parameter)
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator!=(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>)
                                                                                        ^
vec.cpp:7079:182: error: expected ';' at end of declaration
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator!=(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>)
                                                                                                                                                                                     ^
                                                                                                                                                                                     ;
vec.cpp:7080:110: error: expected ')'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator>(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>)
                                                                                                             ^
vec.cpp:7080:98: note: to match this '('
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator>(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>)
                                                                                                 ^
vec.cpp:7080:89: error: overloaded 'operator>' must be a binary operator (has 1 parameter)
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator>(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>)
                                                                                        ^
vec.cpp:7080:181: error: expected ';' at end of declaration
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator>(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>)
                                                                                                                                                                                    ^
                                                                                                                                                                                    ;
vec.cpp:7081:111: error: expected ')'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator>=(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>)
                                                                                                              ^
vec.cpp:7081:99: note: to match this '('
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator>=(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>)
                                                                                                  ^
vec.cpp:7081:89: error: overloaded 'operator>=' must be a binary operator (has 1 parameter)
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator>=(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>)
                                                                                        ^
vec.cpp:7081:182: error: expected ';' at end of declaration
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator>=(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>)
                                                                                                                                                                                     ^
                                                                                                                                                                                     ;
vec.cpp:7082:111: error: expected ')'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator<=(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>)
                                                                                                              ^
vec.cpp:7082:99: note: to match this '('
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator<=(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>)
                                                                                                  ^
vec.cpp:7082:89: error: overloaded 'operator<=' must be a binary operator (has 1 parameter)
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator<=(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>)
                                                                                        ^
vec.cpp:7082:182: error: expected ';' at end of declaration
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator<=(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>)
                                                                                                                                                                                     ^
                                                                                                                                                                                     ;
vec.cpp:7083:115: error: expected '(' for function-style cast or type construction
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>decltype (operator-(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>))
                                                                                                       ~~~~~~~~~~~^
vec.cpp:7083:116: error: '__xcodeml_template_type_0_0' does not refer to a value
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>decltype (operator-(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>))
                                                                                                                   ^
vec.cpp:7083:19: note: declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>decltype (operator-(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>))
                  ^
vec.cpp:7083:144: error: expected expression
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>decltype (operator-(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>))
                                                                                                                                               ^
vec.cpp:7083:156: error: expected '(' for function-style cast or type construction
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>decltype (operator-(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>))
                                                                                                                                                ~~~~~~~~~~~^
vec.cpp:7083:157: error: '__xcodeml_template_type_0_1' does not refer to a value
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>decltype (operator-(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>))
                                                                                                                                                            ^
vec.cpp:7083:56: note: declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>decltype (operator-(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>))
                                                       ^
vec.cpp:7083:185: error: expected expression
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>decltype (operator-(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>))
                                                                                                                                                                                        ^
vec.cpp:7084:1: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0>__wrap_iter<__xcodeml_template_type_0_0>
^
vec.cpp:7162:111: error: expected ')'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator==(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>){return((__x.base()),(__y.base()));
                                                                                                              ^
vec.cpp:7162:99: note: to match this '('
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator==(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>){return((__x.base()),(__y.base()));
                                                                                                  ^
vec.cpp:7162:89: error: overloaded 'operator==' must be a binary operator (has 1 parameter)
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator==(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>){return((__x.base()),(__y.base()));
                                                                                        ^
vec.cpp:7162:111: error: variable has incomplete type 'std::__1::__wrap_iter'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator==(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>){return((__x.base()),(__y.base()));
                                                                                                              ^
vec.cpp:7076:17: note: forward declaration of 'std::__1::__wrap_iter'
template<>class __wrap_iter template<>class __wrap_iter;
                ^
vec.cpp:7162:191: error: use of undeclared identifier '__x'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator==(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>){return((__x.base()),(__y.base()));
                                                                                                                                                                                              ^
vec.cpp:7162:204: error: use of undeclared identifier '__y'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator==(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>){return((__x.base()),(__y.base()));
                                                                                                                                                                                                           ^
vec.cpp:7164:110: error: expected ')'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator<(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>){return((__x.base()),(__y.base()));
                                                                                                             ^
vec.cpp:7164:98: note: to match this '('
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator<(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>){return((__x.base()),(__y.base()));
                                                                                                 ^
vec.cpp:7164:89: error: overloaded 'operator<' must be a binary operator (has 1 parameter)
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator<(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>){return((__x.base()),(__y.base()));
                                                                                        ^
vec.cpp:7164:110: error: variable has incomplete type 'std::__1::__wrap_iter'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator<(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>){return((__x.base()),(__y.base()));
                                                                                                             ^
vec.cpp:7076:17: note: forward declaration of 'std::__1::__wrap_iter'
template<>class __wrap_iter template<>class __wrap_iter;
                ^
vec.cpp:7164:190: error: use of undeclared identifier '__x'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator<(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>){return((__x.base()),(__y.base()));
                                                                                                                                                                                             ^
vec.cpp:7164:203: error: use of undeclared identifier '__y'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator<(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>){return((__x.base()),(__y.base()));
                                                                                                                                                                                                          ^
vec.cpp:7166:111: error: expected ')'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator!=(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>){return(!(__x,__y));
                                                                                                              ^
vec.cpp:7166:99: note: to match this '('
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator!=(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>){return(!(__x,__y));
                                                                                                  ^
vec.cpp:7166:89: error: overloaded 'operator!=' must be a binary operator (has 1 parameter)
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator!=(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>){return(!(__x,__y));
                                                                                        ^
vec.cpp:7166:111: error: variable has incomplete type 'std::__1::__wrap_iter'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator!=(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>){return(!(__x,__y));
                                                                                                              ^
vec.cpp:7076:17: note: forward declaration of 'std::__1::__wrap_iter'
template<>class __wrap_iter template<>class __wrap_iter;
                ^
vec.cpp:7166:192: error: use of undeclared identifier '__x'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator!=(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>){return(!(__x,__y));
                                                                                                                                                                                               ^
vec.cpp:7166:196: error: use of undeclared identifier '__y'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator!=(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>){return(!(__x,__y));
                                                                                                                                                                                                   ^
vec.cpp:7168:110: error: expected ')'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator>(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>){return(__y,__x);
                                                                                                             ^
vec.cpp:7168:98: note: to match this '('
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator>(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>){return(__y,__x);
                                                                                                 ^
vec.cpp:7168:89: error: overloaded 'operator>' must be a binary operator (has 1 parameter)
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator>(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>){return(__y,__x);
                                                                                        ^
vec.cpp:7168:110: error: variable has incomplete type 'std::__1::__wrap_iter'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator>(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>){return(__y,__x);
                                                                                                             ^
vec.cpp:7076:17: note: forward declaration of 'std::__1::__wrap_iter'
template<>class __wrap_iter template<>class __wrap_iter;
                ^
vec.cpp:7168:189: error: use of undeclared identifier '__y'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator>(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>){return(__y,__x);
                                                                                                                                                                                            ^
vec.cpp:7168:193: error: use of undeclared identifier '__x'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator>(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>){return(__y,__x);
                                                                                                                                                                                                ^
vec.cpp:7170:111: error: expected ')'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator>=(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>){return(!(__x,__y));
                                                                                                              ^
vec.cpp:7170:99: note: to match this '('
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator>=(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>){return(!(__x,__y));
                                                                                                  ^
vec.cpp:7170:89: error: overloaded 'operator>=' must be a binary operator (has 1 parameter)
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator>=(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>){return(!(__x,__y));
                                                                                        ^
vec.cpp:7170:111: error: variable has incomplete type 'std::__1::__wrap_iter'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator>=(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>){return(!(__x,__y));
                                                                                                              ^
vec.cpp:7076:17: note: forward declaration of 'std::__1::__wrap_iter'
template<>class __wrap_iter template<>class __wrap_iter;
                ^
vec.cpp:7170:192: error: use of undeclared identifier '__x'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator>=(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>){return(!(__x,__y));
                                                                                                                                                                                               ^
vec.cpp:7170:196: error: use of undeclared identifier '__y'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator>=(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>){return(!(__x,__y));
                                                                                                                                                                                                   ^
vec.cpp:7172:111: error: expected ')'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator<=(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>){return(!(__y,__x));
                                                                                                              ^
vec.cpp:7172:99: note: to match this '('
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator<=(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>){return(!(__y,__x));
                                                                                                  ^
vec.cpp:7172:89: error: overloaded 'operator<=' must be a binary operator (has 1 parameter)
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator<=(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>){return(!(__y,__x));
                                                                                        ^
vec.cpp:7172:111: error: variable has incomplete type 'std::__1::__wrap_iter'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator<=(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>){return(!(__y,__x));
                                                                                                              ^
vec.cpp:7076:17: note: forward declaration of 'std::__1::__wrap_iter'
template<>class __wrap_iter template<>class __wrap_iter;
                ^
vec.cpp:7172:192: error: use of undeclared identifier '__y'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator<=(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>){return(!(__y,__x));
                                                                                                                                                                                               ^
vec.cpp:7172:196: error: use of undeclared identifier '__x'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator<=(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>){return(!(__y,__x));
                                                                                                                                                                                                   ^
vec.cpp:7174:74: error: expected ')'
template<typename __xcodeml_template_type_0_0>bool operator!=(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_0>){return(!(__x,__y));
                                                                         ^
vec.cpp:7174:62: note: to match this '('
template<typename __xcodeml_template_type_0_0>bool operator!=(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_0>){return(!(__x,__y));
                                                             ^
vec.cpp:7174:52: error: overloaded 'operator!=' must be a binary operator (has 1 parameter)
template<typename __xcodeml_template_type_0_0>bool operator!=(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_0>){return(!(__x,__y));
                                                   ^
vec.cpp:7174:74: error: variable has incomplete type 'std::__1::__wrap_iter'
template<typename __xcodeml_template_type_0_0>bool operator!=(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_0>){return(!(__x,__y));
                                                                         ^
vec.cpp:7076:17: note: forward declaration of 'std::__1::__wrap_iter'
template<>class __wrap_iter template<>class __wrap_iter;
                ^
vec.cpp:7174:155: error: use of undeclared identifier '__x'
template<typename __xcodeml_template_type_0_0>bool operator!=(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_0>){return(!(__x,__y));
                                                                                                                                                          ^
vec.cpp:7174:159: error: use of undeclared identifier '__y'
template<typename __xcodeml_template_type_0_0>bool operator!=(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_0>){return(!(__x,__y));
                                                                                                                                                              ^
vec.cpp:7176:73: error: expected ')'
template<typename __xcodeml_template_type_0_0>bool operator>(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_0>){return(__y,__x);
                                                                        ^
vec.cpp:7176:61: note: to match this '('
template<typename __xcodeml_template_type_0_0>bool operator>(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_0>){return(__y,__x);
                                                            ^
vec.cpp:7176:52: error: overloaded 'operator>' must be a binary operator (has 1 parameter)
template<typename __xcodeml_template_type_0_0>bool operator>(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_0>){return(__y,__x);
                                                   ^
vec.cpp:7176:73: error: variable has incomplete type 'std::__1::__wrap_iter'
template<typename __xcodeml_template_type_0_0>bool operator>(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_0>){return(__y,__x);
                                                                        ^
vec.cpp:7076:17: note: forward declaration of 'std::__1::__wrap_iter'
template<>class __wrap_iter template<>class __wrap_iter;
                ^
vec.cpp:7176:152: error: use of undeclared identifier '__y'
template<typename __xcodeml_template_type_0_0>bool operator>(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_0>){return(__y,__x);
                                                                                                                                                       ^
vec.cpp:7176:156: error: use of undeclared identifier '__x'
template<typename __xcodeml_template_type_0_0>bool operator>(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_0>){return(__y,__x);
                                                                                                                                                           ^
vec.cpp:7178:74: error: expected ')'
template<typename __xcodeml_template_type_0_0>bool operator>=(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_0>){return(!(__x,__y));
                                                                         ^
vec.cpp:7178:62: note: to match this '('
template<typename __xcodeml_template_type_0_0>bool operator>=(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_0>){return(!(__x,__y));
                                                             ^
vec.cpp:7178:52: error: overloaded 'operator>=' must be a binary operator (has 1 parameter)
template<typename __xcodeml_template_type_0_0>bool operator>=(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_0>){return(!(__x,__y));
                                                   ^
vec.cpp:7178:74: error: variable has incomplete type 'std::__1::__wrap_iter'
template<typename __xcodeml_template_type_0_0>bool operator>=(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_0>){return(!(__x,__y));
                                                                         ^
vec.cpp:7076:17: note: forward declaration of 'std::__1::__wrap_iter'
template<>class __wrap_iter template<>class __wrap_iter;
                ^
vec.cpp:7178:155: error: use of undeclared identifier '__x'
template<typename __xcodeml_template_type_0_0>bool operator>=(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_0>){return(!(__x,__y));
                                                                                                                                                          ^
vec.cpp:7178:159: error: use of undeclared identifier '__y'
template<typename __xcodeml_template_type_0_0>bool operator>=(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_0>){return(!(__x,__y));
                                                                                                                                                              ^
vec.cpp:7180:74: error: expected ')'
template<typename __xcodeml_template_type_0_0>bool operator<=(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_0>){return(!(__y,__x));
                                                                         ^
vec.cpp:7180:62: note: to match this '('
template<typename __xcodeml_template_type_0_0>bool operator<=(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_0>){return(!(__y,__x));
                                                             ^
vec.cpp:7180:52: error: overloaded 'operator<=' must be a binary operator (has 1 parameter)
template<typename __xcodeml_template_type_0_0>bool operator<=(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_0>){return(!(__y,__x));
                                                   ^
vec.cpp:7180:74: error: variable has incomplete type 'std::__1::__wrap_iter'
template<typename __xcodeml_template_type_0_0>bool operator<=(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_0>){return(!(__y,__x));
                                                                         ^
vec.cpp:7076:17: note: forward declaration of 'std::__1::__wrap_iter'
template<>class __wrap_iter template<>class __wrap_iter;
                ^
vec.cpp:7180:155: error: use of undeclared identifier '__y'
template<typename __xcodeml_template_type_0_0>bool operator<=(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_0>){return(!(__y,__x));
                                                                                                                                                          ^
vec.cpp:7180:159: error: use of undeclared identifier '__x'
template<typename __xcodeml_template_type_0_0>bool operator<=(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_0>){return(!(__y,__x));
                                                                                                                                                              ^
vec.cpp:7182:115: error: expected '(' for function-style cast or type construction
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>decltype (operator-(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>)){return((__x.base()),(__y.base()));
                                                                                                       ~~~~~~~~~~~^
vec.cpp:7182:116: error: '__xcodeml_template_type_0_0' does not refer to a value
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>decltype (operator-(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>)){return((__x.base()),(__y.base()));
                                                                                                                   ^
vec.cpp:7182:19: note: declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>decltype (operator-(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>)){return((__x.base()),(__y.base()));
                  ^
vec.cpp:7182:144: error: expected expression
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>decltype (operator-(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>)){return((__x.base()),(__y.base()));
                                                                                                                                               ^
vec.cpp:7182:156: error: expected '(' for function-style cast or type construction
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>decltype (operator-(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>)){return((__x.base()),(__y.base()));
                                                                                                                                                ~~~~~~~~~~~^
vec.cpp:7182:157: error: '__xcodeml_template_type_0_1' does not refer to a value
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>decltype (operator-(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>)){return((__x.base()),(__y.base()));
                                                                                                                                                            ^
vec.cpp:7182:56: note: declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>decltype (operator-(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>)){return((__x.base()),(__y.base()));
                                                       ^
vec.cpp:7182:185: error: expected expression
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>decltype (operator-(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>)){return((__x.base()),(__y.base()));
                                                                                                                                                                                        ^
vec.cpp:7182:187: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>decltype (operator-(__wrap_iter<__xcodeml_template_type_0_0>,__wrap_iter<__xcodeml_template_type_0_1>)){return((__x.base()),(__y.base()));
                                                                                                                                                                                          ^
vec.cpp:7190:53: error: explicit specialization of undeclared template class '__libcpp_is_trivial_iterator'
template<typename __xcodeml_template_type_0_0>class __libcpp_is_trivial_iterator<move_iterator<__xcodeml_template_type_0_0> >:public integral_constant<bool,expression>{}
                                                    ^                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:7190:157: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>class __libcpp_is_trivial_iterator<move_iterator<__xcodeml_template_type_0_0> >:public integral_constant<bool,expression>{}
                                                                                                                                                            ^
vec.cpp:7192:160: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>class __libcpp_is_trivial_iterator<reverse_iterator<__xcodeml_template_type_0_0> >:public integral_constant<bool,expression>{}
                                                                                                                                                               ^
vec.cpp:7194:93: error: expected '>'
template<typename __xcodeml_template_type_0_0>class __libcpp_is_trivial_iterator<__wrap_iter<__xcodeml_template_type_0_0> >:public integral_constant<bool,expression>{}
                                                                                            ^
vec.cpp:7194:165: error: expected ';' at end of declaration
template<typename __xcodeml_template_type_0_0>class __libcpp_is_trivial_iterator<__wrap_iter<__xcodeml_template_type_0_0> >:public integral_constant<bool,expression>{}
                                                                                                                                                                    ^
                                                                                                                                                                    ;
vec.cpp:7194:165: error: expected unqualified-id
vec.cpp:7200:63: error: '__xcodeml_template_type_0_0' does not refer to a value
template<typename __xcodeml_template_type_0_0>decltype (begin(__xcodeml_template_type_0_0&__c)){return(__c.begin());
                                                              ^
vec.cpp:7200:19: note: declared here
template<typename __xcodeml_template_type_0_0>decltype (begin(__xcodeml_template_type_0_0&__c)){return(__c.begin());
                  ^
vec.cpp:7200:91: error: use of undeclared identifier '__c'
template<typename __xcodeml_template_type_0_0>decltype (begin(__xcodeml_template_type_0_0&__c)){return(__c.begin());
                                                                                          ^
vec.cpp:7200:96: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0>decltype (begin(__xcodeml_template_type_0_0&__c)){return(__c.begin());
                                                                                               ^
vec.cpp:7236:216: error: use of undeclared identifier '__x'
template<unsigned long _Ip,typename __xcodeml_template_type_0_1,bool _Ep>void swap(__tuple_leaf<expression,__xcodeml_template_type_0_1,expression>,__tuple_leaf<expression,__xcodeml_template_type_0_1,expression>){(((__x.get()),(__y.get())));
                                                                                                                                                                                                                       ^
vec.cpp:7236:228: error: use of undeclared identifier '__y'
template<unsigned long _Ip,typename __xcodeml_template_type_0_1,bool _Ep>void swap(__tuple_leaf<expression,__xcodeml_template_type_0_1,expression>,__tuple_leaf<expression,__xcodeml_template_type_0_1,expression>){(((__x.get()),(__y.get())));
                                                                                                                                                                                                                                   ^
vec.cpp:7239:98: error: '__xcodeml_template_type_0_1' does not refer to a value
private:template<typename __xcodeml_template_type_1_0>static bool __can_bind_reference(){return(!__xcodeml_template_type_0_1 __xcodeml_template_type_1_0);
                                                                                                 ^
vec.cpp:7238:37: note: declared here
template<unsigned long _Ip,typename __xcodeml_template_type_0_1,bool>class __tuple_leaf{private:__xcodeml_template_type_0_1 __value_;
                                    ^
vec.cpp:7243:79: error: expected unqualified-id
public:__tuple_leaf():__value_(){(!is_reference<__xcodeml_template_type_0_1>::.value)"Attempted to default construct a reference element in a tuple";
                                                                              ^
vec.cpp:7245:201: error: expected unqualified-id
public:template<typename __xcodeml_template_type_1_0>__tuple_leaf(class::std::__1::integral_constant<int,0>,__xcodeml_template_type_1_0 const&):__value_(){(!is_reference<__xcodeml_template_type_0_1>::.value)"Attempted to default construct a reference element in a tuple";
                                                                                                                                                                                                        ^
vec.cpp:7247:214: error: expected ')'
public:template<typename __xcodeml_template_type_1_0>__tuple_leaf(class::std::__1::integral_constant<int,1>,__xcodeml_template_type_1_0 const&__a):__value_(__xcodeml_identity<class::std::__1::allocator_arg_t>::t()__a){(!is_reference<__xcodeml_template_type_0_1>::.value)"Attempted to default construct a reference element in a tuple";
                                                                                                                                                                                                                     ^
vec.cpp:7247:156: note: to match this '('
public:template<typename __xcodeml_template_type_1_0>__tuple_leaf(class::std::__1::integral_constant<int,1>,__xcodeml_template_type_1_0 const&__a):__value_(__xcodeml_identity<class::std::__1::allocator_arg_t>::t()__a){(!is_reference<__xcodeml_template_type_0_1>::.value)"Attempted to default construct a reference element in a tuple";
                                                                                                                                                           ^
vec.cpp:7247:264: error: expected unqualified-id
public:template<typename __xcodeml_template_type_1_0>__tuple_leaf(class::std::__1::integral_constant<int,1>,__xcodeml_template_type_1_0 const&__a):__value_(__xcodeml_identity<class::std::__1::allocator_arg_t>::t()__a){(!is_reference<__xcodeml_template_type_0_1>::.value)"Attempted to default construct a reference element in a tuple";
                                                                                                                                                                                                                                                                       ^
vec.cpp:7249:207: error: expected unqualified-id
public:template<typename __xcodeml_template_type_1_0>__tuple_leaf(class::std::__1::integral_constant<int,2>,__xcodeml_template_type_1_0 const&__a):__value_(__a){(!is_reference<__xcodeml_template_type_0_1>::.value)"Attempted to default construct a reference element in a tuple";
                                                                                                                                                                                                              ^
vec.cpp:7251:159: error: no member named '__xcodeml_template_type_1_0' in namespace 'std::__1'
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1>__tuple_leaf(__xcodeml_template_type_1_0(*__t)):__value_((std::__1::__xcodeml_template_type_1_0(__t))){(__xcodeml_template_type_1_0(*)())"Attempted construction of reference element binds to a temporary whose lifetime has ended";
                                                                                                                                                    ~~~~~~~~~~^
vec.cpp:7253:236: error: no member named '__xcodeml_template_type_1_0' in namespace 'std::__1'
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1>__tuple_leaf(class::std::__1::integral_constant<int,0>,__xcodeml_template_type_1_1 const&,__xcodeml_template_type_1_0(*__t)):__value_((std::__1::__xcodeml_template_type_1_0(__t))){(__xcodeml_template_type_1_0(*)())"Attempted construction of reference element binds to a temporary whose lifetime has ended";
                                                                                                                                                                                                                                 ~~~~~~~~~~^
vec.cpp:7255:285: error: expected ')'
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1>__tuple_leaf(class::std::__1::integral_constant<int,1>,__xcodeml_template_type_1_1 const&__a,__xcodeml_template_type_1_0(*__t)):__value_(__xcodeml_identity<class::std::__1::allocator_arg_t>::t()__a(std::__1::__xcodeml_template_type_1_0(__t))){(!is_reference<__xcodeml_template_type_0_1>::.value)"Attempted to uses-allocator construct a reference element in a tuple";
                                                                                                                                                                                                                                                                                            ^
vec.cpp:7255:227: note: to match this '('
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1>__tuple_leaf(class::std::__1::integral_constant<int,1>,__xcodeml_template_type_1_1 const&__a,__xcodeml_template_type_1_0(*__t)):__value_(__xcodeml_identity<class::std::__1::allocator_arg_t>::t()__a(std::__1::__xcodeml_template_type_1_0(__t))){(!is_reference<__xcodeml_template_type_0_1>::.value)"Attempted to uses-allocator construct a reference element in a tuple";
                                                                                                                                                                                                                                  ^
vec.cpp:7255:379: error: expected unqualified-id
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1>__tuple_leaf(class::std::__1::integral_constant<int,1>,__xcodeml_template_type_1_1 const&__a,__xcodeml_template_type_1_0(*__t)):__value_(__xcodeml_identity<class::std::__1::allocator_arg_t>::t()__a(std::__1::__xcodeml_template_type_1_0(__t))){(!is_reference<__xcodeml_template_type_0_1>::.value)"Attempted to uses-allocator construct a reference element in a tuple";
                                                                                                                                                                                                                                                                                                                                                                                          ^
vec.cpp:7257:239: error: no member named '__xcodeml_template_type_1_0' in namespace 'std::__1'
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1>__tuple_leaf(class::std::__1::integral_constant<int,2>,__xcodeml_template_type_1_1 const&__a,__xcodeml_template_type_1_0(*__t)):__value_((std::__1::__xcodeml_template_type_1_0(__t))__a){(!is_reference<__xcodeml_template_type_0_1>::.value)"Attempted to uses-allocator construct a reference element in a tuple";
                                                                                                                                                                                                                                    ~~~~~~~~~~^
vec.cpp:7257:322: error: expected unqualified-id
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1>__tuple_leaf(class::std::__1::integral_constant<int,2>,__xcodeml_template_type_1_1 const&__a,__xcodeml_template_type_1_0(*__t)):__value_((std::__1::__xcodeml_template_type_1_0(__t))__a){(!is_reference<__xcodeml_template_type_0_1>::.value)"Attempted to uses-allocator construct a reference element in a tuple";
                                                                                                                                                                                                                                                                                                                                 ^
vec.cpp:7261:145: error: no member named '__xcodeml_template_type_1_0' in namespace 'std::__1'
public:template<typename __xcodeml_template_type_1_0>class __tuple_leaf&operator=(__xcodeml_template_type_1_0(*__t)){(this->__value_=(std::__1::__xcodeml_template_type_1_0(__t)));
                                                                                                                                      ~~~~~~~~~~^
vec.cpp:7264:52: error: expected unqualified-id
public:int swap(class __tuple_leaf&__t){(std::__1::((*this),__t));
                                                   ^
vec.cpp:7301:95: error: expected expression
template<typename __xcodeml_template_type_0_0>class __all_default_constructible<__tuple_types<...> >:public integral_constant<bool,expression>{}
                                                                                              ^
vec.cpp:7301:100: error: expected a type
template<typename __xcodeml_template_type_0_0>class __all_default_constructible<__tuple_types<...> >:public integral_constant<bool,expression>{}
                                                                                                   ^
vec.cpp:7305:102: error: expected expression
template<unsigned long _Indx,typename __xcodeml_template_type_0_1>class __tuple_impl<__tuple_indices<...>,...>:public __tuple_leaf<expression,__xcodeml_template_type_0_1,expression>{public:__tuple_impl(){}
                                                                                                     ^
vec.cpp:7305:106: error: expected a type
template<unsigned long _Indx,typename __xcodeml_template_type_0_1>class __tuple_impl<__tuple_indices<...>,...>:public __tuple_leaf<expression,__xcodeml_template_type_0_1,expression>{public:__tuple_impl(){}
                                                                                                         ^
vec.cpp:7325:133: error: no type named 'type' in the global namespace
template<typename __xcodeml_template_type_0_0>class tuple{private:typedef __tuple_impl<typename __make_tuple_indices<expression,0>::type,...>;
                                                                                                                                  ~~^
vec.cpp:7326:67: error: no type named 'type' in the global namespace
private:__tuple_impl<typename __make_tuple_indices<expression,0>::type,...>;
                                                                ~~^
vec.cpp:7348:42: error: expected expression
private:template<bool _MaybeEnable,bool=(==1),typename __xcodeml_template_type_1_2>class _CheckTupleLikeConstructor:public __check_tuple_constructor_fail{}
                                         ^
vec.cpp:7360:249: warning: '/*' within block comment [-Wcomment]
/* Ignored a member with no access specifier template<typename __xcodeml_template_type_1_0>class _CheckTupleLikeConstructor<1,1,__xcodeml_template_type_1_0>{public:template<typename __xcodeml_template_type_2_0>using _PreferTupleLikeConstructor=void/**/;
                                                                                                                                                                                                                                                        ^
vec.cpp:7361:101: error: expected '(' for function-style cast or type construction
public:template<typename __xcodeml_template_type_2_0>static bool __enable_implicit(){return void/**/::value;
                                                                                            ~~~~    ^
vec.cpp:7363:101: error: expected '(' for function-style cast or type construction
public:template<typename __xcodeml_template_type_2_0>static bool __enable_explicit(){return void/**/::value;
                                                                                            ~~~~    ^
vec.cpp:7366:3: error: expected unqualified-id
;*/
  ^
vec.cpp:7369:8: error: expected unqualified-id
private:template<typename __xcodeml_template_type_1_0,bool _DisableIfLValue>using _EnableExplicitTupleLikeConstructor=void/**/;
       ^
vec.cpp:7370:1: error: expected unqualified-id
public:friend template<unsigned long _Jp,typename __xcodeml_template_type_1_1>typename tuple_element<expression,tuple<...> >::type&get(tuple<...>);
^
vec.cpp:7371:1: error: expected unqualified-id
public:friend template<unsigned long _Jp,typename __xcodeml_template_type_1_1>typename tuple_element<expression,tuple<...> >::type const&get(tuple<...>);
^
vec.cpp:7372:1: error: expected unqualified-id
public:friend template<unsigned long _Jp,typename __xcodeml_template_type_1_1>typename tuple_element<expression,tuple<...> >::type(*get(tuple<...>));
^
vec.cpp:7373:1: error: expected unqualified-id
public:friend template<unsigned long _Jp,typename __xcodeml_template_type_1_1>typename tuple_element<expression,tuple<...> >::type const(*get(tuple<...>));
^
vec.cpp:7374:1: error: expected unqualified-id
public:
^
vec.cpp:7376:1: error: expected unqualified-id
public:tuple(class tuple const&);
^
vec.cpp:7377:1: error: expected unqualified-id
public:tuple(class tuple(*));
^
vec.cpp:7378:1: error: expected unqualified-id
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1,bool _Dummy=true,typename __xcodeml_template_type_1_3>tuple(__xcodeml_template_type_1_0,__xcodeml_template_type_1_1 const&__a):__base_(__xcodeml_identity<class::std::__1::allocator_arg_t>::t()__a __xcodeml_identity<class::std::__1::__tuple_indices<...> >::t()__xcodeml_identity<class::std::__1::__tuple_types<...> >::t()__xcodeml_identity<typename __make_tuple_indices<expression,0>::type>::t()__xcodeml_identity<__tuple_types<...> >::t()){}
^
vec.cpp:7379:1: error: expected unqualified-id
public:template<bool _Dummy=true,typename enable_if<expression,bool>::type=false>tuple(void/*__t*/):__base_(__xcodeml_identity<typename __make_tuple_indices<expression,0>::type>::t()__xcodeml_identity<typename __make_tuple_types<class tuple,expression,0,expression>::type>::t()__xcodeml_identity<class::std::__1::__tuple_indices<...> >::t()__xcodeml_identity<typename __make_tuple_types<class tuple,0,0,expression>::type>::t()__t){}
^
vec.cpp:7380:1: error: expected unqualified-id
public:template<bool _Dummy=true,typename enable_if<expression,bool>::type=false>tuple(void/*__t*/):__base_(__xcodeml_identity<typename __make_tuple_indices<expression,0>::type>::t()__xcodeml_identity<typename __make_tuple_types<class tuple,expression,0,expression>::type>::t()__xcodeml_identity<class::std::__1::__tuple_indices<...> >::t()__xcodeml_identity<typename __make_tuple_types<class tuple,0,0,expression>::type>::t()__t){}
^
vec.cpp:7381:1: error: expected unqualified-id
public:template<typename __xcodeml_template_type_1_0,bool _Dummy=true,typename enable_if<expression,bool>::type=false>tuple(class::std::__1::allocator_arg_t,__xcodeml_template_type_1_0 const&__a,void/*__t*/):__base_(__xcodeml_identity<class::std::__1::allocator_arg_t>::t()__a __xcodeml_identity<typename __make_tuple_indices<expression,0>::type>::t()__xcodeml_identity<typename __make_tuple_types<class tuple,expression,0,expression>::type>::t()__xcodeml_identity<class::std::__1::__tuple_indices<...> >::t()__xcodeml_identity<typename __make_tuple_types<class tuple,0,0,expression>::type>::t()__t){}
^
vec.cpp:7382:1: error: expected unqualified-id
public:template<typename __xcodeml_template_type_1_0,bool _Dummy=true,typename enable_if<expression,bool>::type=false>tuple(class::std::__1::allocator_arg_t,__xcodeml_template_type_1_0 const&__a,void/*__t*/):__base_(__xcodeml_identity<class::std::__1::allocator_arg_t>::t()__a __xcodeml_identity<typename __make_tuple_indices<expression,0>::type>::t()__xcodeml_identity<typename __make_tuple_types<class tuple,expression,0,expression>::type>::t()__xcodeml_identity<class::std::__1::__tuple_indices<...> >::t()__xcodeml_identity<typename __make_tuple_types<class tuple,0,0,expression>::type>::t()__t){}
^
vec.cpp:7383:1: error: expected unqualified-id
public:template<typename __xcodeml_template_type_1_0,bool _PackIsTuple=_PackExpandsToThisTuple<...>::value,typename enable_if<expression,bool>::type=false>tuple(void/*__u*/):__base_(__xcodeml_identity<typename __make_tuple_indices<expression,0>::type>::t()__xcodeml_identity<typename __make_tuple_types<class tuple,expression,0,expression>::type>::t()__xcodeml_identity<typename __make_tuple_indices<expression,expression>::type>::t()__xcodeml_identity<typename __make_tuple_types<class tuple,expression,expression,expression>::type>::t()(std::__1::__xcodeml_template_type_1_0(__u))){}
^
vec.cpp:7384:1: error: expected unqualified-id
public:template<typename __xcodeml_template_type_1_0,typename enable_if<expression,bool>::type=false>tuple(void/*__u*/):__base_(__xcodeml_identity<typename __make_tuple_indices<expression,0>::type>::t()__xcodeml_identity<typename __make_tuple_types<class tuple,expression,0,expression>::type>::t()__xcodeml_identity<typename __make_tuple_indices<expression,expression>::type>::t()__xcodeml_identity<typename __make_tuple_types<class tuple,expression,expression,expression>::type>::t()(std::__1::__xcodeml_template_type_1_0(__u))){}
^
vec.cpp:7385:1: error: expected unqualified-id
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1,typename enable_if<expression,bool>::type=false>tuple(class::std::__1::allocator_arg_t,__xcodeml_template_type_1_0 const&__a,void/*__u*/):__base_(__xcodeml_identity<class::std::__1::allocator_arg_t>::t()__a __xcodeml_identity<typename __make_tuple_indices<expression,0>::type>::t()__xcodeml_identity<typename __make_tuple_types<class tuple,expression,0,expression>::type>::t()__xcodeml_identity<typename __make_tuple_indices<expression,expression>::type>::t()__xcodeml_identity<typename __make_tuple_types<class tuple,expression,expression,expression>::type>::t()(std::__1::__xcodeml_template_type_1_1(__u))){}
^
vec.cpp:7386:1: error: expected unqualified-id
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1,typename enable_if<expression,bool>::type=false>tuple(class::std::__1::allocator_arg_t,__xcodeml_template_type_1_0 const&__a,void/*__u*/):__base_(__xcodeml_identity<class::std::__1::allocator_arg_t>::t()__a __xcodeml_identity<typename __make_tuple_indices<expression,0>::type>::t()__xcodeml_identity<typename __make_tuple_types<class tuple,expression,0,expression>::type>::t()__xcodeml_identity<typename __make_tuple_indices<expression,expression>::type>::t()__xcodeml_identity<typename __make_tuple_types<class tuple,expression,expression,expression>::type>::t()(std::__1::__xcodeml_template_type_1_1(__u))){}
^
vec.cpp:7387:1: error: expected unqualified-id
public:template<typename __xcodeml_template_type_1_0,void/**/ =false>tuple(__xcodeml_template_type_1_0(*__t)):__base_((std::__1::__xcodeml_template_type_1_0(__t))){}
^
vec.cpp:7388:1: error: expected unqualified-id
public:template<typename __xcodeml_template_type_1_0,void/**/ =false>tuple(__xcodeml_template_type_1_0 const&__t):__base_(__t){}
^
vec.cpp:7389:1: error: expected unqualified-id
public:template<typename __xcodeml_template_type_1_0,void/**/ =false>tuple(__xcodeml_template_type_1_0(*__t)):__base_((std::__1::__xcodeml_template_type_1_0(__t))){}
^
vec.cpp:7390:1: error: expected unqualified-id
public:template<typename __xcodeml_template_type_1_0,void/**/ =false>tuple(__xcodeml_template_type_1_0 const&__t):__base_(__t){}
^
vec.cpp:7391:1: error: expected unqualified-id
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1,typename enable_if<expression,bool>::type=false>tuple(class::std::__1::allocator_arg_t,__xcodeml_template_type_1_0 const&__a,__xcodeml_template_type_1_1(*__t)):__base_(__xcodeml_identity<class::std::__1::allocator_arg_t>::t()__a(std::__1::__xcodeml_template_type_1_1(__t))){}
^
vec.cpp:7392:1: error: expected unqualified-id
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1,typename enable_if<expression,bool>::type=false>tuple(class::std::__1::allocator_arg_t,__xcodeml_template_type_1_0 const&__a,__xcodeml_template_type_1_1(*__t)):__base_(__xcodeml_identity<class::std::__1::allocator_arg_t>::t()__a(std::__1::__xcodeml_template_type_1_1(__t))){}
^
vec.cpp:7393:1: error: expected unqualified-id
public:using _CanCopyAssign=integral_constant<bool,expression>;
^
vec.cpp:7394:1: error: expected unqualified-id
public:using _CanMoveAssign=integral_constant<bool,expression>;
^
vec.cpp:7395:1: error: expected unqualified-id
public:class tuple&operator=(typename conditional<expression,class tuple,class::std::__1::__nat>::type const&__t){(this->__base_.(__t.__base_));
^
vec.cpp:7398:1: error: expected unqualified-id
public:class tuple&operator=(typename conditional<expression,class tuple,class::std::__1::__nat>::type(*__t)){(this->__base_.(static_cast<__tuple_impl<typename __make_tuple_indices<expression,0>::type,...> >(__t.__base_)));
^
vec.cpp:7401:1: error: expected unqualified-id
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1>class tuple&operator=(__xcodeml_template_type_1_0(*__t)){(this->__base_.((std::__1::__xcodeml_template_type_1_0(__t))));
^
vec.cpp:7404:1: error: expected unqualified-id
public:void swap(class tuple&__t){(this->__base_.swap(__t.__base_));
^
vec.cpp:7409:23: error: expected expression
template<>class tuple<...>{public:
                      ^
vec.cpp:7418:66: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,void>::type swap(tuple<...>,tuple<...>){(__t.swap(__u));
                                                                 ^
vec.cpp:7418:84: error: definition or redeclaration of 'type' cannot name the global scope
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,void>::type swap(tuple<...>,tuple<...>){(__t.swap(__u));
                                                                                 ~~^
vec.cpp:7418:88: error: expected ';' at end of declaration
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,void>::type swap(tuple<...>,tuple<...>){(__t.swap(__u));
                                                                                       ^
                                                                                       ;
vec.cpp:7418:100: error: expected expression
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,void>::type swap(tuple<...>,tuple<...>){(__t.swap(__u));
                                                                                                   ^
vec.cpp:7418:89: error: unknown type name 'swap'
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,void>::type swap(tuple<...>,tuple<...>){(__t.swap(__u));
                                                                                        ^
vec.cpp:7418:100: error: expected expression
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,void>::type swap(tuple<...>,tuple<...>){(__t.swap(__u));
                                                                                                   ^
vec.cpp:7418:104: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,void>::type swap(tuple<...>,tuple<...>){(__t.swap(__u));
                                                                                                       ^
vec.cpp:7418:104: error: expected ')'
vec.cpp:7418:93: note: to match this '('
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,void>::type swap(tuple<...>,tuple<...>){(__t.swap(__u));
                                                                                            ^
vec.cpp:7420:88: error: use of undeclared identifier 'expression'
template<unsigned long _Ip,typename __xcodeml_template_type_0_1>typename tuple_element<expression,tuple<...> >::type&get(tuple<...>){typedef typename tuple_element<expression,tuple<...> >::type type;
                                                                                       ^
vec.cpp:7420:110: error: expected unqualified-id
template<unsigned long _Ip,typename __xcodeml_template_type_0_1>typename tuple_element<expression,tuple<...> >::type&get(tuple<...>){typedef typename tuple_element<expression,tuple<...> >::type type;
                                                                                                             ^
vec.cpp:7458:122: error: expected expression
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>__xcodeml_template_type_0_0&get(tuple<...>){return(std::__1::__find_exactly_one_t<__xcodeml_template_type_0_0,...>::value(__tup));
                                                                                                                         ^
vec.cpp:7458:122: error: expected expression
vec.cpp:7458:145: error: no member named '__find_exactly_one_t' in namespace 'std::__1'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>__xcodeml_template_type_0_0&get(tuple<...>){return(std::__1::__find_exactly_one_t<__xcodeml_template_type_0_0,...>::value(__tup));
                                                                                                                                      ~~~~~~~~~~^
vec.cpp:7458:166: error: '__xcodeml_template_type_0_0' does not refer to a value
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>__xcodeml_template_type_0_0&get(tuple<...>){return(std::__1::__find_exactly_one_t<__xcodeml_template_type_0_0,...>::value(__tup));
                                                                                                                                                                     ^
vec.cpp:7458:19: note: declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>__xcodeml_template_type_0_0&get(tuple<...>){return(std::__1::__find_exactly_one_t<__xcodeml_template_type_0_0,...>::value(__tup));
                  ^
vec.cpp:7460:128: error: expected expression
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>__xcodeml_template_type_0_0 const&get(tuple<...>){return(std::__1::__find_exactly_one_t<__xcodeml_template_type_0_0,...>::value(__tup));
                                                                                                                               ^
vec.cpp:7460:128: error: expected expression
vec.cpp:7460:151: error: no member named '__find_exactly_one_t' in namespace 'std::__1'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>__xcodeml_template_type_0_0 const&get(tuple<...>){return(std::__1::__find_exactly_one_t<__xcodeml_template_type_0_0,...>::value(__tup));
                                                                                                                                            ~~~~~~~~~~^
vec.cpp:7460:172: error: '__xcodeml_template_type_0_0' does not refer to a value
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>__xcodeml_template_type_0_0 const&get(tuple<...>){return(std::__1::__find_exactly_one_t<__xcodeml_template_type_0_0,...>::value(__tup));
                                                                                                                                                                           ^
vec.cpp:7460:19: note: declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>__xcodeml_template_type_0_0 const&get(tuple<...>){return(std::__1::__find_exactly_one_t<__xcodeml_template_type_0_0,...>::value(__tup));
                  ^
vec.cpp:7462:123: error: expected expression
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>__xcodeml_template_type_0_0(*get(tuple<...>)){return(std::__1::__find_exactly_one_t<__xcodeml_template_type_0_0,...>::value((std::__1::(__tup))));
                                                                                                                          ^
vec.cpp:7462:147: error: no member named '__find_exactly_one_t' in namespace 'std::__1'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>__xcodeml_template_type_0_0(*get(tuple<...>)){return(std::__1::__find_exactly_one_t<__xcodeml_template_type_0_0,...>::value((std::__1::(__tup))));
                                                                                                                                        ~~~~~~~~~~^
vec.cpp:7462:168: error: '__xcodeml_template_type_0_0' does not refer to a value
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>__xcodeml_template_type_0_0(*get(tuple<...>)){return(std::__1::__find_exactly_one_t<__xcodeml_template_type_0_0,...>::value((std::__1::(__tup))));
                                                                                                                                                                       ^
vec.cpp:7462:19: note: declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>__xcodeml_template_type_0_0(*get(tuple<...>)){return(std::__1::__find_exactly_one_t<__xcodeml_template_type_0_0,...>::value((std::__1::(__tup))));
                  ^
vec.cpp:7464:129: error: expected expression
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>__xcodeml_template_type_0_0 const(*get(tuple<...>)){return(std::__1::__find_exactly_one_t<__xcodeml_template_type_0_0,...>::value((std::__1::(__tup))));
                                                                                                                                ^
vec.cpp:7464:153: error: no member named '__find_exactly_one_t' in namespace 'std::__1'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>__xcodeml_template_type_0_0 const(*get(tuple<...>)){return(std::__1::__find_exactly_one_t<__xcodeml_template_type_0_0,...>::value((std::__1::(__tup))));
                                                                                                                                              ~~~~~~~~~~^
vec.cpp:7464:174: error: '__xcodeml_template_type_0_0' does not refer to a value
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>__xcodeml_template_type_0_0 const(*get(tuple<...>)){return(std::__1::__find_exactly_one_t<__xcodeml_template_type_0_0,...>::value((std::__1::(__tup))));
                                                                                                                                                                             ^
vec.cpp:7464:19: note: declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>__xcodeml_template_type_0_0 const(*get(tuple<...>)){return(std::__1::__find_exactly_one_t<__xcodeml_template_type_0_0,...>::value((std::__1::(__tup))));
                  ^
vec.cpp:7466:53: error: expected expression
template<typename __xcodeml_template_type_0_0>tuple<...>{return __xcodeml_identity<tuple<...> >::t(__t);
                                                    ^
vec.cpp:7466:57: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0>tuple<...>{return __xcodeml_identity<tuple<...> >::t(__t);
                                                        ^
vec.cpp:7472:17: error: explicit specialization of undeclared template class '__ignore_t'
template<>class __ignore_t<unsigned char>{public:template<typename __xcodeml_template_type_0_0>class __ignore_t const&operator=(__xcodeml_template_type_0_0(*))const
                ^         ~~~~~~~~~~~~~~~
vec.cpp:7472:165: error: expected ';' at end of declaration list
template<>class __ignore_t<unsigned char>{public:template<typename __xcodeml_template_type_0_0>class __ignore_t const&operator=(__xcodeml_template_type_0_0(*))const
                                                                                                                                                                    ^
                                                                                                                                                                    ;
vec.cpp:7475:87: error: explicit specialization of non-template class '__ignore_t'
namespace{constexpr class __ignore_t const ignore=__xcodeml_identity<class::std::__1::__ignore_t<unsigned char> >::t();
                                                                                      ^         ~~~~~~~~~~~~~~~
vec.cpp:7475:87: error: no class named '__ignore_t' in namespace 'std::__1'
namespace{constexpr class __ignore_t const ignore=__xcodeml_identity<class::std::__1::__ignore_t<unsigned char> >::t();
                                                                          ~~~~~~~~~~~~^
vec.cpp:7477:53: error: expected expression
template<typename __xcodeml_template_type_0_0>tuple<...>{return __xcodeml_identity<tuple<...> >::t((std::__1::__xcodeml_template_type_0_0(__t)));
                                                    ^
vec.cpp:7477:57: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0>tuple<...>{return __xcodeml_identity<tuple<...> >::t((std::__1::__xcodeml_template_type_0_0(__t)));
                                                        ^
vec.cpp:7488:17: error: explicit specialization of undeclared template class '__tuple_equal'
template<>class __tuple_equal<0>{public:template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator()(__xcodeml_template_type_0_0 const&,__xcodeml_template_type_0_1 const&){return true;
                ^            ~~~
vec.cpp:7492:106: error: expected expression
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator==(tuple<...>,tuple<...>){(==)"Can't compare tuples of different sizes";
                                                                                                         ^
vec.cpp:7492:117: error: expected expression
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator==(tuple<...>,tuple<...>){(==)"Can't compare tuples of different sizes";
                                                                                                                    ^
vec.cpp:7492:124: error: expected expression
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator==(tuple<...>,tuple<...>){(==)"Can't compare tuples of different sizes";
                                                                                                                           ^
vec.cpp:7492:126: error: expected expression
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator==(tuple<...>,tuple<...>){(==)"Can't compare tuples of different sizes";
                                                                                                                             ^
vec.cpp:7493:40: error: expected '>'
return(__xcodeml_identity<__tuple_equal<expression> >::t()(__x,__y));
                                       ^
vec.cpp:7493:40: error: type name requires a specifier or qualifier
vec.cpp:7493:40: error: expected ')'
vec.cpp:7493:7: note: to match this '('
return(__xcodeml_identity<__tuple_equal<expression> >::t()(__x,__y));
      ^
vec.cpp:7495:106: error: expected expression
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator!=(tuple<...>,tuple<...>){return(!(__x,__y));
                                                                                                         ^
vec.cpp:7495:117: error: expected expression
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator!=(tuple<...>,tuple<...>){return(!(__x,__y));
                                                                                                                    ^
vec.cpp:7495:132: error: use of undeclared identifier '__x'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator!=(tuple<...>,tuple<...>){return(!(__x,__y));
                                                                                                                                   ^
vec.cpp:7495:136: error: use of undeclared identifier '__y'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator!=(tuple<...>,tuple<...>){return(!(__x,__y));
                                                                                                                                       ^
vec.cpp:7497:257: error: no template named 'tuple_size'
template<unsigned long _Ip>class __tuple_less{public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1>bool operator()(__xcodeml_template_type_1_0 const&__x,__xcodeml_template_type_1_1 const&__y){unsigned long const __idx=(tuple_size<__xcodeml_template_type_1_0>::.value,_Ip);
                                                                                                                                                                                                                                                                ^
vec.cpp:7497:298: error: expected unqualified-id
template<unsigned long _Ip>class __tuple_less{public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1>bool operator()(__xcodeml_template_type_1_0 const&__x,__xcodeml_template_type_1_1 const&__y){unsigned long const __idx=(tuple_size<__xcodeml_template_type_1_0>::.value,_Ip);
                                                                                                                                                                                                                                                                                                         ^
vec.cpp:7498:16: error: no member named '__idx' in namespace 'std::__1'
if(((std::__1::__idx(__x)),(std::__1::__idx(__y)))){return true;};
     ~~~~~~~~~~^
vec.cpp:7498:39: error: no member named '__idx' in namespace 'std::__1'
if(((std::__1::__idx(__x)),(std::__1::__idx(__y)))){return true;};
                            ~~~~~~~~~~^
vec.cpp:7499:16: error: no member named '__idx' in namespace 'std::__1'
if(((std::__1::__idx(__y)),(std::__1::__idx(__x)))){return false;};
     ~~~~~~~~~~^
vec.cpp:7499:39: error: no member named '__idx' in namespace 'std::__1'
if(((std::__1::__idx(__y)),(std::__1::__idx(__x)))){return false;};
                            ~~~~~~~~~~^
vec.cpp:7500:40: error: use of undeclared identifier 'expression'
return(__xcodeml_identity<__tuple_less<expression> >::t()(__x,__y));
                                       ^
vec.cpp:7500:52: error: expected a type
return(__xcodeml_identity<__tuple_less<expression> >::t()(__x,__y));
                                                   ^
vec.cpp:7500:55: error: no type named 't' in the global namespace
return(__xcodeml_identity<__tuple_less<expression> >::t()(__x,__y));
                                                    ~~^
vec.cpp:7500:59: error: unknown type name '__x'
return(__xcodeml_identity<__tuple_less<expression> >::t()(__x,__y));
                                                          ^
vec.cpp:7500:63: error: unknown type name '__y'
return(__xcodeml_identity<__tuple_less<expression> >::t()(__x,__y));
                                                              ^
vec.cpp:7509:105: error: expected expression
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator<(tuple<...>,tuple<...>){(==)"Can't compare tuples of different sizes";
                                                                                                        ^
vec.cpp:7509:116: error: expected expression
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator<(tuple<...>,tuple<...>){(==)"Can't compare tuples of different sizes";
                                                                                                                   ^
vec.cpp:7509:123: error: expected expression
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator<(tuple<...>,tuple<...>){(==)"Can't compare tuples of different sizes";
                                                                                                                          ^
vec.cpp:7509:125: error: expected expression
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator<(tuple<...>,tuple<...>){(==)"Can't compare tuples of different sizes";
                                                                                                                            ^
vec.cpp:7510:40: error: use of undeclared identifier 'expression'
return(__xcodeml_identity<__tuple_less<expression> >::t()(__x,__y));
                                       ^
vec.cpp:7510:52: error: expected a type
return(__xcodeml_identity<__tuple_less<expression> >::t()(__x,__y));
                                                   ^
vec.cpp:7510:55: error: no type named 't' in the global namespace
return(__xcodeml_identity<__tuple_less<expression> >::t()(__x,__y));
                                                    ~~^
vec.cpp:7510:59: error: unknown type name '__x'
return(__xcodeml_identity<__tuple_less<expression> >::t()(__x,__y));
                                                          ^
vec.cpp:7510:63: error: unknown type name '__y'
return(__xcodeml_identity<__tuple_less<expression> >::t()(__x,__y));
                                                              ^
vec.cpp:7512:105: error: expected expression
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator>(tuple<...>,tuple<...>){return(__y,__x);
                                                                                                        ^
vec.cpp:7512:116: error: expected expression
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator>(tuple<...>,tuple<...>){return(__y,__x);
                                                                                                                   ^
vec.cpp:7512:129: error: use of undeclared identifier '__y'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator>(tuple<...>,tuple<...>){return(__y,__x);
                                                                                                                                ^
vec.cpp:7512:133: error: use of undeclared identifier '__x'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator>(tuple<...>,tuple<...>){return(__y,__x);
                                                                                                                                    ^
vec.cpp:7514:106: error: expected expression
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator>=(tuple<...>,tuple<...>){return(!(__x,__y));
                                                                                                         ^
vec.cpp:7514:117: error: expected expression
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator>=(tuple<...>,tuple<...>){return(!(__x,__y));
                                                                                                                    ^
vec.cpp:7514:132: error: use of undeclared identifier '__x'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator>=(tuple<...>,tuple<...>){return(!(__x,__y));
                                                                                                                                   ^
vec.cpp:7514:136: error: use of undeclared identifier '__y'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator>=(tuple<...>,tuple<...>){return(!(__x,__y));
                                                                                                                                       ^
vec.cpp:7516:106: error: expected expression
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator<=(tuple<...>,tuple<...>){return(!(__y,__x));
                                                                                                         ^
vec.cpp:7516:117: error: expected expression
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator<=(tuple<...>,tuple<...>){return(!(__y,__x));
                                                                                                                    ^
vec.cpp:7516:132: error: use of undeclared identifier '__y'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator<=(tuple<...>,tuple<...>){return(!(__y,__x));
                                                                                                                                   ^
vec.cpp:7516:136: error: use of undeclared identifier '__x'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator<=(tuple<...>,tuple<...>){return(!(__y,__x));
                                                                                                                                       ^
vec.cpp:7520:113: error: expected expression
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __tuple_cat_type<tuple<...>,__tuple_types<...> >{public:typedef tuple<...>;
                                                                                                                ^
vec.cpp:7520:117: error: expected a type
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __tuple_cat_type<tuple<...>,__tuple_types<...> >{public:typedef tuple<...>;
                                                                                                                    ^
vec.cpp:7526:117: error: expected expression
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __tuple_cat_return_1<tuple<...>,1,...>{public:typedef typename __tuple_cat_type<tuple<...>,typename __make_tuple_types<typename __uncvref<__xcodeml_template_type_0_1>::type,expression,0,expression>::type>::type type;
                                                                                                                    ^
vec.cpp:7526:121: error: expected a type
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __tuple_cat_return_1<tuple<...>,1,...>{public:typedef typename __tuple_cat_type<tuple<...>,typename __make_tuple_types<typename __uncvref<__xcodeml_template_type_0_1>::type,expression,0,expression>::type>::type type;
                                                                                                                        ^
vec.cpp:7529:191: error: expected expression
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3>class __tuple_cat_return_1<tuple<...>,1,...>:public __tuple_cat_return_1<typename __tuple_cat_type<tuple<...>,typename __make_tuple_types<typename __uncvref<__xcodeml_template_type_0_1>::type,expression,0,expression>::type>::type,expression,...>{}
                                                                                                                                                                                              ^
vec.cpp:7529:195: error: expected a type
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3>class __tuple_cat_return_1<tuple<...>,1,...>:public __tuple_cat_return_1<typename __tuple_cat_type<tuple<...>,typename __make_tuple_types<typename __uncvref<__xcodeml_template_type_0_1>::type,expression,0,expression>::type>::type,expression,...>{}
                                                                                                                                                                                                  ^
vec.cpp:7533:109: error: expected expression
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __tuple_cat_return<...>:public __tuple_cat_return_1<class::std::__1::tuple<...>,expression,...>{}
                                                                                                            ^
vec.cpp:7535:36: error: expected expression
template<>class __tuple_cat_return<...>{public:typedef class::std::__1::tuple<...>type;
                                   ^
vec.cpp:7538:24: error: expected expression
class::std::__1::tuple<...>tuple_cat(){return __xcodeml_identity<class::std::__1::tuple<...> >::t();
                       ^
vec.cpp:7538:38: error: expected unqualified-id
class::std::__1::tuple<...>tuple_cat(){return __xcodeml_identity<class::std::__1::tuple<...> >::t();
                                     ^
vec.cpp:7542:141: error: expected expression
template<typename __xcodeml_template_type_0_0,unsigned long _I0,typename __xcodeml_template_type_0_2>class __tuple_cat_return_ref_imp<tuple<...>,__tuple_indices<...>,__xcodeml_template_type_0_2,...>{public:typedef typename remove_reference<__xcodeml_template_type_0_2>::type _T0;
                                                                                                                                            ^
vec.cpp:7542:145: error: expected a type
template<typename __xcodeml_template_type_0_0,unsigned long _I0,typename __xcodeml_template_type_0_2>class __tuple_cat_return_ref_imp<tuple<...>,__tuple_indices<...>,__xcodeml_template_type_0_2,...>{public:typedef typename remove_reference<__xcodeml_template_type_0_2>::type _T0;
                                                                                                                                                ^
vec.cpp:7542:194: error: a template declaration can only declare a single entity
template<typename __xcodeml_template_type_0_0,unsigned long _I0,typename __xcodeml_template_type_0_2>class __tuple_cat_return_ref_imp<tuple<...>,__tuple_indices<...>,__xcodeml_template_type_0_2,...>{public:typedef typename remove_reference<__xcodeml_template_type_0_2>::type _T0;
                                                                                                                                                                                                 ^
vec.cpp:7546:215: error: expected expression
template<typename __xcodeml_template_type_0_0,unsigned long _I0,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3,typename __xcodeml_template_type_0_4>class __tuple_cat_return_ref_imp<tuple<...>,__tuple_indices<...>,__xcodeml_template_type_0_2,...>:public __tuple_cat_return_ref_imp<tuple<...>,typename __make_tuple_indices<expression,0>::type,__xcodeml_template_type_0_3,...>{}
                                                                                                                                                                                                                      ^
vec.cpp:7546:219: error: expected a type
template<typename __xcodeml_template_type_0_0,unsigned long _I0,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3,typename __xcodeml_template_type_0_4>class __tuple_cat_return_ref_imp<tuple<...>,__tuple_indices<...>,__xcodeml_template_type_0_2,...>:public __tuple_cat_return_ref_imp<tuple<...>,typename __make_tuple_indices<expression,0>::type,__xcodeml_template_type_0_3,...>{}
                                                                                                                                                                                                                          ^
vec.cpp:7546:268: error: a template declaration can only declare a single entity
template<typename __xcodeml_template_type_0_0,unsigned long _I0,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3,typename __xcodeml_template_type_0_4>class __tuple_cat_return_ref_imp<tuple<...>,__tuple_indices<...>,__xcodeml_template_type_0_2,...>:public __tuple_cat_return_ref_imp<tuple<...>,typename __make_tuple_indices<expression,0>::type,__xcodeml_template_type_0_3,...>{}
                                                                                                                                                                                                                                                                           ^
vec.cpp:7548:170: error: expected expression
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __tuple_cat_return_ref:public __tuple_cat_return_ref_imp<class::std::__1::tuple<...>,typename __make_tuple_indices<expression,0>::type,__xcodeml_template_type_0_0,...>{}
                                                                                                                                                                         ^
vec.cpp:7548:174: error: expected identifier
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __tuple_cat_return_ref:public __tuple_cat_return_ref_imp<class::std::__1::tuple<...>,typename __make_tuple_indices<expression,0>::type,__xcodeml_template_type_0_0,...>{}
                                                                                                                                                                             ^
vec.cpp:7548:205: error: use of undeclared identifier 'expression'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __tuple_cat_return_ref:public __tuple_cat_return_ref_imp<class::std::__1::tuple<...>,typename __make_tuple_indices<expression,0>::type,__xcodeml_template_type_0_0,...>{}
                                                                                                                                                                                                            ^
vec.cpp:7553:107: error: expected expression
template<typename __xcodeml_template_type_0_0,unsigned long _I0,unsigned long _J0>class __tuple_cat<tuple<...>,__tuple_indices<...>,__tuple_indices<...> >{public:template<typename __xcodeml_template_type_1_0>typename __tuple_cat_return_ref<tuple<...>,...>::type operator()(tuple<...>,__xcodeml_template_type_1_0(*__t0)){return(((std::__1::__xcodeml_template_type_0_0((std::__1::_I0(__t)))),(std::__1::_J0((std::__1::__xcodeml_template_type_1_0(__t0))))));
                                                                                                          ^
vec.cpp:7553:111: error: expected a type
template<typename __xcodeml_template_type_0_0,unsigned long _I0,unsigned long _J0>class __tuple_cat<tuple<...>,__tuple_indices<...>,__tuple_indices<...> >{public:template<typename __xcodeml_template_type_1_0>typename __tuple_cat_return_ref<tuple<...>,...>::type operator()(tuple<...>,__xcodeml_template_type_1_0(*__t0)){return(((std::__1::__xcodeml_template_type_0_0((std::__1::_I0(__t)))),(std::__1::_J0((std::__1::__xcodeml_template_type_1_0(__t0))))));
                                                                                                              ^
vec.cpp:7553:149: error: expected expression
template<typename __xcodeml_template_type_0_0,unsigned long _I0,unsigned long _J0>class __tuple_cat<tuple<...>,__tuple_indices<...>,__tuple_indices<...> >{public:template<typename __xcodeml_template_type_1_0>typename __tuple_cat_return_ref<tuple<...>,...>::type operator()(tuple<...>,__xcodeml_template_type_1_0(*__t0)){return(((std::__1::__xcodeml_template_type_0_0((std::__1::_I0(__t)))),(std::__1::_J0((std::__1::__xcodeml_template_type_1_0(__t0))))));
                                                                                                                                                    ^
vec.cpp:7553:154: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0,unsigned long _I0,unsigned long _J0>class __tuple_cat<tuple<...>,__tuple_indices<...>,__tuple_indices<...> >{public:template<typename __xcodeml_template_type_1_0>typename __tuple_cat_return_ref<tuple<...>,...>::type operator()(tuple<...>,__xcodeml_template_type_1_0(*__t0)){return(((std::__1::__xcodeml_template_type_0_0((std::__1::_I0(__t)))),(std::__1::_J0((std::__1::__xcodeml_template_type_1_0(__t0))))));
                                                                                                                                                         ^
vec.cpp:7561:112: error: expected expression
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>typename __tuple_cat_return<...>::type tuple_cat(__xcodeml_template_type_0_0(*__t0),void/*__tpls*/){typedef typename remove_reference<__xcodeml_template_type_0_0>::type _T0;
                                                                                                               ^
vec.cpp:7561:118: error: definition or redeclaration of 'type' cannot name the global scope
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>typename __tuple_cat_return<...>::type tuple_cat(__xcodeml_template_type_0_0(*__t0),void/*__tpls*/){typedef typename remove_reference<__xcodeml_template_type_0_0>::type _T0;
                                                                                                                   ~~^
vec.cpp:7561:122: error: expected ';' at end of declaration
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>typename __tuple_cat_return<...>::type tuple_cat(__xcodeml_template_type_0_0(*__t0),void/*__tpls*/){typedef typename remove_reference<__xcodeml_template_type_0_0>::type _T0;
                                                                                                                         ^
                                                                                                                         ;
vec.cpp:7561:162: error: C++ requires a type specifier for all declarations
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>typename __tuple_cat_return<...>::type tuple_cat(__xcodeml_template_type_0_0(*__t0),void/*__tpls*/){typedef typename remove_reference<__xcodeml_template_type_0_0>::type _T0;
                                                                                                                                                                 ^
vec.cpp:7561:167: error: expected ')'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>typename __tuple_cat_return<...>::type tuple_cat(__xcodeml_template_type_0_0(*__t0),void/*__tpls*/){typedef typename remove_reference<__xcodeml_template_type_0_0>::type _T0;
                                                                                                                                                                      ^
vec.cpp:7561:132: note: to match this '('
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>typename __tuple_cat_return<...>::type tuple_cat(__xcodeml_template_type_0_0(*__t0),void/*__tpls*/){typedef typename remove_reference<__xcodeml_template_type_0_0>::type _T0;
                                                                                                                                   ^
vec.cpp:7561:248: error: definition or redeclaration of 'type' cannot name the global scope
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>typename __tuple_cat_return<...>::type tuple_cat(__xcodeml_template_type_0_0(*__t0),void/*__tpls*/){typedef typename remove_reference<__xcodeml_template_type_0_0>::type _T0;
                                                                                                                                                                                                                                                     ~~^
vec.cpp:7561:248: error: typedef declarator cannot be qualified
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>typename __tuple_cat_return<...>::type tuple_cat(__xcodeml_template_type_0_0(*__t0),void/*__tpls*/){typedef typename remove_reference<__xcodeml_template_type_0_0>::type _T0;
                                                                                                                                                                                                                                                     ~~^
vec.cpp:7561:252: error: expected ';' at end of declaration
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>typename __tuple_cat_return<...>::type tuple_cat(__xcodeml_template_type_0_0(*__t0),void/*__tpls*/){typedef typename remove_reference<__xcodeml_template_type_0_0>::type _T0;
                                                                                                                                                                                                                                                           ^
                                                                                                                                                                                                                                                           ;
vec.cpp:7562:62: error: expected expression
return(__xcodeml_identity<__tuple_cat<class::std::__1::tuple<...>,class::std::__1::__tuple_indices<...>,typename __make_tuple_indices<expression,0>::type> >::t()(__xcodeml_identity<class::std::__1::tuple<...> >::t(),(std::__1::__xcodeml_template_type_0_0(__t0)),(std::__1::__xcodeml_template_type_0_1(__tpls))));
                                                             ^
vec.cpp:7562:66: error: expected identifier
return(__xcodeml_identity<__tuple_cat<class::std::__1::tuple<...>,class::std::__1::__tuple_indices<...>,typename __make_tuple_indices<expression,0>::type> >::t()(__xcodeml_identity<class::std::__1::tuple<...> >::t(),(std::__1::__xcodeml_template_type_0_0(__t0)),(std::__1::__xcodeml_template_type_0_1(__tpls))));
                                                                 ^
vec.cpp:7562:100: error: expected expression
return(__xcodeml_identity<__tuple_cat<class::std::__1::tuple<...>,class::std::__1::__tuple_indices<...>,typename __make_tuple_indices<expression,0>::type> >::t()(__xcodeml_identity<class::std::__1::tuple<...> >::t(),(std::__1::__xcodeml_template_type_0_0(__t0)),(std::__1::__xcodeml_template_type_0_1(__tpls))));
                                                                                                   ^
vec.cpp:7562:104: error: expected identifier
return(__xcodeml_identity<__tuple_cat<class::std::__1::tuple<...>,class::std::__1::__tuple_indices<...>,typename __make_tuple_indices<expression,0>::type> >::t()(__xcodeml_identity<class::std::__1::tuple<...> >::t(),(std::__1::__xcodeml_template_type_0_0(__t0)),(std::__1::__xcodeml_template_type_0_1(__tpls))));
                                                                                                       ^
vec.cpp:7562:135: error: use of undeclared identifier 'expression'
return(__xcodeml_identity<__tuple_cat<class::std::__1::tuple<...>,class::std::__1::__tuple_indices<...>,typename __make_tuple_indices<expression,0>::type> >::t()(__xcodeml_identity<class::std::__1::tuple<...> >::t(),(std::__1::__xcodeml_template_type_0_0(__t0)),(std::__1::__xcodeml_template_type_0_1(__tpls))));
                                                                                                                                      ^
vec.cpp:7562:156: error: expected a type
return(__xcodeml_identity<__tuple_cat<class::std::__1::tuple<...>,class::std::__1::__tuple_indices<...>,typename __make_tuple_indices<expression,0>::type> >::t()(__xcodeml_identity<class::std::__1::tuple<...> >::t(),(std::__1::__xcodeml_template_type_0_0(__t0)),(std::__1::__xcodeml_template_type_0_1(__tpls))));
                                                                                                                                                           ^
vec.cpp:7562:159: error: no type named 't' in the global namespace
return(__xcodeml_identity<__tuple_cat<class::std::__1::tuple<...>,class::std::__1::__tuple_indices<...>,typename __make_tuple_indices<expression,0>::type> >::t()(__xcodeml_identity<class::std::__1::tuple<...> >::t(),(std::__1::__xcodeml_template_type_0_0(__t0)),(std::__1::__xcodeml_template_type_0_1(__tpls))));
                                                                                                                                                            ~~^
vec.cpp:7562:205: error: expected expression
return(__xcodeml_identity<__tuple_cat<class::std::__1::tuple<...>,class::std::__1::__tuple_indices<...>,typename __make_tuple_indices<expression,0>::type> >::t()(__xcodeml_identity<class::std::__1::tuple<...> >::t(),(std::__1::__xcodeml_template_type_0_0(__t0)),(std::__1::__xcodeml_template_type_0_1(__tpls))));
                                                                                                                                                                                                            ^
vec.cpp:7562:210: error: expected identifier
return(__xcodeml_identity<__tuple_cat<class::std::__1::tuple<...>,class::std::__1::__tuple_indices<...>,typename __make_tuple_indices<expression,0>::type> >::t()(__xcodeml_identity<class::std::__1::tuple<...> >::t(),(std::__1::__xcodeml_template_type_0_0(__t0)),(std::__1::__xcodeml_template_type_0_1(__tpls))));
                                                                                                                                                                                                                 ^
vec.cpp:7562:218: error: expected ')'
return(__xcodeml_identity<__tuple_cat<class::std::__1::tuple<...>,class::std::__1::__tuple_indices<...>,typename __make_tuple_indices<expression,0>::type> >::t()(__xcodeml_identity<class::std::__1::tuple<...> >::t(),(std::__1::__xcodeml_template_type_0_0(__t0)),(std::__1::__xcodeml_template_type_0_1(__tpls))));
                                                                                                                                                                                                                         ^
vec.cpp:7562:217: note: to match this '('
return(__xcodeml_identity<__tuple_cat<class::std::__1::tuple<...>,class::std::__1::__tuple_indices<...>,typename __make_tuple_indices<expression,0>::type> >::t()(__xcodeml_identity<class::std::__1::tuple<...> >::t(),(std::__1::__xcodeml_template_type_0_0(__t0)),(std::__1::__xcodeml_template_type_0_1(__tpls))));
                                                                                                                                                                                                                        ^
vec.cpp:7564:111: error: expected expression
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class uses_allocator<tuple<...>,__xcodeml_template_type_0_1>:public integral_constant<bool,1>{}
                                                                                                              ^
vec.cpp:7564:111: error: expected expression
vec.cpp:7564:115: error: expected a type
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class uses_allocator<tuple<...>,__xcodeml_template_type_0_1>:public integral_constant<bool,1>{}
                                                                                                                  ^
vec.cpp:7566:120: error: use of undeclared identifier 'pair'
template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1,unsigned long _I1,unsigned long _I2>pair::pair(class::std::__1::piecewise_construct_t,tuple<...>,tuple<...>,__tuple_indices<...>,__tuple_indices<...>):first((std::__1::__xcodeml_template_type_1_0((std::__1::_I1(__first_args))))),second((std::__1::__xcodeml_template_type_1_1((std::__1::_I2(__second_args))))){}
                                                                                                                       ^
vec.cpp:7566:176: error: expected expression
template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1,unsigned long _I1,unsigned long _I2>pair::pair(class::std::__1::piecewise_construct_t,tuple<...>,tuple<...>,__tuple_indices<...>,__tuple_indices<...>):first((std::__1::__xcodeml_template_type_1_0((std::__1::_I1(__first_args))))),second((std::__1::__xcodeml_template_type_1_1((std::__1::_I2(__second_args))))){}
                                                                                                                                                                               ^
vec.cpp:7566:187: error: expected expression
template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1,unsigned long _I1,unsigned long _I2>pair::pair(class::std::__1::piecewise_construct_t,tuple<...>,tuple<...>,__tuple_indices<...>,__tuple_indices<...>):first((std::__1::__xcodeml_template_type_1_0((std::__1::_I1(__first_args))))),second((std::__1::__xcodeml_template_type_1_1((std::__1::_I2(__second_args))))){}
                                                                                                                                                                                          ^
vec.cpp:7566:208: error: expected expression
template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1,unsigned long _I1,unsigned long _I2>pair::pair(class::std::__1::piecewise_construct_t,tuple<...>,tuple<...>,__tuple_indices<...>,__tuple_indices<...>):first((std::__1::__xcodeml_template_type_1_0((std::__1::_I1(__first_args))))),second((std::__1::__xcodeml_template_type_1_1((std::__1::_I2(__second_args))))){}
                                                                                                                                                                                                               ^
vec.cpp:7566:229: error: expected expression
template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1,unsigned long _I1,unsigned long _I2>pair::pair(class::std::__1::piecewise_construct_t,tuple<...>,tuple<...>,__tuple_indices<...>,__tuple_indices<...>):first((std::__1::__xcodeml_template_type_1_0((std::__1::_I1(__first_args))))),second((std::__1::__xcodeml_template_type_1_1((std::__1::_I2(__second_args))))){}
                                                                                                                                                                                                                                    ^
vec.cpp:7568:1: error: extraneous closing brace ('}')
}
^
vec.cpp:7582:40: error: expected class name
namespace std{class logic_error:public exception{private:
                                       ^
vec.cpp:7593:28: error: expected class name
class runtime_error:public exception{private:
                           ^
vec.cpp:7672:1: error: 'is_same' is not a class, namespace, or enumeration
is_same::value"unexpected underlying type for std::memory_order";
^
vec.cpp:873:90: note: 'is_same' declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class is_same:public integral_constant<bool,0>{}
                                                                                         ^
vec.cpp:7672:15: error: expected unqualified-id
is_same::value"unexpected underlying type for std::memory_order";
              ^
vec.cpp:7675:8: warning: declaration does not declare anything [-Wmissing-declarations]
public:void/*__a_value*/;
       ^~~~
vec.cpp:7674:66: error: member initializer '__a_value' does not name a non-static data member or base class
public:__cxx_atomic_base_impl(__xcodeml_template_type_0_0 value):__a_value(value){}
                                                                 ^~~~~~~~~~~~~~~~
vec.cpp:7680:8: warning: declaration does not declare anything [-Wmissing-declarations]
public:void/*__a_value*/;
       ^~~~
vec.cpp:7679:43: error: member initializer '__a_value' does not name a non-static data member or base class
public:__cxx_atomic_base_impl(bool value):__a_value(value){}
                                          ^~~~~~~~~~~~~~~~
vec.cpp:7687:178: error: use of undeclared identifier '__a'
template<typename __xcodeml_template_type_0_0>void __cxx_atomic_init(__cxx_atomic_base_impl<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __val){(__c11_atomic_init((&__a.__a_value),__val));
                                                                                                                                                                                 ^
vec.cpp:7689:52: error: redefinition of '__cxx_atomic_init'
template<typename __xcodeml_template_type_0_0>void __cxx_atomic_init(__cxx_atomic_base_impl<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __val){(__c11_atomic_init((&__a.__a_value),__val));
                                                   ^
vec.cpp:7687:52: note: previous definition is here
template<typename __xcodeml_template_type_0_0>void __cxx_atomic_init(__cxx_atomic_base_impl<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __val){(__c11_atomic_init((&__a.__a_value),__val));
                                                   ^
vec.cpp:7689:178: error: use of undeclared identifier '__a'
template<typename __xcodeml_template_type_0_0>void __cxx_atomic_init(__cxx_atomic_base_impl<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __val){(__c11_atomic_init((&__a.__a_value),__val));
                                                                                                                                                                                 ^
vec.cpp:7691:206: error: use of undeclared identifier '__a'
template<typename __xcodeml_template_type_0_0>void __cxx_atomic_store(__cxx_atomic_base_impl<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __val,enum memory_order __order){(__c11_atomic_store((&__a.__a_value),__val,static_cast<unsigned int>(__order)));
                                                                                                                                                                                                             ^
vec.cpp:7693:42: error: template '__cxx_atomic_base_impl' cannot be referenced with a class specifier
template <>void __cxx_atomic_store(class __cxx_atomic_base_impl volatile(*__a),bool __val,enum memory_order __order){(&__a->__a_value)static_cast<unsigned int>(__order)__val;
                                         ^
vec.cpp:7673:53: note: declared here
template<typename __xcodeml_template_type_0_0>class __cxx_atomic_base_impl{public:__cxx_atomic_base_impl();
                                                    ^
vec.cpp:7695:52: error: redefinition of '__cxx_atomic_store'
template<typename __xcodeml_template_type_0_0>void __cxx_atomic_store(__cxx_atomic_base_impl<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __val,enum memory_order __order){(__c11_atomic_store((&__a.__a_value),__val,static_cast<unsigned int>(__order)));
                                                   ^
vec.cpp:7691:52: note: previous definition is here
template<typename __xcodeml_template_type_0_0>void __cxx_atomic_store(__cxx_atomic_base_impl<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __val,enum memory_order __order){(__c11_atomic_store((&__a.__a_value),__val,static_cast<unsigned int>(__order)));
                                                   ^
vec.cpp:7695:206: error: use of undeclared identifier '__a'
template<typename __xcodeml_template_type_0_0>void __cxx_atomic_store(__cxx_atomic_base_impl<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __val,enum memory_order __order){(__c11_atomic_store((&__a.__a_value),__val,static_cast<unsigned int>(__order)));
                                                                                                                                                                                                             ^
vec.cpp:7697:17: error: no function template matches function template specialization '__cxx_atomic_store'
template <>void __cxx_atomic_store(class::std::__1::__cxx_atomic_base_impl<bool>(*__a),bool __val,enum memory_order __order){(&__a->__a_value)static_cast<unsigned int>(__order)__val;
                ^
vec.cpp:7695:52: note: candidate template ignored: could not match '__cxx_atomic_base_impl<type-parameter-0-0>' against 'std::__1::__cxx_atomic_base_impl<bool> *'
template<typename __xcodeml_template_type_0_0>void __cxx_atomic_store(__cxx_atomic_base_impl<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __val,enum memory_order __order){(__c11_atomic_store((&__a.__a_value),__val,static_cast<unsigned int>(__order)));
                                                   ^
vec.cpp:7697:133: error: no member named '__a_value' in 'std::__1::__cxx_atomic_base_impl<bool>'
template <>void __cxx_atomic_store(class::std::__1::__cxx_atomic_base_impl<bool>(*__a),bool __val,enum memory_order __order){(&__a->__a_value)static_cast<unsigned int>(__order)__val;
                                                                                                                               ~~~  ^
vec.cpp:7699:221: error: expected expression
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0 __cxx_atomic_load(__cxx_atomic_base_impl<__xcodeml_template_type_0_0>,enum memory_order __order){using __ptr_type=typename remove_const<decltype ()>::type(*);
                                                                                                                                                                                                                            ^
vec.cpp:7699:225: error: expected ';' after alias declaration
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0 __cxx_atomic_load(__cxx_atomic_base_impl<__xcodeml_template_type_0_0>,enum memory_order __order){using __ptr_type=typename remove_const<decltype ()>::type(*);
                                                                                                                                                                                                                                ^
                                                                                                                                                                                                                                ;
vec.cpp:7700:69: error: expected expression
return(__c11_atomic_load(const_cast<typename remove_const<decltype ()>::type(*)>((&__a.__a_value)),static_cast<unsigned int>(__order)));
                                                                    ^
vec.cpp:7700:73: error: expected '>'
return(__c11_atomic_load(const_cast<typename remove_const<decltype ()>::type(*)>((&__a.__a_value)),static_cast<unsigned int>(__order)));
                                                                        ^
                                                                        >
vec.cpp:7700:36: note: to match this '<'
return(__c11_atomic_load(const_cast<typename remove_const<decltype ()>::type(*)>((&__a.__a_value)),static_cast<unsigned int>(__order)));
                                   ^
vec.cpp:7702:75: error: redefinition of '__cxx_atomic_load'
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0 __cxx_atomic_load(__cxx_atomic_base_impl<__xcodeml_template_type_0_0>,enum memory_order __order){using __ptr_type=typename remove_const<decltype ()>::type(*);
                                                                          ^
vec.cpp:7699:75: note: previous definition is here
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0 __cxx_atomic_load(__cxx_atomic_base_impl<__xcodeml_template_type_0_0>,enum memory_order __order){using __ptr_type=typename remove_const<decltype ()>::type(*);
                                                                          ^
vec.cpp:7702:221: error: expected expression
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0 __cxx_atomic_load(__cxx_atomic_base_impl<__xcodeml_template_type_0_0>,enum memory_order __order){using __ptr_type=typename remove_const<decltype ()>::type(*);
                                                                                                                                                                                                                            ^
vec.cpp:7702:225: error: expected ';' after alias declaration
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0 __cxx_atomic_load(__cxx_atomic_base_impl<__xcodeml_template_type_0_0>,enum memory_order __order){using __ptr_type=typename remove_const<decltype ()>::type(*);
                                                                                                                                                                                                                                ^
                                                                                                                                                                                                                                ;
vec.cpp:7703:69: error: expected expression
return(__c11_atomic_load(const_cast<typename remove_const<decltype ()>::type(*)>((&__a.__a_value)),static_cast<unsigned int>(__order)));
                                                                    ^
vec.cpp:7703:73: error: expected '>'
return(__c11_atomic_load(const_cast<typename remove_const<decltype ()>::type(*)>((&__a.__a_value)),static_cast<unsigned int>(__order)));
                                                                        ^
                                                                        >
vec.cpp:7703:36: note: to match this '<'
return(__c11_atomic_load(const_cast<typename remove_const<decltype ()>::type(*)>((&__a.__a_value)),static_cast<unsigned int>(__order)));
                                   ^
vec.cpp:7705:243: error: use of undeclared identifier '__a'
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0 __cxx_atomic_exchange(__cxx_atomic_base_impl<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __value,enum memory_order __order){return(__c11_atomic_exchange((&__a.__a_value),__value,static_cast<unsigned int>(__order)));
                                                                                                                                                                                                                                                  ^
vec.cpp:7707:45: error: template '__cxx_atomic_base_impl' cannot be referenced with a class specifier
template <>bool __cxx_atomic_exchange(class __cxx_atomic_base_impl volatile(*__a),bool __value,enum memory_order __order){return(&__a->__a_value)static_cast<unsigned int>(__order)__value;
                                            ^
vec.cpp:7673:53: note: declared here
template<typename __xcodeml_template_type_0_0>class __cxx_atomic_base_impl{public:__cxx_atomic_base_impl();
                                                    ^
vec.cpp:7709:75: error: redefinition of '__cxx_atomic_exchange'
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0 __cxx_atomic_exchange(__cxx_atomic_base_impl<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __value,enum memory_order __order){return(__c11_atomic_exchange((&__a.__a_value),__value,static_cast<unsigned int>(__order)));
                                                                          ^
vec.cpp:7705:75: note: previous definition is here
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0 __cxx_atomic_exchange(__cxx_atomic_base_impl<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __value,enum memory_order __order){return(__c11_atomic_exchange((&__a.__a_value),__value,static_cast<unsigned int>(__order)));
                                                                          ^
vec.cpp:7709:243: error: use of undeclared identifier '__a'
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0 __cxx_atomic_exchange(__cxx_atomic_base_impl<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __value,enum memory_order __order){return(__c11_atomic_exchange((&__a.__a_value),__value,static_cast<unsigned int>(__order)));
                                                                                                                                                                                                                                                  ^
vec.cpp:7711:17: error: no function template matches function template specialization '__cxx_atomic_exchange'
template <>bool __cxx_atomic_exchange(class::std::__1::__cxx_atomic_base_impl<bool>(*__a),bool __value,enum memory_order __order){return(&__a->__a_value)static_cast<unsigned int>(__order)__value;
                ^
vec.cpp:7709:75: note: candidate template ignored: could not match '__cxx_atomic_base_impl<type-parameter-0-0>' against 'std::__1::__cxx_atomic_base_impl<bool> *'
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0 __cxx_atomic_exchange(__cxx_atomic_base_impl<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __value,enum memory_order __order){return(__c11_atomic_exchange((&__a.__a_value),__value,static_cast<unsigned int>(__order)));
                                                                          ^
vec.cpp:7711:144: error: no member named '__a_value' in 'std::__1::__cxx_atomic_base_impl<bool>'
template <>bool __cxx_atomic_exchange(class::std::__1::__cxx_atomic_base_impl<bool>(*__a),bool __value,enum memory_order __order){return(&__a->__a_value)static_cast<unsigned int>(__order)__value;
                                                                                                                                          ~~~  ^
vec.cpp:7713:321: error: use of undeclared identifier '__a'
template<typename __xcodeml_template_type_0_0>bool __cxx_atomic_compare_exchange_strong(__cxx_atomic_base_impl<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0(*__expected),__xcodeml_template_type_0_0 __value,enum memory_order __success,enum memory_order __failure){return(__c11_atomic_compare_exchange_strong((&__a.__a_value),__expected,__value,static_cast<unsigned int>(__success),static_cast<unsigned int>(__failure)));
                                                                                                                                                                                                                                                                                                                                ^
vec.cpp:7715:52: error: redefinition of '__cxx_atomic_compare_exchange_strong'
template<typename __xcodeml_template_type_0_0>bool __cxx_atomic_compare_exchange_strong(__cxx_atomic_base_impl<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0(*__expected),__xcodeml_template_type_0_0 __value,enum memory_order __success,enum memory_order __failure){return(__c11_atomic_compare_exchange_strong((&__a.__a_value),__expected,__value,static_cast<unsigned int>(__success),static_cast<unsigned int>(__failure)));
                                                   ^
vec.cpp:7713:52: note: previous definition is here
template<typename __xcodeml_template_type_0_0>bool __cxx_atomic_compare_exchange_strong(__cxx_atomic_base_impl<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0(*__expected),__xcodeml_template_type_0_0 __value,enum memory_order __success,enum memory_order __failure){return(__c11_atomic_compare_exchange_strong((&__a.__a_value),__expected,__value,static_cast<unsigned int>(__success),static_cast<unsigned int>(__failure)));
                                                   ^
vec.cpp:7715:321: error: use of undeclared identifier '__a'
template<typename __xcodeml_template_type_0_0>bool __cxx_atomic_compare_exchange_strong(__cxx_atomic_base_impl<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0(*__expected),__xcodeml_template_type_0_0 __value,enum memory_order __success,enum memory_order __failure){return(__c11_atomic_compare_exchange_strong((&__a.__a_value),__expected,__value,static_cast<unsigned int>(__success),static_cast<unsigned int>(__failure)));
                                                                                                                                                                                                                                                                                                                                ^
vec.cpp:7717:317: error: use of undeclared identifier '__a'
template<typename __xcodeml_template_type_0_0>bool __cxx_atomic_compare_exchange_weak(__cxx_atomic_base_impl<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0(*__expected),__xcodeml_template_type_0_0 __value,enum memory_order __success,enum memory_order __failure){return(__c11_atomic_compare_exchange_weak((&__a.__a_value),__expected,__value,static_cast<unsigned int>(__success),static_cast<unsigned int>(__failure)));
                                                                                                                                                                                                                                                                                                                            ^
vec.cpp:7719:52: error: redefinition of '__cxx_atomic_compare_exchange_weak'
template<typename __xcodeml_template_type_0_0>bool __cxx_atomic_compare_exchange_weak(__cxx_atomic_base_impl<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0(*__expected),__xcodeml_template_type_0_0 __value,enum memory_order __success,enum memory_order __failure){return(__c11_atomic_compare_exchange_weak((&__a.__a_value),__expected,__value,static_cast<unsigned int>(__success),static_cast<unsigned int>(__failure)));
                                                   ^
vec.cpp:7717:52: note: previous definition is here
template<typename __xcodeml_template_type_0_0>bool __cxx_atomic_compare_exchange_weak(__cxx_atomic_base_impl<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0(*__expected),__xcodeml_template_type_0_0 __value,enum memory_order __success,enum memory_order __failure){return(__c11_atomic_compare_exchange_weak((&__a.__a_value),__expected,__value,static_cast<unsigned int>(__success),static_cast<unsigned int>(__failure)));
                                                   ^
vec.cpp:7719:317: error: use of undeclared identifier '__a'
template<typename __xcodeml_template_type_0_0>bool __cxx_atomic_compare_exchange_weak(__cxx_atomic_base_impl<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0(*__expected),__xcodeml_template_type_0_0 __value,enum memory_order __success,enum memory_order __failure){return(__c11_atomic_compare_exchange_weak((&__a.__a_value),__expected,__value,static_cast<unsigned int>(__success),static_cast<unsigned int>(__failure)));
                                                                                                                                                                                                                                                                                                                            ^
vec.cpp:7721:245: error: use of undeclared identifier '__a'
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0 __cxx_atomic_fetch_add(__cxx_atomic_base_impl<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __delta,enum memory_order __order){return(__c11_atomic_fetch_add((&__a.__a_value),__delta,static_cast<unsigned int>(__order)));
                                                                                                                                                                                                                                                    ^
vec.cpp:7723:75: error: redefinition of '__cxx_atomic_fetch_add'
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0 __cxx_atomic_fetch_add(__cxx_atomic_base_impl<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __delta,enum memory_order __order){return(__c11_atomic_fetch_add((&__a.__a_value),__delta,static_cast<unsigned int>(__order)));
                                                                          ^
vec.cpp:7721:75: note: previous definition is here
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0 __cxx_atomic_fetch_add(__cxx_atomic_base_impl<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __delta,enum memory_order __order){return(__c11_atomic_fetch_add((&__a.__a_value),__delta,static_cast<unsigned int>(__order)));
                                                                          ^
vec.cpp:7723:245: error: use of undeclared identifier '__a'
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0 __cxx_atomic_fetch_add(__cxx_atomic_base_impl<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __delta,enum memory_order __order){return(__c11_atomic_fetch_add((&__a.__a_value),__delta,static_cast<unsigned int>(__order)));
                                                                                                                                                                                                                                                    ^
vec.cpp:7725:227: error: use of undeclared identifier '__a'
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0(*__cxx_atomic_fetch_add(__cxx_atomic_base_impl<__xcodeml_template_type_0_0(*)>,long __delta,enum memory_order __order)){return(__c11_atomic_fetch_add((&__a.__a_value),__delta,static_cast<unsigned int>(__order)));
                                                                                                                                                                                                                                  ^
vec.cpp:7727:76: error: redefinition of '__cxx_atomic_fetch_add'
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0(*__cxx_atomic_fetch_add(__cxx_atomic_base_impl<__xcodeml_template_type_0_0(*)>,long __delta,enum memory_order __order)){return(__c11_atomic_fetch_add((&__a.__a_value),__delta,static_cast<unsigned int>(__order)));
                                                                           ^
vec.cpp:7725:76: note: previous definition is here
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0(*__cxx_atomic_fetch_add(__cxx_atomic_base_impl<__xcodeml_template_type_0_0(*)>,long __delta,enum memory_order __order)){return(__c11_atomic_fetch_add((&__a.__a_value),__delta,static_cast<unsigned int>(__order)));
                                                                           ^
vec.cpp:7727:227: error: use of undeclared identifier '__a'
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0(*__cxx_atomic_fetch_add(__cxx_atomic_base_impl<__xcodeml_template_type_0_0(*)>,long __delta,enum memory_order __order)){return(__c11_atomic_fetch_add((&__a.__a_value),__delta,static_cast<unsigned int>(__order)));
                                                                                                                                                                                                                                  ^
vec.cpp:7729:245: error: use of undeclared identifier '__a'
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0 __cxx_atomic_fetch_sub(__cxx_atomic_base_impl<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __delta,enum memory_order __order){return(__c11_atomic_fetch_sub((&__a.__a_value),__delta,static_cast<unsigned int>(__order)));
                                                                                                                                                                                                                                                    ^
vec.cpp:7731:75: error: redefinition of '__cxx_atomic_fetch_sub'
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0 __cxx_atomic_fetch_sub(__cxx_atomic_base_impl<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __delta,enum memory_order __order){return(__c11_atomic_fetch_sub((&__a.__a_value),__delta,static_cast<unsigned int>(__order)));
                                                                          ^
vec.cpp:7729:75: note: previous definition is here
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0 __cxx_atomic_fetch_sub(__cxx_atomic_base_impl<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __delta,enum memory_order __order){return(__c11_atomic_fetch_sub((&__a.__a_value),__delta,static_cast<unsigned int>(__order)));
                                                                          ^
vec.cpp:7731:245: error: use of undeclared identifier '__a'
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0 __cxx_atomic_fetch_sub(__cxx_atomic_base_impl<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __delta,enum memory_order __order){return(__c11_atomic_fetch_sub((&__a.__a_value),__delta,static_cast<unsigned int>(__order)));
                                                                                                                                                                                                                                                    ^
vec.cpp:7733:227: error: use of undeclared identifier '__a'
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0(*__cxx_atomic_fetch_sub(__cxx_atomic_base_impl<__xcodeml_template_type_0_0(*)>,long __delta,enum memory_order __order)){return(__c11_atomic_fetch_sub((&__a.__a_value),__delta,static_cast<unsigned int>(__order)));
                                                                                                                                                                                                                                  ^
vec.cpp:7735:76: error: redefinition of '__cxx_atomic_fetch_sub'
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0(*__cxx_atomic_fetch_sub(__cxx_atomic_base_impl<__xcodeml_template_type_0_0(*)>,long __delta,enum memory_order __order)){return(__c11_atomic_fetch_sub((&__a.__a_value),__delta,static_cast<unsigned int>(__order)));
                                                                           ^
vec.cpp:7733:76: note: previous definition is here
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0(*__cxx_atomic_fetch_sub(__cxx_atomic_base_impl<__xcodeml_template_type_0_0(*)>,long __delta,enum memory_order __order)){return(__c11_atomic_fetch_sub((&__a.__a_value),__delta,static_cast<unsigned int>(__order)));
                                                                           ^
vec.cpp:7735:227: error: use of undeclared identifier '__a'
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0(*__cxx_atomic_fetch_sub(__cxx_atomic_base_impl<__xcodeml_template_type_0_0(*)>,long __delta,enum memory_order __order)){return(__c11_atomic_fetch_sub((&__a.__a_value),__delta,static_cast<unsigned int>(__order)));
                                                                                                                                                                                                                                  ^
vec.cpp:7737:247: error: use of undeclared identifier '__a'
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0 __cxx_atomic_fetch_and(__cxx_atomic_base_impl<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __pattern,enum memory_order __order){return(__c11_atomic_fetch_and((&__a.__a_value),__pattern,static_cast<unsigned int>(__order)));
                                                                                                                                                                                                                                                      ^
vec.cpp:7739:75: error: redefinition of '__cxx_atomic_fetch_and'
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0 __cxx_atomic_fetch_and(__cxx_atomic_base_impl<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __pattern,enum memory_order __order){return(__c11_atomic_fetch_and((&__a.__a_value),__pattern,static_cast<unsigned int>(__order)));
                                                                          ^
vec.cpp:7737:75: note: previous definition is here
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0 __cxx_atomic_fetch_and(__cxx_atomic_base_impl<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __pattern,enum memory_order __order){return(__c11_atomic_fetch_and((&__a.__a_value),__pattern,static_cast<unsigned int>(__order)));
                                                                          ^
vec.cpp:7739:247: error: use of undeclared identifier '__a'
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0 __cxx_atomic_fetch_and(__cxx_atomic_base_impl<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __pattern,enum memory_order __order){return(__c11_atomic_fetch_and((&__a.__a_value),__pattern,static_cast<unsigned int>(__order)));
                                                                                                                                                                                                                                                      ^
vec.cpp:7741:245: error: use of undeclared identifier '__a'
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0 __cxx_atomic_fetch_or(__cxx_atomic_base_impl<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __pattern,enum memory_order __order){return(__c11_atomic_fetch_or((&__a.__a_value),__pattern,static_cast<unsigned int>(__order)));
                                                                                                                                                                                                                                                    ^
vec.cpp:7743:75: error: redefinition of '__cxx_atomic_fetch_or'
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0 __cxx_atomic_fetch_or(__cxx_atomic_base_impl<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __pattern,enum memory_order __order){return(__c11_atomic_fetch_or((&__a.__a_value),__pattern,static_cast<unsigned int>(__order)));
                                                                          ^
vec.cpp:7741:75: note: previous definition is here
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0 __cxx_atomic_fetch_or(__cxx_atomic_base_impl<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __pattern,enum memory_order __order){return(__c11_atomic_fetch_or((&__a.__a_value),__pattern,static_cast<unsigned int>(__order)));
                                                                          ^
vec.cpp:7743:245: error: use of undeclared identifier '__a'
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0 __cxx_atomic_fetch_or(__cxx_atomic_base_impl<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __pattern,enum memory_order __order){return(__c11_atomic_fetch_or((&__a.__a_value),__pattern,static_cast<unsigned int>(__order)));
                                                                                                                                                                                                                                                    ^
vec.cpp:7745:247: error: use of undeclared identifier '__a'
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0 __cxx_atomic_fetch_xor(__cxx_atomic_base_impl<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __pattern,enum memory_order __order){return(__c11_atomic_fetch_xor((&__a.__a_value),__pattern,static_cast<unsigned int>(__order)));
                                                                                                                                                                                                                                                      ^
vec.cpp:7747:75: error: redefinition of '__cxx_atomic_fetch_xor'
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0 __cxx_atomic_fetch_xor(__cxx_atomic_base_impl<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __pattern,enum memory_order __order){return(__c11_atomic_fetch_xor((&__a.__a_value),__pattern,static_cast<unsigned int>(__order)));
                                                                          ^
vec.cpp:7745:75: note: previous definition is here
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0 __cxx_atomic_fetch_xor(__cxx_atomic_base_impl<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __pattern,enum memory_order __order){return(__c11_atomic_fetch_xor((&__a.__a_value),__pattern,static_cast<unsigned int>(__order)));
                                                                          ^
vec.cpp:7747:247: error: use of undeclared identifier '__a'
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0 __cxx_atomic_fetch_xor(__cxx_atomic_base_impl<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __pattern,enum memory_order __order){return(__c11_atomic_fetch_xor((&__a.__a_value),__pattern,static_cast<unsigned int>(__order)));
                                                                                                                                                                                                                                                      ^
vec.cpp:7752:61: error: expected class member or base class name
public:__cxx_atomic_impl(__xcodeml_template_type_0_0 value):(value){}
                                                            ^
vec.cpp:7759:182: warning: declaration does not declare anything [-Wmissing-declarations]
template<typename __xcodeml_template_type_0_0,bool=(is_integral<__xcodeml_template_type_0_0>::value&&(!is_same<__xcodeml_template_type_0_0,bool>::value))>class __atomic_base{public:__cxx_atomic_impl<__xcodeml_template_type_0_0,__cxx_atomic_base_impl<__xcodeml_template_type_0_0> >;
                                                                                                                                                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:7762:96: error: member reference base type 'const volatile class __atomic_base<__xcodeml_template_type_0_0, > (*)' is not a structure or union
public:bool is_lock_free()const{return(static_cast<class __atomic_base volatile const(*)>(this).is_lock_free());
                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~
vec.cpp:7772:69: error: expected expression
public:operator __xcodeml_template_type_0_0()const volatile{return(());
                                                                    ^
vec.cpp:7774:60: error: expected expression
public:operator __xcodeml_template_type_0_0()const{return(());
                                                           ^
vec.cpp:7797:55: error: member initializer '__a_' does not name a non-static data member or base class
public:__atomic_base(__xcodeml_template_type_0_0 __d):__a_(__d){}
                                                      ^~~~~~~~~
vec.cpp:7804:157: warning: typedef requires a name [-Wmissing-declarations]
template<typename __xcodeml_template_type_0_0>class __atomic_base<__xcodeml_template_type_0_0,1>:public __atomic_base<__xcodeml_template_type_0_0,0>{public:typedef __atomic_base<__xcodeml_template_type_0_0,0>;
                                                                                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:7806:55: error: expected class member or base class name
public:__atomic_base(__xcodeml_template_type_0_0 __d):(__d){}
                                                      ^
vec.cpp:7807:124: error: member reference base type 'volatile __atomic_base<type-parameter-0-0, true> *' is not a structure or union
public:__xcodeml_template_type_0_0 fetch_add(__xcodeml_template_type_0_0 __op,enum memory_order __m)volatile{return(((&this.__a_),__op,__m));
                                                                                                                       ~~~~^~~~~
vec.cpp:7809:116: error: member reference base type '__atomic_base<type-parameter-0-0, true> *' is not a structure or union
public:__xcodeml_template_type_0_0 fetch_add(__xcodeml_template_type_0_0 __op,enum memory_order __m){return(((&this.__a_),__op,__m));
                                                                                                               ~~~~^~~~~
vec.cpp:7811:124: error: member reference base type 'volatile __atomic_base<type-parameter-0-0, true> *' is not a structure or union
public:__xcodeml_template_type_0_0 fetch_sub(__xcodeml_template_type_0_0 __op,enum memory_order __m)volatile{return(((&this.__a_),__op,__m));
                                                                                                                       ~~~~^~~~~
vec.cpp:7813:116: error: member reference base type '__atomic_base<type-parameter-0-0, true> *' is not a structure or union
public:__xcodeml_template_type_0_0 fetch_sub(__xcodeml_template_type_0_0 __op,enum memory_order __m){return(((&this.__a_),__op,__m));
                                                                                                               ~~~~^~~~~
vec.cpp:7815:124: error: member reference base type 'volatile __atomic_base<type-parameter-0-0, true> *' is not a structure or union
public:__xcodeml_template_type_0_0 fetch_and(__xcodeml_template_type_0_0 __op,enum memory_order __m)volatile{return(((&this.__a_),__op,__m));
                                                                                                                       ~~~~^~~~~
vec.cpp:7817:116: error: member reference base type '__atomic_base<type-parameter-0-0, true> *' is not a structure or union
public:__xcodeml_template_type_0_0 fetch_and(__xcodeml_template_type_0_0 __op,enum memory_order __m){return(((&this.__a_),__op,__m));
                                                                                                               ~~~~^~~~~
vec.cpp:7819:123: error: member reference base type 'volatile __atomic_base<type-parameter-0-0, true> *' is not a structure or union
public:__xcodeml_template_type_0_0 fetch_or(__xcodeml_template_type_0_0 __op,enum memory_order __m)volatile{return(((&this.__a_),__op,__m));
                                                                                                                      ~~~~^~~~~
vec.cpp:7821:115: error: member reference base type '__atomic_base<type-parameter-0-0, true> *' is not a structure or union
public:__xcodeml_template_type_0_0 fetch_or(__xcodeml_template_type_0_0 __op,enum memory_order __m){return(((&this.__a_),__op,__m));
                                                                                                              ~~~~^~~~~
vec.cpp:7823:124: error: member reference base type 'volatile __atomic_base<type-parameter-0-0, true> *' is not a structure or union
public:__xcodeml_template_type_0_0 fetch_xor(__xcodeml_template_type_0_0 __op,enum memory_order __m)volatile{return(((&this.__a_),__op,__m));
                                                                                                                       ~~~~^~~~~
vec.cpp:7825:116: error: member reference base type '__atomic_base<type-parameter-0-0, true> *' is not a structure or union
public:__xcodeml_template_type_0_0 fetch_xor(__xcodeml_template_type_0_0 __op,enum memory_order __m){return(((&this.__a_),__op,__m));
                                                                                                               ~~~~^~~~~
vec.cpp:7867:48: error: expected class member or base class name
public:atomic(__xcodeml_template_type_0_0 __d):(__d){}
                                               ^
vec.cpp:7868:141: error: type name requires a specifier or qualifier
public:__xcodeml_template_type_0_0 operator=(__xcodeml_template_type_0_0 __d)volatile{(__atomic_base<__xcodeml_template_type_0_0,expression>::.store(__d));
                                                                                                                                            ^
vec.cpp:7868:141: error: expected ')'
vec.cpp:7868:87: note: to match this '('
public:__xcodeml_template_type_0_0 operator=(__xcodeml_template_type_0_0 __d)volatile{(__atomic_base<__xcodeml_template_type_0_0,expression>::.store(__d));
                                                                                      ^
vec.cpp:7871:133: error: type name requires a specifier or qualifier
public:__xcodeml_template_type_0_0 operator=(__xcodeml_template_type_0_0 __d){(__atomic_base<__xcodeml_template_type_0_0,expression>::.store(__d));
                                                                                                                                    ^
vec.cpp:7871:133: error: expected ')'
vec.cpp:7871:79: note: to match this '('
public:__xcodeml_template_type_0_0 operator=(__xcodeml_template_type_0_0 __d){(__atomic_base<__xcodeml_template_type_0_0,expression>::.store(__d));
                                                                              ^
vec.cpp:7876:17: error: template 'atomic' cannot be referenced with a class specifier
template<>class atomic template<>class atomic template<>class atomic template<>class atomic template<>class atomic template<>class atomic template<>class atomic template<>class atomic template<>class atomic template<>class atomic template<>class atomic template<>class atomic template<>class atomic template<>class atomic template<>class atomic;
                ^
vec.cpp:7865:53: note: declared here
template<typename __xcodeml_template_type_0_0>class atomic:public __atomic_base<__xcodeml_template_type_0_0,expression>{public:typedef __atomic_base<__xcodeml_template_type_0_0,expression>;
                                                    ^
vec.cpp:7876:24: error: expected unqualified-id
template<>class atomic template<>class atomic template<>class atomic template<>class atomic template<>class atomic template<>class atomic template<>class atomic template<>class atomic template<>class atomic template<>class atomic template<>class atomic template<>class atomic template<>class atomic template<>class atomic template<>class atomic;
                       ^
vec.cpp:7879:50: error: expected class member or base class name
public:atomic(__xcodeml_template_type_0_0(*__d)):(__d){}
                                                 ^
vec.cpp:7880:148: error: type name requires a specifier or qualifier
public:__xcodeml_template_type_0_0(*operator=(__xcodeml_template_type_0_0(*__d))volatile){(__atomic_base<__xcodeml_template_type_0_0(*),expression>::.store(__d));
                                                                                                                                                   ^
vec.cpp:7880:148: error: expected ')'
vec.cpp:7880:91: note: to match this '('
public:__xcodeml_template_type_0_0(*operator=(__xcodeml_template_type_0_0(*__d))volatile){(__atomic_base<__xcodeml_template_type_0_0(*),expression>::.store(__d));
                                                                                          ^
vec.cpp:7883:140: error: type name requires a specifier or qualifier
public:__xcodeml_template_type_0_0(*operator=(__xcodeml_template_type_0_0(*__d))){(__atomic_base<__xcodeml_template_type_0_0(*),expression>::.store(__d));
                                                                                                                                           ^
vec.cpp:7883:140: error: expected ')'
vec.cpp:7883:83: note: to match this '('
public:__xcodeml_template_type_0_0(*operator=(__xcodeml_template_type_0_0(*__d))){(__atomic_base<__xcodeml_template_type_0_0(*),expression>::.store(__d));
                                                                                  ^
vec.cpp:7886:103: error: member reference base type 'volatile atomic<type-parameter-0-0 *> *' is not a structure or union
public:__xcodeml_template_type_0_0(*fetch_add(long __op,enum memory_order __m)volatile){return(((&this.__a_),__op,__m));
                                                                                                  ~~~~^~~~~
vec.cpp:7888:95: error: member reference base type 'atomic<type-parameter-0-0 *> *' is not a structure or union
public:__xcodeml_template_type_0_0(*fetch_add(long __op,enum memory_order __m)){return(((&this.__a_),__op,__m));
                                                                                          ~~~~^~~~~
vec.cpp:7890:103: error: member reference base type 'volatile atomic<type-parameter-0-0 *> *' is not a structure or union
public:__xcodeml_template_type_0_0(*fetch_sub(long __op,enum memory_order __m)volatile){return(((&this.__a_),__op,__m));
                                                                                                  ~~~~^~~~~
vec.cpp:7892:95: error: member reference base type 'atomic<type-parameter-0-0 *> *' is not a structure or union
public:__xcodeml_template_type_0_0(*fetch_sub(long __op,enum memory_order __m)){return(((&this.__a_),__op,__m));
                                                                                          ~~~~^~~~~
vec.cpp:7902:68: warning: expression result unused [-Wunused-value]
public:__xcodeml_template_type_0_0(*operator++()volatile){return(((1)),1);
                                                                   ^
vec.cpp:7904:60: warning: expression result unused [-Wunused-value]
public:__xcodeml_template_type_0_0(*operator++()){return(((1)),1);
                                                           ^
vec.cpp:7906:68: warning: expression result unused [-Wunused-value]
public:__xcodeml_template_type_0_0(*operator--()volatile){return(((1)),1);
                                                                   ^
vec.cpp:7908:60: warning: expression result unused [-Wunused-value]
public:__xcodeml_template_type_0_0(*operator--()){return(((1)),1);
                                                           ^
vec.cpp:7910:77: warning: expression result unused [-Wunused-value]
public:__xcodeml_template_type_0_0(*operator+=(long __op)volatile){return(((__op)),__op);
                                                                            ^~~~
vec.cpp:7912:69: warning: expression result unused [-Wunused-value]
public:__xcodeml_template_type_0_0(*operator+=(long __op)){return(((__op)),__op);
                                                                    ^~~~
vec.cpp:7914:77: warning: expression result unused [-Wunused-value]
public:__xcodeml_template_type_0_0(*operator-=(long __op)volatile){return(((__op)),__op);
                                                                            ^~~~
vec.cpp:7916:69: warning: expression result unused [-Wunused-value]
public:__xcodeml_template_type_0_0(*operator-=(long __op)){return(((__op)),__op);
                                                                    ^~~~
vec.cpp:7920:116: error: use of undeclared identifier '__o'
template<typename __xcodeml_template_type_0_0>bool atomic_is_lock_free(atomic<__xcodeml_template_type_0_0>){return(__o.is_lock_free());
                                                                                                                   ^
vec.cpp:7922:52: error: redefinition of 'atomic_is_lock_free'
template<typename __xcodeml_template_type_0_0>bool atomic_is_lock_free(atomic<__xcodeml_template_type_0_0>){return(__o.is_lock_free());
                                                   ^
vec.cpp:7920:52: note: previous definition is here
template<typename __xcodeml_template_type_0_0>bool atomic_is_lock_free(atomic<__xcodeml_template_type_0_0>){return(__o.is_lock_free());
                                                   ^
vec.cpp:7922:116: error: use of undeclared identifier '__o'
template<typename __xcodeml_template_type_0_0>bool atomic_is_lock_free(atomic<__xcodeml_template_type_0_0>){return(__o.is_lock_free());
                                                                                                                   ^
vec.cpp:7924:137: error: use of undeclared identifier '__o'
template<typename __xcodeml_template_type_0_0>void atomic_init(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __d){(((&__o.__a_),__d));
                                                                                                                                        ^
vec.cpp:7926:52: error: redefinition of 'atomic_init'
template<typename __xcodeml_template_type_0_0>void atomic_init(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __d){(((&__o.__a_),__d));
                                                   ^
vec.cpp:7924:52: note: previous definition is here
template<typename __xcodeml_template_type_0_0>void atomic_init(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __d){(((&__o.__a_),__d));
                                                   ^
vec.cpp:7926:137: error: use of undeclared identifier '__o'
template<typename __xcodeml_template_type_0_0>void atomic_init(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __d){(((&__o.__a_),__d));
                                                                                                                                        ^
vec.cpp:7928:135: error: use of undeclared identifier '__o'
template<typename __xcodeml_template_type_0_0>void atomic_store(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __d){(__o.store(__d));
                                                                                                                                      ^
vec.cpp:7930:52: error: redefinition of 'atomic_store'
template<typename __xcodeml_template_type_0_0>void atomic_store(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __d){(__o.store(__d));
                                                   ^
vec.cpp:7928:52: note: previous definition is here
template<typename __xcodeml_template_type_0_0>void atomic_store(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __d){(__o.store(__d));
                                                   ^
vec.cpp:7930:135: error: use of undeclared identifier '__o'
template<typename __xcodeml_template_type_0_0>void atomic_store(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __d){(__o.store(__d));
                                                                                                                                      ^
vec.cpp:7932:166: error: use of undeclared identifier '__o'
template<typename __xcodeml_template_type_0_0>void atomic_store_explicit(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __d,enum memory_order __m){(__o.store(__d,__m));
                                                                                                                                                                     ^
vec.cpp:7934:52: error: redefinition of 'atomic_store_explicit'
template<typename __xcodeml_template_type_0_0>void atomic_store_explicit(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __d,enum memory_order __m){(__o.store(__d,__m));
                                                   ^
vec.cpp:7932:52: note: previous definition is here
template<typename __xcodeml_template_type_0_0>void atomic_store_explicit(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __d,enum memory_order __m){(__o.store(__d,__m));
                                                   ^
vec.cpp:7934:166: error: use of undeclared identifier '__o'
template<typename __xcodeml_template_type_0_0>void atomic_store_explicit(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __d,enum memory_order __m){(__o.store(__d,__m));
                                                                                                                                                                     ^
vec.cpp:7936:131: error: use of undeclared identifier '__o'
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0 atomic_load(atomic<__xcodeml_template_type_0_0>){return(__o.load());
                                                                                                                                  ^
vec.cpp:7938:75: error: redefinition of 'atomic_load'
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0 atomic_load(atomic<__xcodeml_template_type_0_0>){return(__o.load());
                                                                          ^
vec.cpp:7936:75: note: previous definition is here
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0 atomic_load(atomic<__xcodeml_template_type_0_0>){return(__o.load());
                                                                          ^
vec.cpp:7938:131: error: use of undeclared identifier '__o'
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0 atomic_load(atomic<__xcodeml_template_type_0_0>){return(__o.load());
                                                                                                                                  ^
vec.cpp:7940:162: error: use of undeclared identifier '__o'
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0 atomic_load_explicit(atomic<__xcodeml_template_type_0_0>,enum memory_order __m){return(__o.load(__m));
                                                                                                                                                                 ^
vec.cpp:7942:75: error: redefinition of 'atomic_load_explicit'
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0 atomic_load_explicit(atomic<__xcodeml_template_type_0_0>,enum memory_order __m){return(__o.load(__m));
                                                                          ^
vec.cpp:7940:75: note: previous definition is here
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0 atomic_load_explicit(atomic<__xcodeml_template_type_0_0>,enum memory_order __m){return(__o.load(__m));
                                                                          ^
vec.cpp:7942:162: error: use of undeclared identifier '__o'
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0 atomic_load_explicit(atomic<__xcodeml_template_type_0_0>,enum memory_order __m){return(__o.load(__m));
                                                                                                                                                                 ^
vec.cpp:7944:167: error: use of undeclared identifier '__o'
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0 atomic_exchange(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __d){return(__o.exchange(__d));
                                                                                                                                                                      ^
vec.cpp:7946:75: error: redefinition of 'atomic_exchange'
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0 atomic_exchange(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __d){return(__o.exchange(__d));
                                                                          ^
vec.cpp:7944:75: note: previous definition is here
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0 atomic_exchange(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __d){return(__o.exchange(__d));
                                                                          ^
vec.cpp:7946:167: error: use of undeclared identifier '__o'
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0 atomic_exchange(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __d){return(__o.exchange(__d));
                                                                                                                                                                      ^
vec.cpp:7948:198: error: use of undeclared identifier '__o'
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0 atomic_exchange_explicit(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __d,enum memory_order __m){return(__o.exchange(__d,__m));
                                                                                                                                                                                                     ^
vec.cpp:7950:75: error: redefinition of 'atomic_exchange_explicit'
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0 atomic_exchange_explicit(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __d,enum memory_order __m){return(__o.exchange(__d,__m));
                                                                          ^
vec.cpp:7948:75: note: previous definition is here
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0 atomic_exchange_explicit(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __d,enum memory_order __m){return(__o.exchange(__d,__m));
                                                                          ^
vec.cpp:7950:198: error: use of undeclared identifier '__o'
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0 atomic_exchange_explicit(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __d,enum memory_order __m){return(__o.exchange(__d,__m));
                                                                                                                                                                                                     ^
vec.cpp:7952:191: error: use of undeclared identifier '__o'
template<typename __xcodeml_template_type_0_0>bool atomic_compare_exchange_weak(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0(*__e),__xcodeml_template_type_0_0 __d){return(__o.compare_exchange_weak((*__e),__d));
                                                                                                                                                                                              ^
vec.cpp:7954:52: error: redefinition of 'atomic_compare_exchange_weak'
template<typename __xcodeml_template_type_0_0>bool atomic_compare_exchange_weak(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0(*__e),__xcodeml_template_type_0_0 __d){return(__o.compare_exchange_weak((*__e),__d));
                                                   ^
vec.cpp:7952:52: note: previous definition is here
template<typename __xcodeml_template_type_0_0>bool atomic_compare_exchange_weak(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0(*__e),__xcodeml_template_type_0_0 __d){return(__o.compare_exchange_weak((*__e),__d));
                                                   ^
vec.cpp:7954:191: error: use of undeclared identifier '__o'
template<typename __xcodeml_template_type_0_0>bool atomic_compare_exchange_weak(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0(*__e),__xcodeml_template_type_0_0 __d){return(__o.compare_exchange_weak((*__e),__d));
                                                                                                                                                                                              ^
vec.cpp:7956:193: error: use of undeclared identifier '__o'
template<typename __xcodeml_template_type_0_0>bool atomic_compare_exchange_strong(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0(*__e),__xcodeml_template_type_0_0 __d){return(__o.compare_exchange_strong((*__e),__d));
                                                                                                                                                                                                ^
vec.cpp:7958:52: error: redefinition of 'atomic_compare_exchange_strong'
template<typename __xcodeml_template_type_0_0>bool atomic_compare_exchange_strong(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0(*__e),__xcodeml_template_type_0_0 __d){return(__o.compare_exchange_strong((*__e),__d));
                                                   ^
vec.cpp:7956:52: note: previous definition is here
template<typename __xcodeml_template_type_0_0>bool atomic_compare_exchange_strong(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0(*__e),__xcodeml_template_type_0_0 __d){return(__o.compare_exchange_strong((*__e),__d));
                                                   ^
vec.cpp:7958:193: error: use of undeclared identifier '__o'
template<typename __xcodeml_template_type_0_0>bool atomic_compare_exchange_strong(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0(*__e),__xcodeml_template_type_0_0 __d){return(__o.compare_exchange_strong((*__e),__d));
                                                                                                                                                                                                ^
vec.cpp:7960:244: error: use of undeclared identifier '__o'
template<typename __xcodeml_template_type_0_0>bool atomic_compare_exchange_weak_explicit(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0(*__e),__xcodeml_template_type_0_0 __d,enum memory_order __s,enum memory_order __f){return(__o.compare_exchange_weak((*__e),__d,__s,__f));
                                                                                                                                                                                                                                                   ^
vec.cpp:7962:52: error: redefinition of 'atomic_compare_exchange_weak_explicit'
template<typename __xcodeml_template_type_0_0>bool atomic_compare_exchange_weak_explicit(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0(*__e),__xcodeml_template_type_0_0 __d,enum memory_order __s,enum memory_order __f){return(__o.compare_exchange_weak((*__e),__d,__s,__f));
                                                   ^
vec.cpp:7960:52: note: previous definition is here
template<typename __xcodeml_template_type_0_0>bool atomic_compare_exchange_weak_explicit(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0(*__e),__xcodeml_template_type_0_0 __d,enum memory_order __s,enum memory_order __f){return(__o.compare_exchange_weak((*__e),__d,__s,__f));
                                                   ^
vec.cpp:7962:244: error: use of undeclared identifier '__o'
template<typename __xcodeml_template_type_0_0>bool atomic_compare_exchange_weak_explicit(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0(*__e),__xcodeml_template_type_0_0 __d,enum memory_order __s,enum memory_order __f){return(__o.compare_exchange_weak((*__e),__d,__s,__f));
                                                                                                                                                                                                                                                   ^
vec.cpp:7964:246: error: use of undeclared identifier '__o'
template<typename __xcodeml_template_type_0_0>bool atomic_compare_exchange_strong_explicit(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0(*__e),__xcodeml_template_type_0_0 __d,enum memory_order __s,enum memory_order __f){return(__o.compare_exchange_strong((*__e),__d,__s,__f));
                                                                                                                                                                                                                                                     ^
vec.cpp:7966:52: error: redefinition of 'atomic_compare_exchange_strong_explicit'
template<typename __xcodeml_template_type_0_0>bool atomic_compare_exchange_strong_explicit(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0(*__e),__xcodeml_template_type_0_0 __d,enum memory_order __s,enum memory_order __f){return(__o.compare_exchange_strong((*__e),__d,__s,__f));
                                                   ^
vec.cpp:7964:52: note: previous definition is here
template<typename __xcodeml_template_type_0_0>bool atomic_compare_exchange_strong_explicit(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0(*__e),__xcodeml_template_type_0_0 __d,enum memory_order __s,enum memory_order __f){return(__o.compare_exchange_strong((*__e),__d,__s,__f));
                                                   ^
vec.cpp:7966:246: error: use of undeclared identifier '__o'
template<typename __xcodeml_template_type_0_0>bool atomic_compare_exchange_strong_explicit(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0(*__e),__xcodeml_template_type_0_0 __d,enum memory_order __s,enum memory_order __f){return(__o.compare_exchange_strong((*__e),__d,__s,__f));
                                                                                                                                                                                                                                                     ^
vec.cpp:7968:107: error: definition or redeclaration of 'type' cannot name the global scope
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_add(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op){return(__o.fetch_add(__op));
                                                                                                        ~~^
vec.cpp:7968:111: error: expected ';' at end of declaration
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_add(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op){return(__o.fetch_add(__op));
                                                                                                              ^
                                                                                                              ;
vec.cpp:7968:112: error: unknown type name 'atomic_fetch_add'
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_add(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op){return(__o.fetch_add(__op));
                                                                                                               ^
vec.cpp:7968:164: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_add(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op){return(__o.fetch_add(__op));
                                                                                                                                                                   ^
vec.cpp:7968:164: error: expected ')'
vec.cpp:7968:128: note: to match this '('
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_add(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op){return(__o.fetch_add(__op));
                                                                                                                               ^
vec.cpp:7970:107: error: definition or redeclaration of 'type' cannot name the global scope
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_add(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op){return(__o.fetch_add(__op));
                                                                                                        ~~^
vec.cpp:7970:111: error: expected ';' at end of declaration
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_add(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op){return(__o.fetch_add(__op));
                                                                                                              ^
                                                                                                              ;
vec.cpp:7970:112: error: unknown type name 'atomic_fetch_add'
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_add(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op){return(__o.fetch_add(__op));
                                                                                                               ^
vec.cpp:7970:164: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_add(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op){return(__o.fetch_add(__op));
                                                                                                                                                                   ^
vec.cpp:7970:164: error: expected ')'
vec.cpp:7970:128: note: to match this '('
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_add(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op){return(__o.fetch_add(__op));
                                                                                                                               ^
vec.cpp:7972:151: error: use of undeclared identifier '__o'
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0(*atomic_fetch_add(atomic<__xcodeml_template_type_0_0(*)>,long __op)){return(__o.fetch_add(__op));
                                                                                                                                                      ^
vec.cpp:7974:76: error: redefinition of 'atomic_fetch_add'
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0(*atomic_fetch_add(atomic<__xcodeml_template_type_0_0(*)>,long __op)){return(__o.fetch_add(__op));
                                                                           ^
vec.cpp:7972:76: note: previous definition is here
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0(*atomic_fetch_add(atomic<__xcodeml_template_type_0_0(*)>,long __op)){return(__o.fetch_add(__op));
                                                                           ^
vec.cpp:7974:151: error: use of undeclared identifier '__o'
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0(*atomic_fetch_add(atomic<__xcodeml_template_type_0_0(*)>,long __op)){return(__o.fetch_add(__op));
                                                                                                                                                      ^
vec.cpp:7976:107: error: definition or redeclaration of 'type' cannot name the global scope
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_add_explicit(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op,enum memory_order __m){return(__o.fetch_add(__op,__m));
                                                                                                        ~~^
vec.cpp:7976:111: error: expected ';' at end of declaration
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_add_explicit(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op,enum memory_order __m){return(__o.fetch_add(__op,__m));
                                                                                                              ^
                                                                                                              ;
vec.cpp:7976:112: error: unknown type name 'atomic_fetch_add_explicit'
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_add_explicit(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op,enum memory_order __m){return(__o.fetch_add(__op,__m));
                                                                                                               ^
vec.cpp:7976:173: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_add_explicit(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op,enum memory_order __m){return(__o.fetch_add(__op,__m));
                                                                                                                                                                            ^
vec.cpp:7976:173: error: expected ')'
vec.cpp:7976:137: note: to match this '('
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_add_explicit(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op,enum memory_order __m){return(__o.fetch_add(__op,__m));
                                                                                                                                        ^
vec.cpp:7978:107: error: definition or redeclaration of 'type' cannot name the global scope
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_add_explicit(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op,enum memory_order __m){return(__o.fetch_add(__op,__m));
                                                                                                        ~~^
vec.cpp:7978:111: error: expected ';' at end of declaration
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_add_explicit(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op,enum memory_order __m){return(__o.fetch_add(__op,__m));
                                                                                                              ^
                                                                                                              ;
vec.cpp:7978:112: error: unknown type name 'atomic_fetch_add_explicit'
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_add_explicit(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op,enum memory_order __m){return(__o.fetch_add(__op,__m));
                                                                                                               ^
vec.cpp:7978:173: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_add_explicit(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op,enum memory_order __m){return(__o.fetch_add(__op,__m));
                                                                                                                                                                            ^
vec.cpp:7978:173: error: expected ')'
vec.cpp:7978:137: note: to match this '('
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_add_explicit(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op,enum memory_order __m){return(__o.fetch_add(__op,__m));
                                                                                                                                        ^
vec.cpp:7980:182: error: use of undeclared identifier '__o'
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0(*atomic_fetch_add_explicit(atomic<__xcodeml_template_type_0_0(*)>,long __op,enum memory_order __m)){return(__o.fetch_add(__op,__m));
                                                                                                                                                                                     ^
vec.cpp:7982:76: error: redefinition of 'atomic_fetch_add_explicit'
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0(*atomic_fetch_add_explicit(atomic<__xcodeml_template_type_0_0(*)>,long __op,enum memory_order __m)){return(__o.fetch_add(__op,__m));
                                                                           ^
vec.cpp:7980:76: note: previous definition is here
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0(*atomic_fetch_add_explicit(atomic<__xcodeml_template_type_0_0(*)>,long __op,enum memory_order __m)){return(__o.fetch_add(__op,__m));
                                                                           ^
vec.cpp:7982:182: error: use of undeclared identifier '__o'
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0(*atomic_fetch_add_explicit(atomic<__xcodeml_template_type_0_0(*)>,long __op,enum memory_order __m)){return(__o.fetch_add(__op,__m));
                                                                                                                                                                                     ^
vec.cpp:7984:107: error: definition or redeclaration of 'type' cannot name the global scope
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_sub(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op){return(__o.fetch_sub(__op));
                                                                                                        ~~^
vec.cpp:7984:111: error: expected ';' at end of declaration
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_sub(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op){return(__o.fetch_sub(__op));
                                                                                                              ^
                                                                                                              ;
vec.cpp:7984:112: error: unknown type name 'atomic_fetch_sub'
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_sub(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op){return(__o.fetch_sub(__op));
                                                                                                               ^
vec.cpp:7984:164: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_sub(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op){return(__o.fetch_sub(__op));
                                                                                                                                                                   ^
vec.cpp:7984:164: error: expected ')'
vec.cpp:7984:128: note: to match this '('
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_sub(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op){return(__o.fetch_sub(__op));
                                                                                                                               ^
vec.cpp:7986:107: error: definition or redeclaration of 'type' cannot name the global scope
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_sub(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op){return(__o.fetch_sub(__op));
                                                                                                        ~~^
vec.cpp:7986:111: error: expected ';' at end of declaration
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_sub(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op){return(__o.fetch_sub(__op));
                                                                                                              ^
                                                                                                              ;
vec.cpp:7986:112: error: unknown type name 'atomic_fetch_sub'
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_sub(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op){return(__o.fetch_sub(__op));
                                                                                                               ^
vec.cpp:7986:164: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_sub(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op){return(__o.fetch_sub(__op));
                                                                                                                                                                   ^
vec.cpp:7986:164: error: expected ')'
vec.cpp:7986:128: note: to match this '('
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_sub(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op){return(__o.fetch_sub(__op));
                                                                                                                               ^
vec.cpp:7988:151: error: use of undeclared identifier '__o'
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0(*atomic_fetch_sub(atomic<__xcodeml_template_type_0_0(*)>,long __op)){return(__o.fetch_sub(__op));
                                                                                                                                                      ^
vec.cpp:7990:76: error: redefinition of 'atomic_fetch_sub'
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0(*atomic_fetch_sub(atomic<__xcodeml_template_type_0_0(*)>,long __op)){return(__o.fetch_sub(__op));
                                                                           ^
vec.cpp:7988:76: note: previous definition is here
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0(*atomic_fetch_sub(atomic<__xcodeml_template_type_0_0(*)>,long __op)){return(__o.fetch_sub(__op));
                                                                           ^
vec.cpp:7990:151: error: use of undeclared identifier '__o'
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0(*atomic_fetch_sub(atomic<__xcodeml_template_type_0_0(*)>,long __op)){return(__o.fetch_sub(__op));
                                                                                                                                                      ^
vec.cpp:7992:107: error: definition or redeclaration of 'type' cannot name the global scope
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_sub_explicit(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op,enum memory_order __m){return(__o.fetch_sub(__op,__m));
                                                                                                        ~~^
vec.cpp:7992:111: error: expected ';' at end of declaration
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_sub_explicit(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op,enum memory_order __m){return(__o.fetch_sub(__op,__m));
                                                                                                              ^
                                                                                                              ;
vec.cpp:7992:112: error: unknown type name 'atomic_fetch_sub_explicit'
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_sub_explicit(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op,enum memory_order __m){return(__o.fetch_sub(__op,__m));
                                                                                                               ^
vec.cpp:7992:173: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_sub_explicit(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op,enum memory_order __m){return(__o.fetch_sub(__op,__m));
                                                                                                                                                                            ^
vec.cpp:7992:173: error: expected ')'
vec.cpp:7992:137: note: to match this '('
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_sub_explicit(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op,enum memory_order __m){return(__o.fetch_sub(__op,__m));
                                                                                                                                        ^
vec.cpp:7994:107: error: definition or redeclaration of 'type' cannot name the global scope
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_sub_explicit(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op,enum memory_order __m){return(__o.fetch_sub(__op,__m));
                                                                                                        ~~^
vec.cpp:7994:111: error: expected ';' at end of declaration
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_sub_explicit(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op,enum memory_order __m){return(__o.fetch_sub(__op,__m));
                                                                                                              ^
                                                                                                              ;
vec.cpp:7994:112: error: unknown type name 'atomic_fetch_sub_explicit'
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_sub_explicit(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op,enum memory_order __m){return(__o.fetch_sub(__op,__m));
                                                                                                               ^
vec.cpp:7994:173: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_sub_explicit(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op,enum memory_order __m){return(__o.fetch_sub(__op,__m));
                                                                                                                                                                            ^
vec.cpp:7994:173: error: expected ')'
vec.cpp:7994:137: note: to match this '('
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_sub_explicit(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op,enum memory_order __m){return(__o.fetch_sub(__op,__m));
                                                                                                                                        ^
vec.cpp:7996:182: error: use of undeclared identifier '__o'
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0(*atomic_fetch_sub_explicit(atomic<__xcodeml_template_type_0_0(*)>,long __op,enum memory_order __m)){return(__o.fetch_sub(__op,__m));
                                                                                                                                                                                     ^
vec.cpp:7998:76: error: redefinition of 'atomic_fetch_sub_explicit'
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0(*atomic_fetch_sub_explicit(atomic<__xcodeml_template_type_0_0(*)>,long __op,enum memory_order __m)){return(__o.fetch_sub(__op,__m));
                                                                           ^
vec.cpp:7996:76: note: previous definition is here
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0(*atomic_fetch_sub_explicit(atomic<__xcodeml_template_type_0_0(*)>,long __op,enum memory_order __m)){return(__o.fetch_sub(__op,__m));
                                                                           ^
vec.cpp:7998:182: error: use of undeclared identifier '__o'
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0(*atomic_fetch_sub_explicit(atomic<__xcodeml_template_type_0_0(*)>,long __op,enum memory_order __m)){return(__o.fetch_sub(__op,__m));
                                                                                                                                                                                     ^
vec.cpp:8000:107: error: definition or redeclaration of 'type' cannot name the global scope
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_and(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op){return(__o.fetch_and(__op));
                                                                                                        ~~^
vec.cpp:8000:111: error: expected ';' at end of declaration
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_and(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op){return(__o.fetch_and(__op));
                                                                                                              ^
                                                                                                              ;
vec.cpp:8000:112: error: unknown type name 'atomic_fetch_and'
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_and(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op){return(__o.fetch_and(__op));
                                                                                                               ^
vec.cpp:8000:164: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_and(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op){return(__o.fetch_and(__op));
                                                                                                                                                                   ^
vec.cpp:8000:164: error: expected ')'
vec.cpp:8000:128: note: to match this '('
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_and(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op){return(__o.fetch_and(__op));
                                                                                                                               ^
vec.cpp:8002:107: error: definition or redeclaration of 'type' cannot name the global scope
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_and(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op){return(__o.fetch_and(__op));
                                                                                                        ~~^
vec.cpp:8002:111: error: expected ';' at end of declaration
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_and(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op){return(__o.fetch_and(__op));
                                                                                                              ^
                                                                                                              ;
vec.cpp:8002:112: error: unknown type name 'atomic_fetch_and'
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_and(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op){return(__o.fetch_and(__op));
                                                                                                               ^
vec.cpp:8002:164: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_and(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op){return(__o.fetch_and(__op));
                                                                                                                                                                   ^
vec.cpp:8002:164: error: expected ')'
vec.cpp:8002:128: note: to match this '('
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_and(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op){return(__o.fetch_and(__op));
                                                                                                                               ^
vec.cpp:8004:107: error: definition or redeclaration of 'type' cannot name the global scope
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_and_explicit(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op,enum memory_order __m){return(__o.fetch_and(__op,__m));
                                                                                                        ~~^
vec.cpp:8004:111: error: expected ';' at end of declaration
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_and_explicit(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op,enum memory_order __m){return(__o.fetch_and(__op,__m));
                                                                                                              ^
                                                                                                              ;
vec.cpp:8004:112: error: unknown type name 'atomic_fetch_and_explicit'
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_and_explicit(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op,enum memory_order __m){return(__o.fetch_and(__op,__m));
                                                                                                               ^
vec.cpp:8004:173: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_and_explicit(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op,enum memory_order __m){return(__o.fetch_and(__op,__m));
                                                                                                                                                                            ^
vec.cpp:8004:173: error: expected ')'
vec.cpp:8004:137: note: to match this '('
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_and_explicit(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op,enum memory_order __m){return(__o.fetch_and(__op,__m));
                                                                                                                                        ^
vec.cpp:8006:107: error: definition or redeclaration of 'type' cannot name the global scope
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_and_explicit(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op,enum memory_order __m){return(__o.fetch_and(__op,__m));
                                                                                                        ~~^
vec.cpp:8006:111: error: expected ';' at end of declaration
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_and_explicit(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op,enum memory_order __m){return(__o.fetch_and(__op,__m));
                                                                                                              ^
                                                                                                              ;
vec.cpp:8006:112: error: unknown type name 'atomic_fetch_and_explicit'
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_and_explicit(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op,enum memory_order __m){return(__o.fetch_and(__op,__m));
                                                                                                               ^
vec.cpp:8006:173: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_and_explicit(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op,enum memory_order __m){return(__o.fetch_and(__op,__m));
                                                                                                                                                                            ^
vec.cpp:8006:173: error: expected ')'
vec.cpp:8006:137: note: to match this '('
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_and_explicit(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op,enum memory_order __m){return(__o.fetch_and(__op,__m));
                                                                                                                                        ^
vec.cpp:8008:107: error: definition or redeclaration of 'type' cannot name the global scope
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_or(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op){return(__o.fetch_or(__op));
                                                                                                        ~~^
vec.cpp:8008:111: error: expected ';' at end of declaration
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_or(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op){return(__o.fetch_or(__op));
                                                                                                              ^
                                                                                                              ;
vec.cpp:8008:112: error: unknown type name 'atomic_fetch_or'
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_or(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op){return(__o.fetch_or(__op));
                                                                                                               ^
vec.cpp:8008:163: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_or(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op){return(__o.fetch_or(__op));
                                                                                                                                                                  ^
vec.cpp:8008:163: error: expected ')'
vec.cpp:8008:127: note: to match this '('
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_or(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op){return(__o.fetch_or(__op));
                                                                                                                              ^
vec.cpp:8010:107: error: definition or redeclaration of 'type' cannot name the global scope
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_or(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op){return(__o.fetch_or(__op));
                                                                                                        ~~^
vec.cpp:8010:111: error: expected ';' at end of declaration
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_or(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op){return(__o.fetch_or(__op));
                                                                                                              ^
                                                                                                              ;
vec.cpp:8010:112: error: unknown type name 'atomic_fetch_or'
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_or(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op){return(__o.fetch_or(__op));
                                                                                                               ^
vec.cpp:8010:163: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_or(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op){return(__o.fetch_or(__op));
                                                                                                                                                                  ^
vec.cpp:8010:163: error: expected ')'
vec.cpp:8010:127: note: to match this '('
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_or(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op){return(__o.fetch_or(__op));
                                                                                                                              ^
vec.cpp:8012:107: error: definition or redeclaration of 'type' cannot name the global scope
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_or_explicit(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op,enum memory_order __m){return(__o.fetch_or(__op,__m));
                                                                                                        ~~^
vec.cpp:8012:111: error: expected ';' at end of declaration
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_or_explicit(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op,enum memory_order __m){return(__o.fetch_or(__op,__m));
                                                                                                              ^
                                                                                                              ;
vec.cpp:8012:112: error: unknown type name 'atomic_fetch_or_explicit'
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_or_explicit(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op,enum memory_order __m){return(__o.fetch_or(__op,__m));
                                                                                                               ^
vec.cpp:8012:172: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_or_explicit(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op,enum memory_order __m){return(__o.fetch_or(__op,__m));
                                                                                                                                                                           ^
vec.cpp:8012:172: error: expected ')'
vec.cpp:8012:136: note: to match this '('
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_or_explicit(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op,enum memory_order __m){return(__o.fetch_or(__op,__m));
                                                                                                                                       ^
vec.cpp:8014:107: error: definition or redeclaration of 'type' cannot name the global scope
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_or_explicit(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op,enum memory_order __m){return(__o.fetch_or(__op,__m));
                                                                                                        ~~^
vec.cpp:8014:111: error: expected ';' at end of declaration
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_or_explicit(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op,enum memory_order __m){return(__o.fetch_or(__op,__m));
                                                                                                              ^
                                                                                                              ;
vec.cpp:8014:112: error: unknown type name 'atomic_fetch_or_explicit'
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_or_explicit(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op,enum memory_order __m){return(__o.fetch_or(__op,__m));
                                                                                                               ^
vec.cpp:8014:172: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_or_explicit(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op,enum memory_order __m){return(__o.fetch_or(__op,__m));
                                                                                                                                                                           ^
vec.cpp:8014:172: error: expected ')'
vec.cpp:8014:136: note: to match this '('
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_or_explicit(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op,enum memory_order __m){return(__o.fetch_or(__op,__m));
                                                                                                                                       ^
vec.cpp:8016:107: error: definition or redeclaration of 'type' cannot name the global scope
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_xor(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op){return(__o.fetch_xor(__op));
                                                                                                        ~~^
vec.cpp:8016:111: error: expected ';' at end of declaration
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_xor(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op){return(__o.fetch_xor(__op));
                                                                                                              ^
                                                                                                              ;
vec.cpp:8016:112: error: unknown type name 'atomic_fetch_xor'
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_xor(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op){return(__o.fetch_xor(__op));
                                                                                                               ^
vec.cpp:8016:164: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_xor(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op){return(__o.fetch_xor(__op));
                                                                                                                                                                   ^
vec.cpp:8016:164: error: expected ')'
vec.cpp:8016:128: note: to match this '('
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_xor(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op){return(__o.fetch_xor(__op));
                                                                                                                               ^
vec.cpp:8018:107: error: definition or redeclaration of 'type' cannot name the global scope
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_xor(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op){return(__o.fetch_xor(__op));
                                                                                                        ~~^
vec.cpp:8018:111: error: expected ';' at end of declaration
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_xor(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op){return(__o.fetch_xor(__op));
                                                                                                              ^
                                                                                                              ;
vec.cpp:8018:112: error: unknown type name 'atomic_fetch_xor'
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_xor(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op){return(__o.fetch_xor(__op));
                                                                                                               ^
vec.cpp:8018:164: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_xor(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op){return(__o.fetch_xor(__op));
                                                                                                                                                                   ^
vec.cpp:8018:164: error: expected ')'
vec.cpp:8018:128: note: to match this '('
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_xor(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op){return(__o.fetch_xor(__op));
                                                                                                                               ^
vec.cpp:8020:107: error: definition or redeclaration of 'type' cannot name the global scope
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_xor_explicit(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op,enum memory_order __m){return(__o.fetch_xor(__op,__m));
                                                                                                        ~~^
vec.cpp:8020:111: error: expected ';' at end of declaration
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_xor_explicit(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op,enum memory_order __m){return(__o.fetch_xor(__op,__m));
                                                                                                              ^
                                                                                                              ;
vec.cpp:8020:112: error: unknown type name 'atomic_fetch_xor_explicit'
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_xor_explicit(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op,enum memory_order __m){return(__o.fetch_xor(__op,__m));
                                                                                                               ^
vec.cpp:8020:173: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_xor_explicit(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op,enum memory_order __m){return(__o.fetch_xor(__op,__m));
                                                                                                                                                                            ^
vec.cpp:8020:173: error: expected ')'
vec.cpp:8020:137: note: to match this '('
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_xor_explicit(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op,enum memory_order __m){return(__o.fetch_xor(__op,__m));
                                                                                                                                        ^
vec.cpp:8022:107: error: definition or redeclaration of 'type' cannot name the global scope
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_xor_explicit(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op,enum memory_order __m){return(__o.fetch_xor(__op,__m));
                                                                                                        ~~^
vec.cpp:8022:111: error: expected ';' at end of declaration
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_xor_explicit(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op,enum memory_order __m){return(__o.fetch_xor(__op,__m));
                                                                                                              ^
                                                                                                              ;
vec.cpp:8022:112: error: unknown type name 'atomic_fetch_xor_explicit'
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_xor_explicit(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op,enum memory_order __m){return(__o.fetch_xor(__op,__m));
                                                                                                               ^
vec.cpp:8022:173: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_xor_explicit(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op,enum memory_order __m){return(__o.fetch_xor(__op,__m));
                                                                                                                                                                            ^
vec.cpp:8022:173: error: expected ')'
vec.cpp:8022:137: note: to match this '('
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type atomic_fetch_xor_explicit(atomic<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __op,enum memory_order __m){return(__o.fetch_xor(__op,__m));
                                                                                                                                        ^
vec.cpp:8025:64: error: no matching function for call to '__cxx_atomic_exchange'
public:bool test_and_set(enum memory_order __m)volatile{return(__cxx_atomic_exchange((&this->__a_),((bool)true),__m));
                                                               ^~~~~~~~~~~~~~~~~~~~~
vec.cpp:7707:17: note: candidate function not viable: no known conversion from 'volatile class ::std::__1::__cxx_atomic_impl<bool, class ::std::__1::__cxx_atomic_base_impl<bool> > *' to 'volatile int (*)' for 1st argument
template <>bool __cxx_atomic_exchange(class __cxx_atomic_base_impl volatile(*__a),bool __value,enum memory_order __order){return(&__a->__a_value)static_cast<unsigned int>(__order)__value;
                ^
vec.cpp:7711:17: note: candidate function not viable: no known conversion from 'volatile class ::std::__1::__cxx_atomic_impl<bool, class ::std::__1::__cxx_atomic_base_impl<bool> > *' to 'class ::std::__1::__cxx_atomic_base_impl<bool> (*)' for 1st argument
template <>bool __cxx_atomic_exchange(class::std::__1::__cxx_atomic_base_impl<bool>(*__a),bool __value,enum memory_order __order){return(&__a->__a_value)static_cast<unsigned int>(__order)__value;
                ^
vec.cpp:7709:75: note: candidate template ignored: could not match '__cxx_atomic_base_impl<type-parameter-0-0>' against 'volatile std::__1::__cxx_atomic_impl<bool, class ::std::__1::__cxx_atomic_base_impl<bool> > *'
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0 __cxx_atomic_exchange(__cxx_atomic_base_impl<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __value,enum memory_order __order){return(__c11_atomic_exchange((&__a.__a_value),__value,static_cast<unsigned int>(__order)));
                                                                          ^
vec.cpp:8029:51: error: no matching function for call to '__cxx_atomic_store'
public:void clear(enum memory_order __m)volatile{(__cxx_atomic_store((&this->__a_),((bool)false),__m));
                                                  ^~~~~~~~~~~~~~~~~~
vec.cpp:7693:17: note: candidate function not viable: no known conversion from 'volatile class ::std::__1::__cxx_atomic_impl<bool, class ::std::__1::__cxx_atomic_base_impl<bool> > *' to 'volatile int (*)' for 1st argument
template <>void __cxx_atomic_store(class __cxx_atomic_base_impl volatile(*__a),bool __val,enum memory_order __order){(&__a->__a_value)static_cast<unsigned int>(__order)__val;
                ^
vec.cpp:7697:17: note: candidate function not viable: no known conversion from 'volatile class ::std::__1::__cxx_atomic_impl<bool, class ::std::__1::__cxx_atomic_base_impl<bool> > *' to 'class ::std::__1::__cxx_atomic_base_impl<bool> (*)' for 1st argument
template <>void __cxx_atomic_store(class::std::__1::__cxx_atomic_base_impl<bool>(*__a),bool __val,enum memory_order __order){(&__a->__a_value)static_cast<unsigned int>(__order)__val;
                ^
vec.cpp:7695:52: note: candidate template ignored: could not match '__cxx_atomic_base_impl<type-parameter-0-0>' against 'volatile std::__1::__cxx_atomic_impl<bool, class ::std::__1::__cxx_atomic_base_impl<bool> > *'
template<typename __xcodeml_template_type_0_0>void __cxx_atomic_store(__cxx_atomic_base_impl<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_0 __val,enum memory_order __order){(__c11_atomic_store((&__a.__a_value),__val,static_cast<unsigned int>(__order)));
                                                   ^
vec.cpp:8110:68: error: cannot initialize return object of type 'long' with an lvalue of type 'const long (*)'
template <>long __libcpp_relaxed_load(long const(*__value)){return __value 0;
                                                                   ^~~~~~~
vec.cpp:8110:76: warning: expression result unused [-Wunused-value]
template <>long __libcpp_relaxed_load(long const(*__value)){return __value 0;
                                                                           ^
vec.cpp:8120:74: warning: typedef requires a name [-Wmissing-declarations]
public:template<typename __xcodeml_template_type_0_0>class rebind{public:typedef allocator<__xcodeml_template_type_0_0>;
                                                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:8130:74: warning: typedef requires a name [-Wmissing-declarations]
public:template<typename __xcodeml_template_type_0_0>class rebind{public:typedef allocator<__xcodeml_template_type_0_0>;
                                                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:8146:121: error: expected expression
template<typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __pointer_traits_element_type< <__xcodeml_template_type_0_1,...>,1>{public:typedef typename <__xcodeml_template_type_0_1,...>::element_type type;
                                                                                                                        ^
vec.cpp:8146:122: error: '__xcodeml_template_type_0_1' does not refer to a value
template<typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __pointer_traits_element_type< <__xcodeml_template_type_0_1,...>,1>{public:typedef typename <__xcodeml_template_type_0_1,...>::element_type type;
                                                                                                                         ^
vec.cpp:8146:19: note: declared here
template<typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __pointer_traits_element_type< <__xcodeml_template_type_0_1,...>,1>{public:typedef typename <__xcodeml_template_type_0_1,...>::element_type type;
                  ^
vec.cpp:8146:155: error: expected unqualified-id
template<typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __pointer_traits_element_type< <__xcodeml_template_type_0_1,...>,1>{public:typedef typename <__xcodeml_template_type_0_1,...>::element_type type;
                                                                                                                                                          ^
vec.cpp:8149:121: error: expected expression
template<typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __pointer_traits_element_type< <__xcodeml_template_type_0_1,...>,0>{public:typedef __xcodeml_template_type_0_1 type;
                                                                                                                        ^
vec.cpp:8149:122: error: '__xcodeml_template_type_0_1' does not refer to a value
template<typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __pointer_traits_element_type< <__xcodeml_template_type_0_1,...>,0>{public:typedef __xcodeml_template_type_0_1 type;
                                                                                                                         ^
vec.cpp:8149:19: note: declared here
template<typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __pointer_traits_element_type< <__xcodeml_template_type_0_1,...>,0>{public:typedef __xcodeml_template_type_0_1 type;
                  ^
vec.cpp:8149:155: error: expected unqualified-id
template<typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __pointer_traits_element_type< <__xcodeml_template_type_0_1,...>,0>{public:typedef __xcodeml_template_type_0_1 type;
                                                                                                                                                          ^
vec.cpp:8170:79: error: '__has_rebind' is not a class, namespace, or enumeration
private:template<typename __xcodeml_template_type_1_0>static class::std::__1::__has_rebind::__two __test(...)
                                                                              ^
vec.cpp:8165:90: note: '__has_rebind' declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __has_rebind{private:
                                                                                         ^
vec.cpp:8170:110: error: expected ';' at end of declaration list
private:template<typename __xcodeml_template_type_1_0>static class::std::__1::__has_rebind::__two __test(...)
                                                                                                             ^
                                                                                                             ;
vec.cpp:8177:203: warning: typedef requires a name [-Wmissing-declarations]
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,bool=__has_rebind<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>::value>class __pointer_traits_rebind{public:typedef void/*type*/;
                                                                                                                                                                                                          ^~~~~~~~~~~~
vec.cpp:8181:152: error: expected expression
template<typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3>class __pointer_traits_rebind< <__xcodeml_template_type_0_1,...>,__xcodeml_template_type_0_3,1>{public:typedef void/*type*/;
                                                                                                                                                       ^
vec.cpp:8181:153: error: '__xcodeml_template_type_0_1' does not refer to a value
template<typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3>class __pointer_traits_rebind< <__xcodeml_template_type_0_1,...>,__xcodeml_template_type_0_3,1>{public:typedef void/*type*/;
                                                                                                                                                        ^
vec.cpp:8181:19: note: declared here
template<typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3>class __pointer_traits_rebind< <__xcodeml_template_type_0_1,...>,__xcodeml_template_type_0_3,1>{public:typedef void/*type*/;
                  ^
vec.cpp:8181:213: error: a template declaration can only declare a single entity
template<typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3>class __pointer_traits_rebind< <__xcodeml_template_type_0_1,...>,__xcodeml_template_type_0_3,1>{public:typedef void/*type*/;
                                                                                                                                                                                                                    ^
vec.cpp:8184:152: error: expected expression
template<typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3>class __pointer_traits_rebind< <__xcodeml_template_type_0_1,...>,__xcodeml_template_type_0_3,0>{public:typedef<__xcodeml_template_type_0_3,...>;
                                                                                                                                                       ^
vec.cpp:8184:153: error: '__xcodeml_template_type_0_1' does not refer to a value
template<typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3>class __pointer_traits_rebind< <__xcodeml_template_type_0_1,...>,__xcodeml_template_type_0_3,0>{public:typedef<__xcodeml_template_type_0_3,...>;
                                                                                                                                                        ^
vec.cpp:8184:19: note: declared here
template<typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3>class __pointer_traits_rebind< <__xcodeml_template_type_0_1,...>,__xcodeml_template_type_0_3,0>{public:typedef<__xcodeml_template_type_0_3,...>;
                  ^
vec.cpp:8184:213: error: a template declaration can only declare a single entity
template<typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3>class __pointer_traits_rebind< <__xcodeml_template_type_0_1,...>,__xcodeml_template_type_0_3,0>{public:typedef<__xcodeml_template_type_0_3,...>;
                                                                                                                                                                                                                    ^
vec.cpp:8188:96: error: non-friend class member 'type' cannot have a qualified name
public:typedef typename __pointer_traits_element_type<__xcodeml_template_type_0_0,expression>::type element_type;
                                                                                             ~~^
vec.cpp:8188:96: error: typedef declarator cannot be qualified
public:typedef typename __pointer_traits_element_type<__xcodeml_template_type_0_0,expression>::type element_type;
                                                                                             ~~^
vec.cpp:8188:100: error: expected ';' at end of declaration list
public:typedef typename __pointer_traits_element_type<__xcodeml_template_type_0_0,expression>::type element_type;
                                                                                                   ^
                                                                                                   ;
vec.cpp:8189:99: error: non-friend class member 'type' cannot have a qualified name
public:typedef typename __pointer_traits_difference_type<__xcodeml_template_type_0_0,expression>::type difference_type;
                                                                                                ~~^
vec.cpp:8189:99: error: typedef declarator cannot be qualified
public:typedef typename __pointer_traits_difference_type<__xcodeml_template_type_0_0,expression>::type difference_type;
                                                                                                ~~^
vec.cpp:8189:103: error: expected ';' at end of declaration list
public:typedef typename __pointer_traits_difference_type<__xcodeml_template_type_0_0,expression>::type difference_type;
                                                                                                      ^
                                                                                                      ;
vec.cpp:8190:169: error: expected ';' after alias declaration
public:template<typename __xcodeml_template_type_1_0>using rebind=typename __pointer_traits_rebind<__xcodeml_template_type_0_0,__xcodeml_template_type_1_0,expression>::type;
                                                                                                                                                                        ^
                                                                                                                                                                        ;
vec.cpp:8195:205: error: parameter declarator cannot be qualified
public:static __xcodeml_template_type_0_0 pointer_to(typename conditional<expression,class::std::__1::pointer_traits::__nat,typename __pointer_traits_element_type<__xcodeml_template_type_0_0,expression>::type>::type&__r){return(__xcodeml_template_type_0_0::pointer_to(__r));
                                                                                                                                                                                                          ~~^
vec.cpp:8195:209: error: expected ')'
public:static __xcodeml_template_type_0_0 pointer_to(typename conditional<expression,class::std::__1::pointer_traits::__nat,typename __pointer_traits_element_type<__xcodeml_template_type_0_0,expression>::type>::type&__r){return(__xcodeml_template_type_0_0::pointer_to(__r));
                                                                                                                                                                                                                ^
vec.cpp:8195:53: note: to match this '('
public:static __xcodeml_template_type_0_0 pointer_to(typename conditional<expression,class::std::__1::pointer_traits::__nat,typename __pointer_traits_element_type<__xcodeml_template_type_0_0,expression>::type>::type&__r){return(__xcodeml_template_type_0_0::pointer_to(__r));
                                                    ^
vec.cpp:8195:269: error: use of undeclared identifier '__r'
public:static __xcodeml_template_type_0_0 pointer_to(typename conditional<expression,class::std::__1::pointer_traits::__nat,typename __pointer_traits_element_type<__xcodeml_template_type_0_0,expression>::type>::type&__r){return(__xcodeml_template_type_0_0::pointer_to(__r));
                                                                                                                                                                                                                                                                            ^
vec.cpp:8217:129: error: parameter declarator cannot be qualified
public:static __xcodeml_template_type_0_0(*pointer_to(typename conditional<expression,class __nat,__xcodeml_template_type_0_0>::type&__r)){return(std::__1::(__r));
                                                                                                                              ~~^
vec.cpp:8217:133: error: expected ')'
public:static __xcodeml_template_type_0_0(*pointer_to(typename conditional<expression,class __nat,__xcodeml_template_type_0_0>::type&__r)){return(std::__1::(__r));
                                                                                                                                    ^
vec.cpp:8217:54: note: to match this '('
public:static __xcodeml_template_type_0_0(*pointer_to(typename conditional<expression,class __nat,__xcodeml_template_type_0_0>::type&__r)){return(std::__1::(__r));
                                                     ^
vec.cpp:8217:157: error: expected unqualified-id
public:static __xcodeml_template_type_0_0(*pointer_to(typename conditional<expression,class __nat,__xcodeml_template_type_0_0>::type&__r)){return(std::__1::(__r));
                                                                                                                                                            ^
vec.cpp:8217:158: error: use of undeclared identifier '__r'
public:static __xcodeml_template_type_0_0(*pointer_to(typename conditional<expression,class __nat,__xcodeml_template_type_0_0>::type&__r)){return(std::__1::(__r));
                                                                                                                                                             ^
vec.cpp:8221:114: warning: typedef requires a name [-Wmissing-declarations]
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __rebind_pointer{public:typedef void/*type*/;
                                                                                                                 ^~~~~~~~~~~~
vec.cpp:8227:53: error: no member named '__builtin_new_allocator' in namespace 'std::__1'
template<>class __has_pointer_type<class::std::__1::__builtin_new_allocator::__builtin_new_deleter,void>:public integral_constant<bool,0>{}
                                        ~~~~~~~~~~~~^
vec.cpp:8235:54: error: no member named '__builtin_new_allocator' in namespace 'std::__1'
template<>class __pointer_type<void,class::std::__1::__builtin_new_allocator::__builtin_new_deleter,0>{public:typedef void(*type);
                                         ~~~~~~~~~~~~^
vec.cpp:8237:67: error: expected unqualified-id
template<>class __pointer_type<int,class::std::__1::allocator<int>,1>{public:typedef int(*type);
                                                                  ^
vec.cpp:8244:246: error: non-friend class member 'type' cannot have a qualified name
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __pointer_type{public:typedef typename __pointer_type<__xcodeml_template_type_0_0,typename remove_reference<__xcodeml_template_type_0_1>::type,expression>::type type;
                                                                                                                                                                                                                                                   ~~^
vec.cpp:8244:246: error: typedef declarator cannot be qualified
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __pointer_type{public:typedef typename __pointer_type<__xcodeml_template_type_0_0,typename remove_reference<__xcodeml_template_type_0_1>::type,expression>::type type;
                                                                                                                                                                                                                                                   ~~^
vec.cpp:8244:250: error: expected ';' at end of declaration list
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __pointer_type{public:typedef typename __pointer_type<__xcodeml_template_type_0_0,typename remove_reference<__xcodeml_template_type_0_1>::type,expression>::type type;
                                                                                                                                                                                                                                                         ^
                                                                                                                                                                                                                                                         ;
vec.cpp:8247:54: error: no member named '__builtin_new_allocator' in namespace 'std::__1'
template<>class __pointer_type<void,class::std::__1::__builtin_new_allocator::__builtin_new_deleter>{public:typedef void(*type);
                                         ~~~~~~~~~~~~^
vec.cpp:8249:68: error: expected unqualified-id
template<>class __pointer_type<int,class::std::__1::allocator<int> >{public:typedef int(*type);
                                                                   ^
vec.cpp:8264:237: warning: typedef requires a name [-Wmissing-declarations]
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __const_pointer<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1,__xcodeml_template_type_0_2,0>{public:typedef void/*type*/;
                                                                                                                                                                                                                                            ^~~~~~~~~~~~
vec.cpp:8279:171: warning: typedef requires a name [-Wmissing-declarations]
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __void_pointer<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1,0>{public:typedef void/*type*/;
                                                                                                                                                                          ^~~~~~~~~~~~
vec.cpp:8294:177: warning: typedef requires a name [-Wmissing-declarations]
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __const_void_pointer<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1,0>{public:typedef void/*type*/;
                                                                                                                                                                                ^~~~~~~~~~~~
vec.cpp:8301:183: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0>typename pointer_traits<__xcodeml_template_type_0_0>::element_type(*__to_raw_pointer(__xcodeml_template_type_0_0 __p)){return(std::__1::((__p.())));
                                                                                                                                                                                      ^
vec.cpp:8301:189: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0>typename pointer_traits<__xcodeml_template_type_0_0>::element_type(*__to_raw_pointer(__xcodeml_template_type_0_0 __p)){return(std::__1::((__p.())));
                                                                                                                                                                                            ^
vec.cpp:8303:45: error: expected ';' at end of declaration
template <>int(*__to_raw_pointer(int(*__p)))
                                            ^
                                            ;
vec.cpp:8384:79: error: '__has_rebind_other' is not a class, namespace, or enumeration
private:template<typename __xcodeml_template_type_1_0>static class::std::__1::__has_rebind_other::__two __test(...)
                                                                              ^
vec.cpp:8379:172: note: '__has_rebind_other' declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,bool=__has_rebind<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>::value>class __has_rebind_other{private:
                                                                                                                                                                           ^
vec.cpp:8384:116: error: expected ';' at end of declaration list
private:template<typename __xcodeml_template_type_1_0>static class::std::__1::__has_rebind_other::__two __test(...)
                                                                                                                   ^
                                                                                                                   ;
vec.cpp:8394:239: error: expected a qualified name after 'typename'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,bool=__has_rebind_other<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1,expression>::value>class __allocator_traits_rebind{public:typedef typename void/**/::other type;
                                                                                                                                                                                                                                              ^
vec.cpp:8394:239: error: expected member name or ';' after declaration specifiers
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,bool=__has_rebind_other<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1,expression>::value>class __allocator_traits_rebind{public:typedef typename void/**/::other type;
                                                                                                                                                                                                                             ~~~~~~~          ^
vec.cpp:8398:154: error: expected expression
template<typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3>class __allocator_traits_rebind< <__xcodeml_template_type_0_1,...>,__xcodeml_template_type_0_3,1>{public:typedef typename void/**/::other type;
                                                                                                                                                         ^
vec.cpp:8398:155: error: '__xcodeml_template_type_0_1' does not refer to a value
template<typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3>class __allocator_traits_rebind< <__xcodeml_template_type_0_1,...>,__xcodeml_template_type_0_3,1>{public:typedef typename void/**/::other type;
                                                                                                                                                          ^
vec.cpp:8398:19: note: declared here
template<typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3>class __allocator_traits_rebind< <__xcodeml_template_type_0_1,...>,__xcodeml_template_type_0_3,1>{public:typedef typename void/**/::other type;
                  ^
vec.cpp:8398:215: error: a template declaration can only declare a single entity
template<typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3>class __allocator_traits_rebind< <__xcodeml_template_type_0_1,...>,__xcodeml_template_type_0_3,1>{public:typedef typename void/**/::other type;
                                                                                                                                                                                                                      ^
vec.cpp:8401:154: error: expected expression
template<typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3>class __allocator_traits_rebind< <__xcodeml_template_type_0_1,...>,__xcodeml_template_type_0_3,0>{public:typedef<__xcodeml_template_type_0_3,...>;
                                                                                                                                                         ^
vec.cpp:8401:155: error: '__xcodeml_template_type_0_1' does not refer to a value
template<typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3>class __allocator_traits_rebind< <__xcodeml_template_type_0_1,...>,__xcodeml_template_type_0_3,0>{public:typedef<__xcodeml_template_type_0_3,...>;
                                                                                                                                                          ^
vec.cpp:8401:19: note: declared here
template<typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3>class __allocator_traits_rebind< <__xcodeml_template_type_0_1,...>,__xcodeml_template_type_0_3,0>{public:typedef<__xcodeml_template_type_0_3,...>;
                  ^
vec.cpp:8401:215: error: a template declaration can only declare a single entity
template<typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3>class __allocator_traits_rebind< <__xcodeml_template_type_0_1,...>,__xcodeml_template_type_0_3,0>{public:typedef<__xcodeml_template_type_0_3,...>;
                                                                                                                                                                                                                      ^
vec.cpp:8404:185: error: use of undeclared identifier '__a'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>decltype (__has_allocate_hint_test(__xcodeml_template_type_0_0(*__a),__xcodeml_template_type_0_1(*__sz),__xcodeml_template_type_0_2(*__p)))
                                                                                                                                                                                        ^
vec.cpp:8404:219: error: use of undeclared identifier '__sz'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>decltype (__has_allocate_hint_test(__xcodeml_template_type_0_0(*__a),__xcodeml_template_type_0_1(*__sz),__xcodeml_template_type_0_2(*__p)))
                                                                                                                                                                                                                          ^
vec.cpp:8404:254: error: use of undeclared identifier '__p'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>decltype (__has_allocate_hint_test(__xcodeml_template_type_0_0(*__a),__xcodeml_template_type_0_1(*__sz),__xcodeml_template_type_0_2(*__p)))
                                                                                                                                                                                                                                                             ^
vec.cpp:8405:1: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class::std::__1::integral_constant<bool,0>__has_allocate_hint_test(__xcodeml_template_type_0_0 const&__a,__xcodeml_template_type_0_1(*__sz),__xcodeml_template_type_0_2(*__p))
^
vec.cpp:8409:181: error: use of undeclared identifier '__a'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>decltype (__has_construct_test(__xcodeml_template_type_0_0(*__a),__xcodeml_template_type_0_1(*__p),void/*__args*/))
                                                                                                                                                                                    ^
vec.cpp:8409:215: error: use of undeclared identifier '__p'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>decltype (__has_construct_test(__xcodeml_template_type_0_0(*__a),__xcodeml_template_type_0_1(*__p),void/*__args*/))
                                                                                                                                                                                                                      ^
vec.cpp:8409:234: error: expected '(' for function-style cast or type construction
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>decltype (__has_construct_test(__xcodeml_template_type_0_0(*__a),__xcodeml_template_type_0_1(*__p),void/*__args*/))
                                                                                                                                                                                                                           ~~~~          ^
vec.cpp:8410:1: error: expected unqualified-id
template <>class::std::__1::integral_constant<bool,1>__has_construct_test(class::std::__1::allocator<int>(*__a),int(*__p),int(*__args))
^
vec.cpp:8415:72: error: expected expression
template<>class __has_construct<class::std::__1::allocator<int>,int(*),...>:public integral_constant<bool,1>{}
                                                                       ^
vec.cpp:8417:142: error: use of undeclared identifier '__a'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>decltype (__has_destroy_test(__xcodeml_template_type_0_0(*__a),__xcodeml_template_type_0_1(*__p)))
                                                                                                                                             ^
vec.cpp:8417:176: error: use of undeclared identifier '__p'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>decltype (__has_destroy_test(__xcodeml_template_type_0_0(*__a),__xcodeml_template_type_0_1(*__p)))
                                                                                                                                                                               ^
vec.cpp:8418:1: error: expected unqualified-id
template <>class::std::__1::integral_constant<bool,1>__has_destroy_test(class::std::__1::allocator<int>(*__a),int(*(*__p)))
^
vec.cpp:8423:17: error: explicit specialization of undeclared template class '__has_destroy'
template<>class __has_destroy<class::std::__1::allocator<int>,int(*)>:public integral_constant<bool,1>{}
                ^            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:8425:106: error: use of undeclared identifier '__a'
template<typename __xcodeml_template_type_0_0>decltype (__has_max_size_test(__xcodeml_template_type_0_0(*__a)))
                                                                                                         ^
vec.cpp:8426:1: error: expected unqualified-id
template <>class::std::__1::integral_constant<bool,1>__has_max_size_test(class allocator const&__a)
^
vec.cpp:8431:38: error: template 'allocator' cannot be referenced with a class specifier
template<>class __has_max_size<class allocator const>:public integral_constant<bool,1>{}
                                     ^
vec.cpp:8114:53: note: declared here
template<typename __xcodeml_template_type_0_0>class allocator;
                                                    ^
vec.cpp:8433:135: error: use of undeclared identifier '__a'
template<typename __xcodeml_template_type_0_0>decltype (__has_select_on_container_copy_construction_test(__xcodeml_template_type_0_0(*__a)))
                                                                                                                                      ^
vec.cpp:8434:1: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0>class::std::__1::integral_constant<bool,0>__has_select_on_container_copy_construction_test(__xcodeml_template_type_0_0 volatile const&__a)
^
vec.cpp:8456:239: error: non-friend class member 'type' cannot have a qualified name
public:typedef typename __const_pointer<typename __xcodeml_template_type_0_0::value_type,typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type,__xcodeml_template_type_0_0,expression>::type const_pointer;
                                                                                                                                                                                                                                            ~~^
vec.cpp:8456:239: error: typedef declarator cannot be qualified
public:typedef typename __const_pointer<typename __xcodeml_template_type_0_0::value_type,typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type,__xcodeml_template_type_0_0,expression>::type const_pointer;
                                                                                                                                                                                                                                            ~~^
vec.cpp:8456:243: error: expected ';' at end of declaration list
public:typedef typename __const_pointer<typename __xcodeml_template_type_0_0::value_type,typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type,__xcodeml_template_type_0_0,expression>::type const_pointer;
                                                                                                                                                                                                                                                  ^
                                                                                                                                                                                                                                                  ;
vec.cpp:8457:189: error: non-friend class member 'type' cannot have a qualified name
public:typedef typename __void_pointer<typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type,__xcodeml_template_type_0_0,expression>::type void_pointer;
                                                                                                                                                                                          ~~^
vec.cpp:8457:189: error: typedef declarator cannot be qualified
public:typedef typename __void_pointer<typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type,__xcodeml_template_type_0_0,expression>::type void_pointer;
                                                                                                                                                                                          ~~^
vec.cpp:8457:193: error: expected ';' at end of declaration list
public:typedef typename __void_pointer<typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type,__xcodeml_template_type_0_0,expression>::type void_pointer;
                                                                                                                                                                                                ^
                                                                                                                                                                                                ;
vec.cpp:8458:195: error: non-friend class member 'type' cannot have a qualified name
public:typedef typename __const_void_pointer<typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type,__xcodeml_template_type_0_0,expression>::type const_void_pointer;
                                                                                                                                                                                                ~~^
vec.cpp:8458:195: error: typedef declarator cannot be qualified
public:typedef typename __const_void_pointer<typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type,__xcodeml_template_type_0_0,expression>::type const_void_pointer;
                                                                                                                                                                                                ~~^
vec.cpp:8458:199: error: expected ';' at end of declaration list
public:typedef typename __const_void_pointer<typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type,__xcodeml_template_type_0_0,expression>::type const_void_pointer;
                                                                                                                                                                                                      ^
                                                                                                                                                                                                      ;
vec.cpp:8459:205: error: non-friend class member 'type' cannot have a qualified name
public:typedef typename __alloc_traits_difference_type<__xcodeml_template_type_0_0,typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type,expression>::type difference_type;
                                                                                                                                                                                                          ~~^
vec.cpp:8459:205: error: typedef declarator cannot be qualified
public:typedef typename __alloc_traits_difference_type<__xcodeml_template_type_0_0,typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type,expression>::type difference_type;
                                                                                                                                                                                                          ~~^
vec.cpp:8459:209: error: expected ';' at end of declaration list
public:typedef typename __alloc_traits_difference_type<__xcodeml_template_type_0_0,typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type,expression>::type difference_type;
                                                                                                                                                                                                                ^
                                                                                                                                                                                                                ;
vec.cpp:8460:254: error: no type named 'type' in the global namespace
public:typedef typename __size_type<__xcodeml_template_type_0_0,typename __alloc_traits_difference_type<__xcodeml_template_type_0_0,typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type,expression>::type,expression>::type size_type;
                                                                                                                                                                                                                                                           ~~^
vec.cpp:8460:272: error: non-friend class member 'type' cannot have a qualified name
public:typedef typename __size_type<__xcodeml_template_type_0_0,typename __alloc_traits_difference_type<__xcodeml_template_type_0_0,typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type,expression>::type,expression>::type size_type;
                                                                                                                                                                                                                                                                             ~~^
vec.cpp:8460:272: error: typedef declarator cannot be qualified
public:typedef typename __size_type<__xcodeml_template_type_0_0,typename __alloc_traits_difference_type<__xcodeml_template_type_0_0,typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type,expression>::type,expression>::type size_type;
                                                                                                                                                                                                                                                                             ~~^
vec.cpp:8460:276: error: expected ';' at end of declaration list
public:typedef typename __size_type<__xcodeml_template_type_0_0,typename __alloc_traits_difference_type<__xcodeml_template_type_0_0,typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type,expression>::type,expression>::type size_type;
                                                                                                                                                                                                                                                                                   ^
                                                                                                                                                                                                                                                                                   ;
vec.cpp:8461:107: error: non-friend class member 'type' cannot have a qualified name
public:typedef typename __propagate_on_container_copy_assignment<__xcodeml_template_type_0_0,expression>::type propagate_on_container_copy_assignment;
                                                                                                        ~~^
vec.cpp:8461:107: error: typedef declarator cannot be qualified
public:typedef typename __propagate_on_container_copy_assignment<__xcodeml_template_type_0_0,expression>::type propagate_on_container_copy_assignment;
                                                                                                        ~~^
vec.cpp:8461:111: error: expected ';' at end of declaration list
public:typedef typename __propagate_on_container_copy_assignment<__xcodeml_template_type_0_0,expression>::type propagate_on_container_copy_assignment;
                                                                                                              ^
                                                                                                              ;
vec.cpp:8462:107: error: non-friend class member 'type' cannot have a qualified name
public:typedef typename __propagate_on_container_move_assignment<__xcodeml_template_type_0_0,expression>::type propagate_on_container_move_assignment;
                                                                                                        ~~^
vec.cpp:8462:107: error: typedef declarator cannot be qualified
public:typedef typename __propagate_on_container_move_assignment<__xcodeml_template_type_0_0,expression>::type propagate_on_container_move_assignment;
                                                                                                        ~~^
vec.cpp:8462:111: error: expected ';' at end of declaration list
public:typedef typename __propagate_on_container_move_assignment<__xcodeml_template_type_0_0,expression>::type propagate_on_container_move_assignment;
                                                                                                              ^
                                                                                                              ;
vec.cpp:8463:96: error: non-friend class member 'type' cannot have a qualified name
public:typedef typename __propagate_on_container_swap<__xcodeml_template_type_0_0,expression>::type propagate_on_container_swap;
                                                                                             ~~^
vec.cpp:8463:96: error: typedef declarator cannot be qualified
public:typedef typename __propagate_on_container_swap<__xcodeml_template_type_0_0,expression>::type propagate_on_container_swap;
                                                                                             ~~^
vec.cpp:8463:100: error: expected ';' at end of declaration list
public:typedef typename __propagate_on_container_swap<__xcodeml_template_type_0_0,expression>::type propagate_on_container_swap;
                                                                                                   ^
                                                                                                   ;
vec.cpp:8464:84: error: non-friend class member 'type' cannot have a qualified name
public:typedef typename __is_always_equal<__xcodeml_template_type_0_0,expression>::type is_always_equal;
                                                                                 ~~^
vec.cpp:8464:84: error: typedef declarator cannot be qualified
public:typedef typename __is_always_equal<__xcodeml_template_type_0_0,expression>::type is_always_equal;
                                                                                 ~~^
vec.cpp:8464:88: error: expected ';' at end of declaration list
public:typedef typename __is_always_equal<__xcodeml_template_type_0_0,expression>::type is_always_equal;
                                                                                       ^
                                                                                       ;
vec.cpp:8465:177: error: expected ';' after alias declaration
public:template<typename __xcodeml_template_type_1_0>using rebind_alloc=typename __allocator_traits_rebind<__xcodeml_template_type_0_0,__xcodeml_template_type_1_0,expression>::type;
                                                                                                                                                                                ^
                                                                                                                                                                                ;
vec.cpp:8466:195: error: no type named 'type' in the global namespace
public:template<typename __xcodeml_template_type_1_0>using rebind_traits=allocator_traits<typename __allocator_traits_rebind<__xcodeml_template_type_0_0,__xcodeml_template_type_1_0,expression>::type>;
                                                                                                                                                                                                ~~^
vec.cpp:8467:402: error: no type named 'type' in the global namespace
public:static typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type allocate(__xcodeml_template_type_0_0&__a,typename __size_type<__xcodeml_template_type_0_0,typename __alloc_traits_difference_type<__xcodeml_template_type_0_0,typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type,expression>::type,expression>::type __n){return(__a.allocate(__n));
                                                                                                                                                                                                                                                                                                                                                                                                               ~~^
vec.cpp:8467:420: error: parameter declarator cannot be qualified
public:static typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type allocate(__xcodeml_template_type_0_0&__a,typename __size_type<__xcodeml_template_type_0_0,typename __alloc_traits_difference_type<__xcodeml_template_type_0_0,typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type,expression>::type,expression>::type __n){return(__a.allocate(__n));
                                                                                                                                                                                                                                                                                                                                                                                                                                 ~~^
vec.cpp:8467:425: error: expected ')'
public:static typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type allocate(__xcodeml_template_type_0_0&__a,typename __size_type<__xcodeml_template_type_0_0,typename __alloc_traits_difference_type<__xcodeml_template_type_0_0,typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type,expression>::type,expression>::type __n){return(__a.allocate(__n));
                                                                                                                                                                                                                                                                                                                                                                                                                                        ^
vec.cpp:8467:131: note: to match this '('
public:static typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type allocate(__xcodeml_template_type_0_0&__a,typename __size_type<__xcodeml_template_type_0_0,typename __alloc_traits_difference_type<__xcodeml_template_type_0_0,typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type,expression>::type,expression>::type __n){return(__a.allocate(__n));
                                                                                                                                  ^
vec.cpp:8469:402: error: no type named 'type' in the global namespace
public:static typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type allocate(__xcodeml_template_type_0_0&__a,typename __size_type<__xcodeml_template_type_0_0,typename __alloc_traits_difference_type<__xcodeml_template_type_0_0,typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type,expression>::type,expression>::type __n,typename __const_void_pointer<typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type,__xcodeml_template_type_0_0,expression>::type __hint){return((__a,__n,__hint,__xcodeml_identity<__has_allocate_hint<__xcodeml_template_type_0_0,typename __size_type<__xcodeml_template_type_0_0,typename __alloc_traits_difference_type<__xcodeml_template_type_0_0,typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type,expression>::type,expression>::type,typename __const_void_pointer<typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type,__xcodeml_template_type_0_0,expression>::type> >::t()));
                                                                                                                                                                                                                                                                                                                                                                                                               ~~^
vec.cpp:8469:420: error: parameter declarator cannot be qualified
public:static typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type allocate(__xcodeml_template_type_0_0&__a,typename __size_type<__xcodeml_template_type_0_0,typename __alloc_traits_difference_type<__xcodeml_template_type_0_0,typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type,expression>::type,expression>::type __n,typename __const_void_pointer<typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type,__xcodeml_template_type_0_0,expression>::type __hint){return((__a,__n,__hint,__xcodeml_identity<__has_allocate_hint<__xcodeml_template_type_0_0,typename __size_type<__xcodeml_template_type_0_0,typename __alloc_traits_difference_type<__xcodeml_template_type_0_0,typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type,expression>::type,expression>::type,typename __const_void_pointer<typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type,__xcodeml_template_type_0_0,expression>::type> >::t()));
                                                                                                                                                                                                                                                                                                                                                                                                                                 ~~^
vec.cpp:8469:425: error: expected ')'
public:static typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type allocate(__xcodeml_template_type_0_0&__a,typename __size_type<__xcodeml_template_type_0_0,typename __alloc_traits_difference_type<__xcodeml_template_type_0_0,typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type,expression>::type,expression>::type __n,typename __const_void_pointer<typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type,__xcodeml_template_type_0_0,expression>::type __hint){return((__a,__n,__hint,__xcodeml_identity<__has_allocate_hint<__xcodeml_template_type_0_0,typename __size_type<__xcodeml_template_type_0_0,typename __alloc_traits_difference_type<__xcodeml_template_type_0_0,typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type,expression>::type,expression>::type,typename __const_void_pointer<typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type,__xcodeml_template_type_0_0,expression>::type> >::t()));
                                                                                                                                                                                                                                                                                                                                                                                                                                        ^
vec.cpp:8469:131: note: to match this '('
public:static typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type allocate(__xcodeml_template_type_0_0&__a,typename __size_type<__xcodeml_template_type_0_0,typename __alloc_traits_difference_type<__xcodeml_template_type_0_0,typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type,expression>::type,expression>::type __n,typename __const_void_pointer<typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type,__xcodeml_template_type_0_0,expression>::type __hint){return((__a,__n,__hint,__xcodeml_identity<__has_allocate_hint<__xcodeml_template_type_0_0,typename __size_type<__xcodeml_template_type_0_0,typename __alloc_traits_difference_type<__xcodeml_template_type_0_0,typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type,expression>::type,expression>::type,typename __const_void_pointer<typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type,__xcodeml_template_type_0_0,expression>::type> >::t()));
                                                                                                                                  ^
vec.cpp:8471:413: error: no type named 'type' in the global namespace
public:static void deallocate(__xcodeml_template_type_0_0&__a,typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type __p,typename __size_type<__xcodeml_template_type_0_0,typename __alloc_traits_difference_type<__xcodeml_template_type_0_0,typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type,expression>::type,expression>::type __n){(__a.deallocate(__p,__n));
                                                                                                                                                                                                                                                                                                                                                                                                                          ~~^
vec.cpp:8471:431: error: parameter declarator cannot be qualified
public:static void deallocate(__xcodeml_template_type_0_0&__a,typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type __p,typename __size_type<__xcodeml_template_type_0_0,typename __alloc_traits_difference_type<__xcodeml_template_type_0_0,typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type,expression>::type,expression>::type __n){(__a.deallocate(__p,__n));
                                                                                                                                                                                                                                                                                                                                                                                                                                            ~~^
vec.cpp:8471:436: error: expected ')'
public:static void deallocate(__xcodeml_template_type_0_0&__a,typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type __p,typename __size_type<__xcodeml_template_type_0_0,typename __alloc_traits_difference_type<__xcodeml_template_type_0_0,typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type,expression>::type,expression>::type __n){(__a.deallocate(__p,__n));
                                                                                                                                                                                                                                                                                                                                                                                                                                                   ^
vec.cpp:8471:30: note: to match this '('
public:static void deallocate(__xcodeml_template_type_0_0&__a,typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type __p,typename __size_type<__xcodeml_template_type_0_0,typename __alloc_traits_difference_type<__xcodeml_template_type_0_0,typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type,expression>::type,expression>::type __n){(__a.deallocate(__p,__n));
                             ^
vec.cpp:8473:112: error: 'void' must be the first and only parameter if specified
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1>static void construct(__xcodeml_template_type_0_0&__a,__xcodeml_template_type_1_0(*__p),void/*__args*/){((__xcodeml_identity<__has_construct<__xcodeml_template_type_0_0,__xcodeml_template_type_1_0(*),...> >::t(),__a,__p,(std::__1::__xcodeml_template_type_1_1(__args))));
                                                                                                               ^
vec.cpp:8477:253: error: no type named 'type' in the global namespace
public:static typename __size_type<__xcodeml_template_type_0_0,typename __alloc_traits_difference_type<__xcodeml_template_type_0_0,typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type,expression>::type,expression>::type max_size(__xcodeml_template_type_0_0 const&__a){return((__xcodeml_identity<__has_max_size<__xcodeml_template_type_0_0 const> >::t(),__a));
                                                                                                                                                                                                                                                          ~~^
vec.cpp:8477:271: error: non-friend class member 'type' cannot have a qualified name
public:static typename __size_type<__xcodeml_template_type_0_0,typename __alloc_traits_difference_type<__xcodeml_template_type_0_0,typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type,expression>::type,expression>::type max_size(__xcodeml_template_type_0_0 const&__a){return((__xcodeml_identity<__has_max_size<__xcodeml_template_type_0_0 const> >::t(),__a));
                                                                                                                                                                                                                                                                            ~~^
vec.cpp:8477:275: error: expected ';' at end of declaration list
public:static typename __size_type<__xcodeml_template_type_0_0,typename __alloc_traits_difference_type<__xcodeml_template_type_0_0,typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type,expression>::type,expression>::type max_size(__xcodeml_template_type_0_0 const&__a){return((__xcodeml_identity<__has_max_size<__xcodeml_template_type_0_0 const> >::t(),__a));
                                                                                                                                                                                                                                                                                  ^
                                                                                                                                                                                                                                                                                  ;
vec.cpp:8467:450: error: use of undeclared identifier '__n'
public:static typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type allocate(__xcodeml_template_type_0_0&__a,typename __size_type<__xcodeml_template_type_0_0,typename __alloc_traits_difference_type<__xcodeml_template_type_0_0,typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type,expression>::type,expression>::type __n){return(__a.allocate(__n));
                                                                                                                                                                                                                                                                                                                                                                                                                                                                 ^
vec.cpp:8469:633: error: use of undeclared identifier '__n'
public:static typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type allocate(__xcodeml_template_type_0_0&__a,typename __size_type<__xcodeml_template_type_0_0,typename __alloc_traits_difference_type<__xcodeml_template_type_0_0,typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type,expression>::type,expression>::type __n,typename __const_void_pointer<typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type,__xcodeml_template_type_0_0,expression>::type __hint){return((__a,__n,__hint,__xcodeml_identity<__has_allocate_hint<__xcodeml_template_type_0_0,typename __size_type<__xcodeml_template_type_0_0,typename __alloc_traits_difference_type<__xcodeml_template_type_0_0,typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type,expression>::type,expression>::type,typename __const_void_pointer<typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type,__xcodeml_template_type_0_0,expression>::type> >::t()));

vec.cpp:8469:637: error: use of undeclared identifier '__hint'
public:static typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type allocate(__xcodeml_template_type_0_0&__a,typename __size_type<__xcodeml_template_type_0_0,typename __alloc_traits_difference_type<__xcodeml_template_type_0_0,typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type,expression>::type,expression>::type __n,typename __const_void_pointer<typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type,__xcodeml_template_type_0_0,expression>::type __hint){return((__a,__n,__hint,__xcodeml_identity<__has_allocate_hint<__xcodeml_template_type_0_0,typename __size_type<__xcodeml_template_type_0_0,typename __alloc_traits_difference_type<__xcodeml_template_type_0_0,typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type,expression>::type,expression>::type,typename __const_void_pointer<typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type,__xcodeml_template_type_0_0,expression>::type> >::t()));

vec.cpp:8469:949: error: no type named 'type' in the global namespace
public:static typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type allocate(__xcodeml_template_type_0_0&__a,typename __size_type<__xcodeml_template_type_0_0,typename __alloc_traits_difference_type<__xcodeml_template_type_0_0,typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type,expression>::type,expression>::type __n,typename __const_void_pointer<typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type,__xcodeml_template_type_0_0,expression>::type __hint){return((__a,__n,__hint,__xcodeml_identity<__has_allocate_hint<__xcodeml_template_type_0_0,typename __size_type<__xcodeml_template_type_0_0,typename __alloc_traits_difference_type<__xcodeml_template_type_0_0,typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type,expression>::type,expression>::type,typename __const_void_pointer<typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type,__xcodeml_template_type_0_0,expression>::type> >::t()));
~~^
vec.cpp:8469:967: error: no type named 'type' in the global namespace
public:static typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type allocate(__xcodeml_template_type_0_0&__a,typename __size_type<__xcodeml_template_type_0_0,typename __alloc_traits_difference_type<__xcodeml_template_type_0_0,typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type,expression>::type,expression>::type __n,typename __const_void_pointer<typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type,__xcodeml_template_type_0_0,expression>::type __hint){return((__a,__n,__hint,__xcodeml_identity<__has_allocate_hint<__xcodeml_template_type_0_0,typename __size_type<__xcodeml_template_type_0_0,typename __alloc_traits_difference_type<__xcodeml_template_type_0_0,typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type,expression>::type,expression>::type,typename __const_void_pointer<typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type,__xcodeml_template_type_0_0,expression>::type> >::t()));
~~^
vec.cpp:8469:1105: error: no type named 'type' in the global namespace
public:static typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type allocate(__xcodeml_template_type_0_0&__a,typename __size_type<__xcodeml_template_type_0_0,typename __alloc_traits_difference_type<__xcodeml_template_type_0_0,typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type,expression>::type,expression>::type __n,typename __const_void_pointer<typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type,__xcodeml_template_type_0_0,expression>::type __hint){return((__a,__n,__hint,__xcodeml_identity<__has_allocate_hint<__xcodeml_template_type_0_0,typename __size_type<__xcodeml_template_type_0_0,typename __alloc_traits_difference_type<__xcodeml_template_type_0_0,typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type,expression>::type,expression>::type,typename __const_void_pointer<typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type,__xcodeml_template_type_0_0,expression>::type> >::t()));
~~^
vec.cpp:8469:1157: error: expected expression
public:static typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type allocate(__xcodeml_template_type_0_0&__a,typename __size_type<__xcodeml_template_type_0_0,typename __alloc_traits_difference_type<__xcodeml_template_type_0_0,typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type,expression>::type,expression>::type __n,typename __const_void_pointer<typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type,__xcodeml_template_type_0_0,expression>::type __hint){return((__a,__n,__hint,__xcodeml_identity<__has_allocate_hint<__xcodeml_template_type_0_0,typename __size_type<__xcodeml_template_type_0_0,typename __alloc_traits_difference_type<__xcodeml_template_type_0_0,typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type,expression>::type,expression>::type,typename __const_void_pointer<typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type,__xcodeml_template_type_0_0,expression>::type> >::t()));

vec.cpp:8469:1160: error: no member named 't' in the global namespace
public:static typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type allocate(__xcodeml_template_type_0_0&__a,typename __size_type<__xcodeml_template_type_0_0,typename __alloc_traits_difference_type<__xcodeml_template_type_0_0,typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type,expression>::type,expression>::type __n,typename __const_void_pointer<typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type,__xcodeml_template_type_0_0,expression>::type __hint){return((__a,__n,__hint,__xcodeml_identity<__has_allocate_hint<__xcodeml_template_type_0_0,typename __size_type<__xcodeml_template_type_0_0,typename __alloc_traits_difference_type<__xcodeml_template_type_0_0,typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type,expression>::type,expression>::type,typename __const_void_pointer<typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type,__xcodeml_template_type_0_0,expression>::type> >::t()));
~~^
vec.cpp:8471:461: error: use of undeclared identifier '__n'
public:static void deallocate(__xcodeml_template_type_0_0&__a,typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type __p,typename __size_type<__xcodeml_template_type_0_0,typename __alloc_traits_difference_type<__xcodeml_template_type_0_0,typename __pointer_type<typename __xcodeml_template_type_0_0::value_type,__xcodeml_template_type_0_0>::type,expression>::type,expression>::type __n){(__a.deallocate(__p,__n));
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            ^
vec.cpp:8473:291: error: expected expression
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1>static void construct(__xcodeml_template_type_0_0&__a,__xcodeml_template_type_1_0(*__p),void/*__args*/){((__xcodeml_identity<__has_construct<__xcodeml_template_type_0_0,__xcodeml_template_type_1_0(*),...> >::t(),__a,__p,(std::__1::__xcodeml_template_type_1_1(__args))));
                                                                                                                                                                                                                                                                                                  ^
vec.cpp:8473:296: error: expected a type
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1>static void construct(__xcodeml_template_type_0_0&__a,__xcodeml_template_type_1_0(*__p),void/*__args*/){((__xcodeml_identity<__has_construct<__xcodeml_template_type_0_0,__xcodeml_template_type_1_0(*),...> >::t(),__a,__p,(std::__1::__xcodeml_template_type_1_1(__args))));
                                                                                                                                                                                                                                                                                                       ^
vec.cpp:8473:299: error: no type named 't' in the global namespace
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1>static void construct(__xcodeml_template_type_0_0&__a,__xcodeml_template_type_1_0(*__p),void/*__args*/){((__xcodeml_identity<__has_construct<__xcodeml_template_type_0_0,__xcodeml_template_type_1_0(*),...> >::t(),__a,__p,(std::__1::__xcodeml_template_type_1_1(__args))));
                                                                                                                                                                                                                                                                                                        ~~^
vec.cpp:8473:302: error: expected ')'
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1>static void construct(__xcodeml_template_type_0_0&__a,__xcodeml_template_type_1_0(*__p),void/*__args*/){((__xcodeml_identity<__has_construct<__xcodeml_template_type_0_0,__xcodeml_template_type_1_0(*),...> >::t(),__a,__p,(std::__1::__xcodeml_template_type_1_1(__args))));
                                                                                                                                                                                                                                                                                                             ^
vec.cpp:8473:196: note: to match this '('
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1>static void construct(__xcodeml_template_type_0_0&__a,__xcodeml_template_type_1_0(*__p),void/*__args*/){((__xcodeml_identity<__has_construct<__xcodeml_template_type_0_0,__xcodeml_template_type_1_0(*),...> >::t(),__a,__p,(std::__1::__xcodeml_template_type_1_1(__args))));
                                                                                                                                                                                                   ^
vec.cpp:8475:175: error: expected '>'
public:template<typename __xcodeml_template_type_1_0>static void destroy(__xcodeml_template_type_0_0&__a,__xcodeml_template_type_1_0(*__p)){((__xcodeml_identity<__has_destroy<__xcodeml_template_type_0_0,__xcodeml_template_type_1_0(*)> >::t(),__a,__p));
                                                                                                                                                                              ^
vec.cpp:8475:175: error: type name requires a specifier or qualifier
vec.cpp:8475:175: error: expected ')'
vec.cpp:8475:142: note: to match this '('
public:template<typename __xcodeml_template_type_1_0>static void destroy(__xcodeml_template_type_0_0&__a,__xcodeml_template_type_1_0(*__p)){((__xcodeml_identity<__has_destroy<__xcodeml_template_type_0_0,__xcodeml_template_type_1_0(*)> >::t(),__a,__p));
                                                                                                                                             ^
vec.cpp:8538:181: error: expected ';' after alias declaration
public:template<typename __xcodeml_template_type_0_0>using rebind_alloc=typename __allocator_traits_rebind<class::std::__1::allocator<int>,__xcodeml_template_type_0_0,expression>::type;
                                                                                                                                                                                    ^
                                                                                                                                                                                    ;
vec.cpp:8539:199: error: no type named 'type' in the global namespace
public:template<typename __xcodeml_template_type_0_0>using rebind_traits=allocator_traits<typename __allocator_traits_rebind<class::std::__1::allocator<int>,__xcodeml_template_type_0_0,expression>::type>;
                                                                                                                                                                                                    ~~^
vec.cpp:8545:112: error: 'void' must be the first and only parameter if specified
public:template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>static void construct(class::std::__1::allocator<int>&__a,__xcodeml_template_type_0_0(*__p),void/*__args*/)
                                                                                                               ^
vec.cpp:8545:198: error: expected ';' at end of declaration list
public:template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>static void construct(class::std::__1::allocator<int>&__a,__xcodeml_template_type_0_0(*__p),void/*__args*/)
                                                                                                                                                                                                     ^
                                                                                                                                                                                                     ;
vec.cpp:8554:231: error: expected ';' at end of declaration list
public:template<typename __xcodeml_template_type_0_0>static void __construct_forward(class::std::__1::allocator<int>&__a,__xcodeml_template_type_0_0 __begin1,__xcodeml_template_type_0_0 __end1,__xcodeml_template_type_0_0&__begin2)
                                                                                                                                                                                                                                      ^
                                                                                                                                                                                                                                      ;
vec.cpp:8568:115: error: 'void' must be the first and only parameter if specified
private:template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>static void __construct(class::std::__1::integral_constant<bool,1>,class::std::__1::allocator<int>&__a,__xcodeml_template_type_0_0(*__p),void/*__args*/)
                                                                                                                  ^
vec.cpp:8568:244: error: expected ';' at end of declaration list
private:template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>static void __construct(class::std::__1::integral_constant<bool,1>,class::std::__1::allocator<int>&__a,__xcodeml_template_type_0_0(*__p),void/*__args*/)
                                                                                                                                                                                                                                                   ^
                                                                                                                                                                                                                                                   ;
vec.cpp:8579:136: error: template 'allocator' cannot be referenced with a class specifier
private:static class::std::__1::allocator<int>__select_on_container_copy_construction(class::std::__1::integral_constant<bool,1>,class allocator const&__a);
                                                                                                                                       ^
vec.cpp:8114:53: note: declared here
template<typename __xcodeml_template_type_0_0>class allocator;
                                                    ^
vec.cpp:8540:95: error: implicit instantiation of undefined template 'std::__1::allocator<int>'
public:static int(*allocate(class::std::__1::allocator<int>&__a,unsigned long __n)){return(__a.allocate(__n,0));
                                                                                              ^
vec.cpp:349:53: note: template is declared here
template<typename __xcodeml_template_type_0_0>class allocator;
                                                    ^
vec.cpp:8543:100: error: implicit instantiation of undefined template 'std::__1::allocator<int>'
public:static void deallocate(class::std::__1::allocator<int>&__a,int(*__p),unsigned long __n){(__a.deallocate(__p,__n));
                                                                                                   ^
vec.cpp:349:53: note: template is declared here
template<typename __xcodeml_template_type_0_0>class allocator;
                                                    ^
vec.cpp:8583:119: warning: typedef requires a name [-Wmissing-declarations]
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __rebind_alloc_helper{public:typedef void/*type*/;
                                                                                                                      ^~~~~~~~~~~~
vec.cpp:8597:74: warning: typedef requires a name [-Wmissing-declarations]
public:template<typename __xcodeml_template_type_1_0>class rebind{public:typedef allocator<__xcodeml_template_type_1_0>;
                                                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:8614:105: error: 'void' must be the first and only parameter if specified
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1>void construct(__xcodeml_template_type_1_0(*__p),void/*__args*/){::new(((void(*))__p))__xcodeml_identity<__xcodeml_template_type_1_0>::t((std::__1::__xcodeml_template_type_1_1(__args)));
                                                                                                        ^
vec.cpp:8603:101: error: expected unqualified-id
public:__xcodeml_template_type_0_0(*address(__xcodeml_template_type_0_0&__x)const){return(std::__1::(__x));
                                                                                                    ^
vec.cpp:8605:113: error: expected unqualified-id
public:__xcodeml_template_type_0_0 const(*address(__xcodeml_template_type_0_0 const&__x)const){return(std::__1::(__x));
                                                                                                                ^
vec.cpp:8608:125: error: '__xcodeml_template_type_0_0' does not refer to a value
return static_cast<__xcodeml_template_type_0_0(*)>((std::__1::__libcpp_allocate((__n*(sizeof(__xcodeml_template_type_0_0))),__xcodeml_template_type_0_0)));
                                                                                                                            ^
vec.cpp:8587:19: note: declared here
template<typename __xcodeml_template_type_0_0>class allocator{public:
                  ^
vec.cpp:8610:167: error: '__xcodeml_template_type_0_0' does not refer to a value
public:void deallocate(__xcodeml_template_type_0_0(*__p),unsigned long __n){(std::__1::__libcpp_deallocate(((void(*))__p),(__n*(sizeof(__xcodeml_template_type_0_0))),__xcodeml_template_type_0_0));
                                                                                                                                                                      ^
vec.cpp:8587:19: note: declared here
template<typename __xcodeml_template_type_0_0>class allocator{public:
                  ^
vec.cpp:8614:177: error: missing 'typename' prior to dependent type name '__xcodeml_identity<__xcodeml_template_type_1_0>::t'
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1>void construct(__xcodeml_template_type_1_0(*__p),void/*__args*/){::new(((void(*))__p))__xcodeml_identity<__xcodeml_template_type_1_0>::t((std::__1::__xcodeml_template_type_1_1(__args)));
                                                                                                                                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                                                                                                                                                                typename 
vec.cpp:8614:239: error: no member named '__xcodeml_template_type_1_1' in namespace 'std::__1'
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1>void construct(__xcodeml_template_type_1_0(*__p),void/*__args*/){::new(((void(*))__p))__xcodeml_identity<__xcodeml_template_type_1_0>::t((std::__1::__xcodeml_template_type_1_1(__args)));
                                                                                                                                                                                                                                    ~~~~~~~~~~^
vec.cpp:8614:267: error: use of undeclared identifier '__args'
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1>void construct(__xcodeml_template_type_1_0(*__p),void/*__args*/){::new(((void(*))__p))__xcodeml_identity<__xcodeml_template_type_1_0>::t((std::__1::__xcodeml_template_type_1_1(__args)));
                                                                                                                                                                                                                                                                          ^
vec.cpp:8616:85: error: expected ')'
public:void destroy(__xcodeml_template_type_0_0(*__p)){(__xcodeml_template_type_0_0 __p());
                                                                                    ^
vec.cpp:8616:56: note: to match this '('
public:void destroy(__xcodeml_template_type_0_0(*__p)){(__xcodeml_template_type_0_0 __p());
                                                       ^
vec.cpp:8616:91: error: expected expression
public:void destroy(__xcodeml_template_type_0_0(*__p)){(__xcodeml_template_type_0_0 __p());
                                                                                          ^
vec.cpp:8631:74: warning: typedef requires a name [-Wmissing-declarations]
public:template<typename __xcodeml_template_type_1_0>class rebind{public:typedef allocator<__xcodeml_template_type_1_0>;
                                                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:8646:105: error: 'void' must be the first and only parameter if specified
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1>void construct(__xcodeml_template_type_1_0(*__p),void/*__args*/){::new(((void(*))__p))__xcodeml_identity<__xcodeml_template_type_1_0>::t((std::__1::__xcodeml_template_type_1_1(__args)));
                                                                                                        ^
vec.cpp:8637:113: error: expected unqualified-id
public:__xcodeml_template_type_0_0 const(*address(__xcodeml_template_type_0_0 const&__x)const){return(std::__1::(__x));
                                                                                                                ^
vec.cpp:8640:131: error: '__xcodeml_template_type_0_0' does not refer to a value
return static_cast<__xcodeml_template_type_0_0 const(*)>((std::__1::__libcpp_allocate((__n*(sizeof(__xcodeml_template_type_0_0))),__xcodeml_template_type_0_0)));
                                                                                                                                  ^
vec.cpp:8621:19: note: declared here
template<typename __xcodeml_template_type_0_0>class allocator<__xcodeml_template_type_0_0 const>{public:
                  ^
vec.cpp:8642:217: error: '__xcodeml_template_type_0_0' does not refer to a value
public:void deallocate(__xcodeml_template_type_0_0 const(*__p),unsigned long __n){(std::__1::__libcpp_deallocate(((void(*))const_cast<__xcodeml_template_type_0_0(*)>(__p)),(__n*(sizeof(__xcodeml_template_type_0_0))),__xcodeml_template_type_0_0));
                                                                                                                                                                                                                        ^
vec.cpp:8621:19: note: declared here
template<typename __xcodeml_template_type_0_0>class allocator<__xcodeml_template_type_0_0 const>{public:
                  ^
vec.cpp:8646:177: error: missing 'typename' prior to dependent type name '__xcodeml_identity<__xcodeml_template_type_1_0>::t'
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1>void construct(__xcodeml_template_type_1_0(*__p),void/*__args*/){::new(((void(*))__p))__xcodeml_identity<__xcodeml_template_type_1_0>::t((std::__1::__xcodeml_template_type_1_1(__args)));
                                                                                                                                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                                                                                                                                                                typename 
vec.cpp:8646:239: error: no member named '__xcodeml_template_type_1_1' in namespace 'std::__1'
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1>void construct(__xcodeml_template_type_1_0(*__p),void/*__args*/){::new(((void(*))__p))__xcodeml_identity<__xcodeml_template_type_1_0>::t((std::__1::__xcodeml_template_type_1_1(__args)));
                                                                                                                                                                                                                                    ~~~~~~~~~~^
vec.cpp:8646:267: error: use of undeclared identifier '__args'
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1>void construct(__xcodeml_template_type_1_0(*__p),void/*__args*/){::new(((void(*))__p))__xcodeml_identity<__xcodeml_template_type_1_0>::t((std::__1::__xcodeml_template_type_1_1(__args)));
                                                                                                                                                                                                                                                                          ^
vec.cpp:8648:91: error: expected ')'
public:void destroy(__xcodeml_template_type_0_0 const(*__p)){(__xcodeml_template_type_0_0 __p());
                                                                                          ^
vec.cpp:8648:62: note: to match this '('
public:void destroy(__xcodeml_template_type_0_0 const(*__p)){(__xcodeml_template_type_0_0 __p());
                                                             ^
vec.cpp:8648:97: error: expected expression
public:void destroy(__xcodeml_template_type_0_0 const(*__p)){(__xcodeml_template_type_0_0 __p());
                                                                                                ^
vec.cpp:8656:234: error: template 'raw_storage_iterator' cannot be referenced with a class specifier
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class raw_storage_iterator:public iterator<class::std::__1::output_iterator_tag,__xcodeml_template_type_0_1,long,__xcodeml_template_type_0_1(*),class raw_storage_iterator&>{private:
                                                                                                                                                                                                                                         ^
vec.cpp:8656:90: note: declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class raw_storage_iterator:public iterator<class::std::__1::output_iterator_tag,__xcodeml_template_type_0_1,long,__xcodeml_template_type_0_1(*),class raw_storage_iterator&>{private:
                                                                                         ^
vec.cpp:8662:107: error: expected unqualified-id
public:class raw_storage_iterator&operator=(__xcodeml_template_type_0_1 const&__element){::new((std::__1::((*this->__x_))))__xcodeml_identity<__xcodeml_template_type_0_1>::t(__element);
                                                                                                          ^
vec.cpp:8665:103: error: expected unqualified-id
public:class raw_storage_iterator&operator=(__xcodeml_template_type_0_1(*__element)){::new((std::__1::((*this->__x_))))__xcodeml_identity<__xcodeml_template_type_0_1>::t((std::__1::(__element)));
                                                                                                      ^
vec.cpp:8680:88: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0>pair<__xcodeml_template_type_0_0(*),long>{pair<__xcodeml_template_type_0_0(*),long> =0 0;
                                                                                       ^
vec.cpp:8712:33: error: no template named 'auto_ptr_ref'
public:class auto_ptr&operator=(auto_ptr_ref<__xcodeml_template_type_0_0>){(this->reset(__p.__ptr_));
                                ^
vec.cpp:8730:60: error: invalid use of non-static data member '__ptr_'
public:auto_ptr(auto_ptr_ref<__xcodeml_template_type_0_0>):__ptr_(__p.__ptr_){}
                                                           ^~~~~~
vec.cpp:8730:67: error: use of undeclared identifier '__p'
public:auto_ptr(auto_ptr_ref<__xcodeml_template_type_0_0>):__ptr_(__p.__ptr_){}
                                                                  ^
vec.cpp:8732:54: error: expected ';' at end of declaration list
public:template<typename __xcodeml_template_type_1_0>
                                                     ^
                                                     ;
vec.cpp:8705:110: error: use of undeclared identifier '__p'
public:template<typename __xcodeml_template_type_1_0>auto_ptr(auto_ptr<__xcodeml_template_type_1_0>):__ptr_((__p.release())){}
                                                                                                             ^
vec.cpp:8709:132: error: use of undeclared identifier '__p'
public:template<typename __xcodeml_template_type_1_0>class auto_ptr&operator=(auto_ptr<__xcodeml_template_type_1_0>){(this->reset((__p.release())));
                                                                                                                                   ^
vec.cpp:8712:89: error: use of undeclared identifier '__p'
public:class auto_ptr&operator=(auto_ptr_ref<__xcodeml_template_type_0_0>){(this->reset(__p.__ptr_));
                                                                                        ^
vec.cpp:8740:188: error: redefinition of '__compressed_pair_elem' as different kind of symbol
template<typename __xcodeml_template_type_0_0,int _Idx,bool _CanBeEmptyBase=(is_empty<__xcodeml_template_type_0_0>::value&&(!__libcpp_is_final<__xcodeml_template_type_0_0>::value))>class __compressed_pair_elem{public:typedef __xcodeml_template_type_0_0 _ParamT;
                                                                                                                                                                                           ^
vec.cpp:809:37: note: previous definition is here
template<>class conditional<0,class __compressed_pair_elem const(*),class::std::__1::__compressed_pair_elem<void(*),0,0> >{public:typedef class::std::__1::__compressed_pair_elem<void(*),0,0>type;
                                    ^
vec.cpp:8754:17: error: explicit specialization of non-template class '__compressed_pair_elem'
template<>class __compressed_pair_elem<void(*),0,0>{public:typedef void(*_ParamT);
                ^                     ~~~~~~~~~~~~~
vec.cpp:8758:148: error: expected ';' at end of declaration list
public:template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>__compressed_pair_elem(__xcodeml_template_type_0_0(*__u))
                                                                                                                                                   ^
                                                                                                                                                   ;
vec.cpp:8767:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:8768:57: error: no member named '__builtin_new_allocator' in namespace 'std::__1'
template<>class __compressed_pair_elem<class::std::__1::__builtin_new_allocator::__builtin_new_deleter,1,0>{public:typedef class::std::__1::__builtin_new_allocator::__builtin_new_deleter _ParamT;
                                            ~~~~~~~~~~~~^
vec.cpp:8768:17: error: explicit specialization of non-template class '__compressed_pair_elem'
template<>class __compressed_pair_elem<class::std::__1::__builtin_new_allocator::__builtin_new_deleter,1,0>{public:typedef class::std::__1::__builtin_new_allocator::__builtin_new_deleter _ParamT;
                ^
vec.cpp:8768:17: error: redefinition of '__compressed_pair_elem'
vec.cpp:8754:17: note: previous definition is here
template<>class __compressed_pair_elem<void(*),0,0>{public:typedef void(*_ParamT);
                ^
vec.cpp:8780:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:8781:17: error: explicit specialization of non-template class '__compressed_pair_elem'
template<>class __compressed_pair_elem<int(*),0,0>{public:typedef int(*_ParamT);
                ^                     ~~~~~~~~~~~~
vec.cpp:8781:17: error: redefinition of '__compressed_pair_elem'
vec.cpp:8754:17: note: previous definition is here
template<>class __compressed_pair_elem<void(*),0,0>{public:typedef void(*_ParamT);
                ^
vec.cpp:8794:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:8795:17: error: explicit specialization of non-template class '__compressed_pair_elem'
template<>class __compressed_pair_elem<class::std::__1::allocator<int>,1,1>:private allocator<int>{public:typedef class::std::__1::allocator<int>_ParamT;
                ^                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:8795:17: error: redefinition of '__compressed_pair_elem'
vec.cpp:8754:17: note: previous definition is here
template<>class __compressed_pair_elem<void(*),0,0>{public:typedef void(*_ParamT);
                ^
vec.cpp:8806:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:8807:17: error: explicit specialization of non-template class '__compressed_pair_elem'
template<>class __compressed_pair_elem<class::std::__1::allocator<int>&,1,0>{public:typedef class::std::__1::allocator<int>&_ParamT;
                ^                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:8807:17: error: redefinition of '__compressed_pair_elem'
vec.cpp:8754:17: note: previous definition is here
template<>class __compressed_pair_elem<void(*),0,0>{public:typedef void(*_ParamT);
                ^
vec.cpp:8821:62: error: explicit specialization of non-template class '__compressed_pair_elem'
template<typename __xcodeml_template_type_0_0,int _Idx>class __compressed_pair_elem<__xcodeml_template_type_0_0,expression,1>:private __xcodeml_template_type_0_0{public:typedef __xcodeml_template_type_0_0 _ParamT;
                                                             ^
vec.cpp:8821:62: error: redefinition of '__compressed_pair_elem' as different kind of symbol
vec.cpp:8754:17: note: previous definition is here
template<>class __compressed_pair_elem<void(*),0,0>{public:typedef void(*_ParamT);
                ^
vec.cpp:8836:116: error: unknown template name '__compressed_pair_elem'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __compressed_pair:private __compressed_pair_elem<__xcodeml_template_type_0_0,0,expression>,private __compressed_pair_elem<__xcodeml_template_type_0_1,1,expression>{private:typedef __compressed_pair_elem<__xcodeml_template_type_0_0,0,expression>;
                                                                                                                   ^
vec.cpp:8836:189: error: unknown template name '__compressed_pair_elem'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __compressed_pair:private __compressed_pair_elem<__xcodeml_template_type_0_0,0,expression>,private __compressed_pair_elem<__xcodeml_template_type_0_1,1,expression>{private:typedef __compressed_pair_elem<__xcodeml_template_type_0_0,0,expression>;
                                                                                                                                                                                            ^
vec.cpp:8836:292: error: expected member name or ';' after declaration specifiers
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __compressed_pair:private __compressed_pair_elem<__xcodeml_template_type_0_0,0,expression>,private __compressed_pair_elem<__xcodeml_template_type_0_1,1,expression>{private:typedef __compressed_pair_elem<__xcodeml_template_type_0_0,0,expression>;
                                                                                                                                                                                                                                                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
vec.cpp:8837:39: error: expected member name or ';' after declaration specifiers
private:typedef __compressed_pair_elem<__xcodeml_template_type_0_1,1,expression>;
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
vec.cpp:8843:91: error: parameter declarator cannot be qualified
public:template<typename __xcodeml_template_type_1_0,typename enable_if<expression,bool>::type=true>__compressed_pair(__xcodeml_template_type_1_0(*__t)):((std::__xcodeml_template_type_1_0(__t))),(){}
                                                                                        ~~^
vec.cpp:8846:159: error: expected expression
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1>__compressed_pair(class::std::__1::piecewise_construct_t __pc,tuple<...>,tuple<...>):(__pc(std::__1::(__first_args))__xcodeml_identity<typename __make_tuple_indices<expression,0>::type>::t()),(__pc(std::__1::(__second_args))__xcodeml_identity<typename __make_tuple_indices<expression,0>::type>::t()){}
                                                                                                                                                              ^
vec.cpp:8846:170: error: expected expression
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1>__compressed_pair(class::std::__1::piecewise_construct_t __pc,tuple<...>,tuple<...>):(__pc(std::__1::(__first_args))__xcodeml_identity<typename __make_tuple_indices<expression,0>::type>::t()),(__pc(std::__1::(__second_args))__xcodeml_identity<typename __make_tuple_indices<expression,0>::type>::t()){}
                                                                                                                                                                         ^
vec.cpp:8847:17: error: expected a qualified name after 'typename'
public:typename __compressed_pair_elem<__xcodeml_template_type_0_0,0,expression>::reference first(){return(static_cast<__compressed_pair_elem<__xcodeml_template_type_0_0,0,expression> >((*this)).__get());
                ^
vec.cpp:8847:39: error: expected member name or ';' after declaration specifiers
public:typename __compressed_pair_elem<__xcodeml_template_type_0_0,0,expression>::reference first(){return(static_cast<__compressed_pair_elem<__xcodeml_template_type_0_0,0,expression> >((*this)).__get());
       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
vec.cpp:8843:154: error: expected class member or base class name
public:template<typename __xcodeml_template_type_1_0,typename enable_if<expression,bool>::type=true>__compressed_pair(__xcodeml_template_type_1_0(*__t)):((std::__xcodeml_template_type_1_0(__t))),(){}
                                                                                                                                                         ^
vec.cpp:8844:137: error: expected class member or base class name
public:template<typename __xcodeml_template_type_1_0>__compressed_pair(class::std::__1::__second_tag,__xcodeml_template_type_1_0(*__t)):(),((std::__xcodeml_template_type_1_0(__t))){}
                                                                                                                                        ^
vec.cpp:8845:180: error: expected class member or base class name
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1>__compressed_pair(__xcodeml_template_type_1_0(*__t1),__xcodeml_template_type_1_1(*__t2)):((std::__xcodeml_template_type_1_0(__t1))),((std::__xcodeml_template_type_1_1(__t2))){}
                                                                                                                                                                                   ^
vec.cpp:8846:176: error: expected class member or base class name
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1>__compressed_pair(class::std::__1::piecewise_construct_t __pc,tuple<...>,tuple<...>):(__pc(std::__1::(__first_args))__xcodeml_identity<typename __make_tuple_indices<expression,0>::type>::t()),(__pc(std::__1::(__second_args))__xcodeml_identity<typename __make_tuple_indices<expression,0>::type>::t()){}
                                                                                                                                                                               ^
vec.cpp:8861:60: error: no member named '__builtin_new_allocator' in namespace 'std::__1'
template<>class __compressed_pair<void(*),class::std::__1::__builtin_new_allocator::__builtin_new_deleter>:private __compressed_pair_elem<void(*),0,0>,private __compressed_pair_elem<class::std::__1::__builtin_new_allocator::__builtin_new_deleter,1,0>{private:typedef class::std::__1::__compressed_pair_elem<void(*),0,0>_Base1;
                                               ~~~~~~~~~~~~^
vec.cpp:8926:246: error: use of undeclared identifier '__x'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>void swap(__compressed_pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>,__compressed_pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>){(__x.swap(__y));
                                                                                                                                                                                                                                                     ^
vec.cpp:8926:255: error: use of undeclared identifier '__y'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>void swap(__compressed_pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>,__compressed_pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>){(__x.swap(__y));
                                                                                                                                                                                                                                                              ^
vec.cpp:8932:156: error: C++ requires a type specifier for all declarations
public:template<typename __xcodeml_template_type_1_0>default_delete(default_delete<__xcodeml_template_type_1_0>,typename enable_if<expression,void>::type(*)){}
                                                                                                                                                           ^
vec.cpp:8932:150: error: parameter declarator cannot be qualified
public:template<typename __xcodeml_template_type_1_0>default_delete(default_delete<__xcodeml_template_type_1_0>,typename enable_if<expression,void>::type(*)){}
                                                                                                                                                   ~~^
vec.cpp:8933:107: error: expected ';' after expression
public:void operator()(__xcodeml_template_type_0_0(*__ptr))const{((sizeof(__xcodeml_template_type_0_0))>0)"default_delete can not delete incomplete type";
                                                                                                          ^
                                                                                                          ;
vec.cpp:8933:104: warning: expression result unused [-Wunused-value]
public:void operator()(__xcodeml_template_type_0_0(*__ptr))const{((sizeof(__xcodeml_template_type_0_0))>0)"default_delete can not delete incomplete type";
                                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
vec.cpp:8933:107: warning: expression result unused [-Wunused-value]
public:void operator()(__xcodeml_template_type_0_0(*__ptr))const{((sizeof(__xcodeml_template_type_0_0))>0)"default_delete can not delete incomplete type";
                                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:8934:41: error: expected unqualified-id
(!is_void<__xcodeml_template_type_0_0>::.value)"default_delete can not delete incomplete type";
                                        ^
vec.cpp:8939:1: error: extraneous 'template<>' in declaration of class 'default_delete'
template<>class default_delete;
^
vec.cpp:8939:17: error: redefinition of 'default_delete' as different kind of symbol
template<>class default_delete;
                ^
vec.cpp:8928:53: note: previous definition is here
template<typename __xcodeml_template_type_0_0>class default_delete{
                                                    ^
vec.cpp:8940:53: error: class template partial specialization does not specialize any template argument; to define the primary template, remove the template argument list
template<typename __xcodeml_template_type_0_0>class default_delete<__xcodeml_template_type_0_0>{private:
                                                    ^             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:8940:53: error: redefinition of 'default_delete'
vec.cpp:8928:53: note: previous definition is here
template<typename __xcodeml_template_type_0_0>class default_delete{
                                                    ^
vec.cpp:8961:62: error: no member named '__builtin_new_allocator' in namespace 'std::__1'
template<>class __unique_ptr_deleter_sfinae<class::std::__1::__builtin_new_allocator::__builtin_new_deleter>{
                                                 ~~~~~~~~~~~~^
vec.cpp:8987:9: warning: declaration does not declare anything [-Wmissing-declarations]
private:__compressed_pair<typename __pointer_type<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>::type,__xcodeml_template_type_0_1>;
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:8991:9: warning: typedef requires a name [-Wmissing-declarations]
private:typedef __unique_ptr_deleter_sfinae<__xcodeml_template_type_0_1>;
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:8992:145: error: expected ';' after alias declaration
private:template<bool _Dummy>using _LValRefType=typename __dependent_type<__unique_ptr_deleter_sfinae<__xcodeml_template_type_0_1>,expression>::__lval_ref_type;
                                                                                                                                                ^
                                                                                                                                                ;
vec.cpp:8993:149: error: expected ';' after alias declaration
private:template<bool _Dummy>using _GoodRValRefType=typename __dependent_type<__unique_ptr_deleter_sfinae<__xcodeml_template_type_0_1>,expression>::__good_rval_ref_type;
                                                                                                                                                    ^
                                                                                                                                                    ;
vec.cpp:8994:148: error: expected ';' after alias declaration
private:template<bool _Dummy>using _BadRValRefType=typename __dependent_type<__unique_ptr_deleter_sfinae<__xcodeml_template_type_0_1>,expression>::__bad_rval_ref_type;
                                                                                                                                                   ^
                                                                                                                                                   ;
vec.cpp:8995:147: error: expected ';' after alias declaration
private:template<bool _Dummy,typename __xcodeml_template_type_1_1>using _EnableIfDeleterDefaultConstructible=typename enable_if<expression,void>::type;
                                                                                                                                                  ^
                                                                                                                                                  ;
vec.cpp:8996:128: error: expected ';' after alias declaration
private:template<typename __xcodeml_template_type_1_0>using _EnableIfDeleterConstructible=typename enable_if<expression,void>::type;
                                                                                                                               ^
                                                                                                                               ;
vec.cpp:8997:160: error: expected ';' after alias declaration
private:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1>using _EnableIfMoveConvertible=typename enable_if<expression,void>::type;
                                                                                                                                                               ^
                                                                                                                                                               ;
vec.cpp:8998:126: error: expected ';' after alias declaration
private:template<typename __xcodeml_template_type_1_0>using _EnableIfDeleterConvertible=typename enable_if<expression,void>::type;
                                                                                                                             ^
                                                                                                                             ;
vec.cpp:8999:125: error: expected ';' after alias declaration
private:template<typename __xcodeml_template_type_1_0>using _EnableIfDeleterAssignable=typename enable_if<expression,void>::type;
                                                                                                                            ^
                                                                                                                            ;
vec.cpp:9004:269: error: parameter declarator cannot be qualified
public:template<bool _Dummy=true,typename __xcodeml_template_type_1_1>unique_ptr(typename __pointer_type<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>::type __p,typename __dependent_type<__unique_ptr_deleter_sfinae<__xcodeml_template_type_0_1>,expression>::__lval_ref_type __d):__ptr_(__p __d){}
                                                                                                                                                                                                                                                                          ~~^
vec.cpp:9004:285: error: expected ')'
public:template<bool _Dummy=true,typename __xcodeml_template_type_1_1>unique_ptr(typename __pointer_type<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>::type __p,typename __dependent_type<__unique_ptr_deleter_sfinae<__xcodeml_template_type_0_1>,expression>::__lval_ref_type __d):__ptr_(__p __d){}
                                                                                                                                                                                                                                                                                            ^
vec.cpp:9004:81: note: to match this '('
public:template<bool _Dummy=true,typename __xcodeml_template_type_1_1>unique_ptr(typename __pointer_type<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>::type __p,typename __dependent_type<__unique_ptr_deleter_sfinae<__xcodeml_template_type_0_1>,expression>::__lval_ref_type __d):__ptr_(__p __d){}
                                                                                ^
vec.cpp:9005:269: error: parameter declarator cannot be qualified
public:template<bool _Dummy=true,typename __xcodeml_template_type_1_1>unique_ptr(typename __pointer_type<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>::type __p,typename __dependent_type<__unique_ptr_deleter_sfinae<__xcodeml_template_type_0_1>,expression>::__good_rval_ref_type __d):__ptr_(__p(std::__1::(__d))){(!is_reference<__xcodeml_template_type_0_1>::.value)"rvalue deleter bound to reference";
                                                                                                                                                                                                                                                                          ~~^
vec.cpp:9005:290: error: expected ')'
public:template<bool _Dummy=true,typename __xcodeml_template_type_1_1>unique_ptr(typename __pointer_type<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>::type __p,typename __dependent_type<__unique_ptr_deleter_sfinae<__xcodeml_template_type_0_1>,expression>::__good_rval_ref_type __d):__ptr_(__p(std::__1::(__d))){(!is_reference<__xcodeml_template_type_0_1>::.value)"rvalue deleter bound to reference";
                                                                                                                                                                                                                                                                                                 ^
vec.cpp:9005:81: note: to match this '('
public:template<bool _Dummy=true,typename __xcodeml_template_type_1_1>unique_ptr(typename __pointer_type<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>::type __p,typename __dependent_type<__unique_ptr_deleter_sfinae<__xcodeml_template_type_0_1>,expression>::__good_rval_ref_type __d):__ptr_(__p(std::__1::(__d))){(!is_reference<__xcodeml_template_type_0_1>::.value)"rvalue deleter bound to reference";
                                                                                ^
vec.cpp:9007:269: error: parameter declarator cannot be qualified
public:template<bool _Dummy=true,typename __xcodeml_template_type_1_1>unique_ptr(typename __pointer_type<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>::type __p,typename __dependent_type<__unique_ptr_deleter_sfinae<__xcodeml_template_type_0_1>,expression>::__bad_rval_ref_type __d)
                                                                                                                                                                                                                                                                          ~~^
vec.cpp:9007:289: error: expected ')'
public:template<bool _Dummy=true,typename __xcodeml_template_type_1_1>unique_ptr(typename __pointer_type<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>::type __p,typename __dependent_type<__unique_ptr_deleter_sfinae<__xcodeml_template_type_0_1>,expression>::__bad_rval_ref_type __d)
                                                                                                                                                                                                                                                                                                ^
vec.cpp:9007:81: note: to match this '('
public:template<bool _Dummy=true,typename __xcodeml_template_type_1_1>unique_ptr(typename __pointer_type<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>::type __p,typename __dependent_type<__unique_ptr_deleter_sfinae<__xcodeml_template_type_0_1>,expression>::__bad_rval_ref_type __d)
                                                                                ^
vec.cpp:9007:293: error: expected ';' at end of declaration list
public:template<bool _Dummy=true,typename __xcodeml_template_type_1_1>unique_ptr(typename __pointer_type<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>::type __p,typename __dependent_type<__unique_ptr_deleter_sfinae<__xcodeml_template_type_0_1>,expression>::__bad_rval_ref_type __d)
                                                                                                                                                                                                                                                                                                    ^
                                                                                                                                                                                                                                                                                                    ;
vec.cpp:9001:84: error: member initializer '__ptr_' does not name a non-static data member or base class
public:template<bool _Dummy=true,typename __xcodeml_template_type_1_1>unique_ptr():__ptr_(__xcodeml_identity<typename __pointer_type<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>::type>::t()){}
                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:9002:93: error: member initializer '__ptr_' does not name a non-static data member or base class
public:template<bool _Dummy=true,typename __xcodeml_template_type_1_1>unique_ptr(nullptr_t):__ptr_(__xcodeml_identity<typename __pointer_type<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>::type>::t()){}
                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:9003:174: error: member initializer '__ptr_' does not name a non-static data member or base class
public:template<bool _Dummy=true,typename __xcodeml_template_type_1_1>unique_ptr(typename __pointer_type<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>::type __p):__ptr_(__p){}
                                                                                                                                                                             ^~~~~~~~~~~
vec.cpp:9004:301: error: expected ')'
public:template<bool _Dummy=true,typename __xcodeml_template_type_1_1>unique_ptr(typename __pointer_type<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>::type __p,typename __dependent_type<__unique_ptr_deleter_sfinae<__xcodeml_template_type_0_1>,expression>::__lval_ref_type __d):__ptr_(__p __d){}
                                                                                                                                                                                                                                                                                                            ^
vec.cpp:9004:296: note: to match this '('
public:template<bool _Dummy=true,typename __xcodeml_template_type_1_1>unique_ptr(typename __pointer_type<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>::type __p,typename __dependent_type<__unique_ptr_deleter_sfinae<__xcodeml_template_type_0_1>,expression>::__lval_ref_type __d):__ptr_(__p __d){}
                                                                                                                                                                                                                                                                                                       ^
vec.cpp:9004:290: error: member initializer '__ptr_' does not name a non-static data member or base class
public:template<bool _Dummy=true,typename __xcodeml_template_type_1_1>unique_ptr(typename __pointer_type<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>::type __p,typename __dependent_type<__unique_ptr_deleter_sfinae<__xcodeml_template_type_0_1>,expression>::__lval_ref_type __d):__ptr_(__p __d){}
                                                                                                                                                                                                                                                                                                 ^~~~~~~~~~~~~~~
vec.cpp:9005:316: error: expected unqualified-id
public:template<bool _Dummy=true,typename __xcodeml_template_type_1_1>unique_ptr(typename __pointer_type<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>::type __p,typename __dependent_type<__unique_ptr_deleter_sfinae<__xcodeml_template_type_0_1>,expression>::__good_rval_ref_type __d):__ptr_(__p(std::__1::(__d))){(!is_reference<__xcodeml_template_type_0_1>::.value)"rvalue deleter bound to reference";
                                                                                                                                                                                                                                                                                                                           ^
vec.cpp:9005:317: error: use of undeclared identifier '__d'
public:template<bool _Dummy=true,typename __xcodeml_template_type_1_1>unique_ptr(typename __pointer_type<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>::type __p,typename __dependent_type<__unique_ptr_deleter_sfinae<__xcodeml_template_type_0_1>,expression>::__good_rval_ref_type __d):__ptr_(__p(std::__1::(__d))){(!is_reference<__xcodeml_template_type_0_1>::.value)"rvalue deleter bound to reference";
                                                                                                                                                                                                                                                                                                                            ^
vec.cpp:9005:369: error: expected unqualified-id
public:template<bool _Dummy=true,typename __xcodeml_template_type_1_1>unique_ptr(typename __pointer_type<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>::type __p,typename __dependent_type<__unique_ptr_deleter_sfinae<__xcodeml_template_type_0_1>,expression>::__good_rval_ref_type __d):__ptr_(__p(std::__1::(__d))){(!is_reference<__xcodeml_template_type_0_1>::.value)"rvalue deleter bound to reference";
                                                                                                                                                                                                                                                                                                                                                                                ^
vec.cpp:9051:50: error: no member named '__builtin_new_allocator' in namespace 'std::__1'
template<>class unique_ptr<void,class::std::__1::__builtin_new_allocator::__builtin_new_deleter>{public:
                                     ~~~~~~~~~~~~^
vec.cpp:9108:90: error: class template partial specialization does not specialize any template argument; to define the primary template, remove the template argument list
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class unique_ptr<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>{public:
                                                                                         ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:9108:90: error: redefinition of 'unique_ptr'
vec.cpp:8979:90: note: previous definition is here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class unique_ptr{public:
                                                                                         ^
vec.cpp:9184:121: error: definition or redeclaration of 'type' cannot name the global scope
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>typename enable_if<expression,void>::type swap(unique_ptr<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>,unique_ptr<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>){(__x.swap(__y));
                                                                                                                      ~~^
vec.cpp:9184:125: error: expected ';' at end of declaration
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>typename enable_if<expression,void>::type swap(unique_ptr<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>,unique_ptr<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>){(__x.swap(__y));
                                                                                                                            ^
                                                                                                                            ;
vec.cpp:9184:126: error: unknown type name 'swap'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>typename enable_if<expression,void>::type swap(unique_ptr<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>,unique_ptr<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>){(__x.swap(__y));
                                                                                                                             ^
vec.cpp:9184:198: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>typename enable_if<expression,void>::type swap(unique_ptr<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>,unique_ptr<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>){(__x.swap(__y));
                                                                                                                                                                                                     ^
vec.cpp:9184:198: error: expected ')'
vec.cpp:9184:130: note: to match this '('
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>typename enable_if<expression,void>::type swap(unique_ptr<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>,unique_ptr<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>){(__x.swap(__y));
                                                                                                                                 ^
vec.cpp:9186:319: error: use of undeclared identifier '__x'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3>bool operator==(unique_ptr<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>,unique_ptr<__xcodeml_template_type_0_2,__xcodeml_template_type_0_3>){return((__x.get()),(__y.get()));
                                                                                                                                                                                                                                                                                                                              ^
vec.cpp:9186:331: error: use of undeclared identifier '__y'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3>bool operator==(unique_ptr<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>,unique_ptr<__xcodeml_template_type_0_2,__xcodeml_template_type_0_3>){return((__x.get()),(__y.get()));
                                                                                                                                                                                                                                                                                                                                          ^
vec.cpp:9188:320: error: use of undeclared identifier '__x'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3>bool operator!=(unique_ptr<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>,unique_ptr<__xcodeml_template_type_0_2,__xcodeml_template_type_0_3>){return(!(__x,__y));
                                                                                                                                                                                                                                                                                                                               ^
vec.cpp:9188:324: error: use of undeclared identifier '__y'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3>bool operator!=(unique_ptr<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>,unique_ptr<__xcodeml_template_type_0_2,__xcodeml_template_type_0_3>){return(!(__x,__y));
                                                                                                                                                                                                                                                                                                                                   ^
vec.cpp:9192:30: error: expected expression
typedef typename common_type<...>::type _Vp;
                             ^
vec.cpp:9192:36: error: definition or redeclaration of 'type' cannot name the global scope
typedef typename common_type<...>::type _Vp;
                                 ~~^
vec.cpp:9192:36: error: typedef declarator cannot be qualified
typedef typename common_type<...>::type _Vp;
                                 ~~^
vec.cpp:9192:40: error: expected ';' at end of declaration
typedef typename common_type<...>::type _Vp;
                                       ^
                                       ;
vec.cpp:9193:53: error: expected expression
return(__xcodeml_identity<less<typename common_type<...>::type> >::t()((__x.get()),(__y.get())));
                                                    ^
vec.cpp:9193:59: error: no type named 'type' in the global namespace
return(__xcodeml_identity<less<typename common_type<...>::type> >::t()((__x.get()),(__y.get())));
                                                        ~~^
vec.cpp:9193:65: error: expected a type
return(__xcodeml_identity<less<typename common_type<...>::type> >::t()((__x.get()),(__y.get())));
                                                                ^
vec.cpp:9193:68: error: no type named 't' in the global namespace
return(__xcodeml_identity<less<typename common_type<...>::type> >::t()((__x.get()),(__y.get())));
                                                                 ~~^
vec.cpp:9193:76: error: expected ')'
return(__xcodeml_identity<less<typename common_type<...>::type> >::t()((__x.get()),(__y.get())));
                                                                           ^
vec.cpp:9193:72: note: to match this '('
return(__xcodeml_identity<less<typename common_type<...>::type> >::t()((__x.get()),(__y.get())));
                                                                       ^
vec.cpp:9193:73: error: C++ requires a type specifier for all declarations
return(__xcodeml_identity<less<typename common_type<...>::type> >::t()((__x.get()),(__y.get())));
                                                                        ^
vec.cpp:9193:88: error: expected ')'
return(__xcodeml_identity<less<typename common_type<...>::type> >::t()((__x.get()),(__y.get())));
                                                                                       ^
vec.cpp:9193:84: note: to match this '('
return(__xcodeml_identity<less<typename common_type<...>::type> >::t()((__x.get()),(__y.get())));
                                                                                   ^
vec.cpp:9193:85: error: C++ requires a type specifier for all declarations
return(__xcodeml_identity<less<typename common_type<...>::type> >::t()((__x.get()),(__y.get())));
                                                                                    ^
vec.cpp:9195:317: error: use of undeclared identifier '__y'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3>bool operator>(unique_ptr<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>,unique_ptr<__xcodeml_template_type_0_2,__xcodeml_template_type_0_3>){return(__y,__x);
                                                                                                                                                                                                                                                                                                                            ^
vec.cpp:9195:321: error: use of undeclared identifier '__x'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3>bool operator>(unique_ptr<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>,unique_ptr<__xcodeml_template_type_0_2,__xcodeml_template_type_0_3>){return(__y,__x);
                                                                                                                                                                                                                                                                                                                                ^
vec.cpp:9197:320: error: use of undeclared identifier '__y'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3>bool operator<=(unique_ptr<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>,unique_ptr<__xcodeml_template_type_0_2,__xcodeml_template_type_0_3>){return(!(__y,__x));
                                                                                                                                                                                                                                                                                                                               ^
vec.cpp:9197:324: error: use of undeclared identifier '__x'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3>bool operator<=(unique_ptr<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>,unique_ptr<__xcodeml_template_type_0_2,__xcodeml_template_type_0_3>){return(!(__y,__x));
                                                                                                                                                                                                                                                                                                                                   ^
vec.cpp:9199:320: error: use of undeclared identifier '__x'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3>bool operator>=(unique_ptr<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>,unique_ptr<__xcodeml_template_type_0_2,__xcodeml_template_type_0_3>){return(!(__x,__y));
                                                                                                                                                                                                                                                                                                                               ^
vec.cpp:9199:324: error: use of undeclared identifier '__y'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3>bool operator>=(unique_ptr<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>,unique_ptr<__xcodeml_template_type_0_2,__xcodeml_template_type_0_3>){return(!(__x,__y));
                                                                                                                                                                                                                                                                                                                                   ^
vec.cpp:9201:187: error: use of undeclared identifier '__x'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator==(unique_ptr<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>,nullptr_t){return(!__x);
                                                                                                                                                                                          ^
vec.cpp:9203:187: error: use of undeclared identifier '__x'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator==(nullptr_t,unique_ptr<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>){return(!__x);
                                                                                                                                                                                          ^
vec.cpp:9205:204: error: use of undeclared identifier '__x'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator!=(unique_ptr<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>,nullptr_t){return static_cast<bool>(__x);
                                                                                                                                                                                                           ^
vec.cpp:9207:204: error: use of undeclared identifier '__x'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator!=(nullptr_t,unique_ptr<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>){return static_cast<bool>(__x);
                                                                                                                                                                                                           ^
vec.cpp:9210:127: error: use of undeclared identifier '__x'
return(__xcodeml_identity<less<typename unique_ptr<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>::pointer> >::t()((__x.get()),nullptr));
                                                                                                                              ^
vec.cpp:9213:135: error: use of undeclared identifier '__x'
return(__xcodeml_identity<less<typename unique_ptr<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>::pointer> >::t()(nullptr,(__x.get())));
                                                                                                                                      ^
vec.cpp:9215:193: error: use of undeclared identifier '__x'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator>(unique_ptr<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>,nullptr_t){return(nullptr,__x);
                                                                                                                                                                                                ^
vec.cpp:9217:185: error: use of undeclared identifier '__x'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator>(nullptr_t,unique_ptr<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>){return(__x,nullptr);
                                                                                                                                                                                        ^
vec.cpp:9219:196: error: use of undeclared identifier '__x'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator<=(unique_ptr<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>,nullptr_t){return(!(nullptr,__x));
                                                                                                                                                                                                   ^
vec.cpp:9221:188: error: use of undeclared identifier '__x'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator<=(nullptr_t,unique_ptr<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>){return(!(__x,nullptr));
                                                                                                                                                                                           ^
vec.cpp:9223:188: error: use of undeclared identifier '__x'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator>=(unique_ptr<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>,nullptr_t){return(!(__x,nullptr));
                                                                                                                                                                                           ^
vec.cpp:9225:196: error: use of undeclared identifier '__x'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator>=(nullptr_t,unique_ptr<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>){return(!(nullptr,__x));
                                                                                                                                                                                                   ^
vec.cpp:9227:72: warning: typedef requires a name [-Wmissing-declarations]
template<typename __xcodeml_template_type_0_0>class __unique_if{public:typedef unique_ptr<__xcodeml_template_type_0_0,default_delete<__xcodeml_template_type_0_0> >;
                                                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:9231:53: error: class template partial specialization does not specialize any template argument; to define the primary template, remove the template argument list
template<typename __xcodeml_template_type_0_0>class __unique_if<__xcodeml_template_type_0_0>{public:typedef unique_ptr<__xcodeml_template_type_0_0,default_delete<__xcodeml_template_type_0_0> >;
                                                    ^          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:9231:53: error: redefinition of '__unique_if'
vec.cpp:9227:53: note: previous definition is here
template<typename __xcodeml_template_type_0_0>class __unique_if{public:typedef unique_ptr<__xcodeml_template_type_0_0,default_delete<__xcodeml_template_type_0_0> >;
                                                    ^
vec.cpp:9234:71: error: class template partial specialization does not specialize any template argument; to define the primary template, remove the template argument list
template<typename __xcodeml_template_type_0_0,unsigned long _Np>class __unique_if<__xcodeml_template_type_0_0>{public:typedef void __unique_array_known_bound;
                                                                      ^          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:9234:1: error: too many template parameters in template redeclaration
template<typename __xcodeml_template_type_0_0,unsigned long _Np>class __unique_if<__xcodeml_template_type_0_0>{public:typedef void __unique_array_known_bound;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:9227:1: note: previous template declaration is here
template<typename __xcodeml_template_type_0_0>class __unique_if{public:typedef unique_ptr<__xcodeml_template_type_0_0,default_delete<__xcodeml_template_type_0_0> >;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:9237:299: error: missing 'typename' prior to dependent type name '__xcodeml_identity<__xcodeml_template_type_0_0>::t'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>typename __unique_if<__xcodeml_template_type_0_0>::__unique_single make_unique(void/*__args*/){return __xcodeml_identity<unique_ptr<__xcodeml_template_type_0_0,default_delete<__xcodeml_template_type_0_0> > >::t(new __xcodeml_identity<__xcodeml_template_type_0_0>::t((std::__1::__xcodeml_template_type_0_1(__args))));
                                                                                                                                                                                                                                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                                                                                                                                                                                                                                                                                          typename 
vec.cpp:9237:361: error: no member named '__xcodeml_template_type_0_1' in namespace 'std::__1'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>typename __unique_if<__xcodeml_template_type_0_0>::__unique_single make_unique(void/*__args*/){return __xcodeml_identity<unique_ptr<__xcodeml_template_type_0_0,default_delete<__xcodeml_template_type_0_0> > >::t(new __xcodeml_identity<__xcodeml_template_type_0_0>::t((std::__1::__xcodeml_template_type_0_1(__args))));
                                                                                                                                                                                                                                                                                                                                                              ~~~~~~~~~~^
vec.cpp:9237:389: error: use of undeclared identifier '__args'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>typename __unique_if<__xcodeml_template_type_0_0>::__unique_single make_unique(void/*__args*/){return __xcodeml_identity<unique_ptr<__xcodeml_template_type_0_0,default_delete<__xcodeml_template_type_0_0> > >::t(new __xcodeml_identity<__xcodeml_template_type_0_0>::t((std::__1::__xcodeml_template_type_0_1(__args))));
                                                                                                                                                                                                                                                                                                                                                                                                    ^
vec.cpp:9240:121: error: missing 'typename' prior to dependent type name '__xcodeml_identity<typename remove_extent<__xcodeml_template_type_0_0>::type>::t'
return __xcodeml_identity<unique_ptr<__xcodeml_template_type_0_0,default_delete<__xcodeml_template_type_0_0> > >::t(new __xcodeml_identity<typename remove_extent<__xcodeml_template_type_0_0>::type>::t[__n]());
                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                                                                                                        typename 
vec.cpp:9242:183: error: expected ';' at end of declaration
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>typename __unique_if<__xcodeml_template_type_0_0>::__unique_array_known_bound make_unique(void/**/)
                                                                                                                                                                                      ^
                                                                                                                                                                                      ;
vec.cpp:9243:172: warning: typedef requires a name [-Wmissing-declarations]
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class hash<unique_ptr<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1> >{public:typedef unique_ptr<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>;
                                                                                                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:9246:127: error: use of undeclared identifier '__ptr'
return(__xcodeml_identity<hash<typename unique_ptr<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>::pointer> >::t()((__ptr.get())));
                                                                                                                              ^
vec.cpp:9252:242: error: expected ')'
private:template<typename __xcodeml_template_type_0_0>void __process(__xcodeml_template_type_0_0(*__p),class::std::__1::integral_constant<bool,0>){{unsigned long __i=0;for(;(__i<this->__size_);((++__i),(++__p))){(__xcodeml_template_type_0_0 __p());}};
                                                                                                                                                                                                                                                 ^
vec.cpp:9252:213: note: to match this '('
private:template<typename __xcodeml_template_type_0_0>void __process(__xcodeml_template_type_0_0(*__p),class::std::__1::integral_constant<bool,0>){{unsigned long __i=0;for(;(__i<this->__size_);((++__i),(++__p))){(__xcodeml_template_type_0_0 __p());}};
                                                                                                                                                                                                                    ^
vec.cpp:9252:248: error: expected expression
private:template<typename __xcodeml_template_type_0_0>void __process(__xcodeml_template_type_0_0(*__p),class::std::__1::integral_constant<bool,0>){{unsigned long __i=0;for(;(__i<this->__size_);((++__i),(++__p))){(__xcodeml_template_type_0_0 __p());}};
                                                                                                                                                                                                                                                       ^
vec.cpp:9263:154: error: expected a type
public:template<typename __xcodeml_template_type_0_0>void __incr(__xcodeml_template_type_0_0(*)){((__xcodeml_identity<integral_constant<bool,expression> >::t()));
                                                                                                                                                         ^
vec.cpp:9263:157: error: no type named 't' in the global namespace
public:template<typename __xcodeml_template_type_0_0>void __incr(__xcodeml_template_type_0_0(*)){((__xcodeml_identity<integral_constant<bool,expression> >::t()));
                                                                                                                                                          ~~^
vec.cpp:9265:175: error: expected a type
public:template<typename __xcodeml_template_type_0_0>void __set(unsigned long __s,__xcodeml_template_type_0_0(*)){((__s,__xcodeml_identity<integral_constant<bool,expression> >::t()));
                                                                                                                                                                              ^
vec.cpp:9265:178: error: no member named 't' in the global namespace
public:template<typename __xcodeml_template_type_0_0>void __set(unsigned long __s,__xcodeml_template_type_0_0(*)){((__s,__xcodeml_identity<integral_constant<bool,expression> >::t()));
                                                                                                                                                                               ~~^
vec.cpp:9267:165: error: expected a type
public:template<typename __xcodeml_template_type_0_0>void operator()(__xcodeml_template_type_0_0(*__p)){((__p,__xcodeml_identity<integral_constant<bool,expression> >::t()));
                                                                                                                                                                    ^
vec.cpp:9267:168: error: no member named 't' in the global namespace
public:template<typename __xcodeml_template_type_0_0>void operator()(__xcodeml_template_type_0_0(*__p)){((__p,__xcodeml_identity<integral_constant<bool,expression> >::t()));
                                                                                                                                                                     ~~^
vec.cpp:9271:84: warning: typedef requires a name [-Wmissing-declarations]
template<typename __xcodeml_template_type_0_0>class __allocator_destructor{private:typedef allocator_traits<__xcodeml_template_type_0_0>;
                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:9280:141: error: expected unqualified-id
public:void operator()(typename allocator_traits<__xcodeml_template_type_0_0>::pointer __p){(allocator_traits<__xcodeml_template_type_0_0>::.deallocate(this->__alloc_,__p,this->__s_));
                                                                                                                                            ^
vec.cpp:9287:87: error: expected unqualified-id
try{{;for(;(__f,__l);((++__f),((void)(++__r)))){::new(static_cast<void(*)>((std::__1::((*__r)))))__xcodeml_identity<typename iterator_traits<__xcodeml_template_type_0_1>::value_type>::t((*__f));}};
                                                                                      ^
vec.cpp:9288:106: error: expected ')'
}catch(...){{;for(;(__s,__r);(++__s)){(typename iterator_traits<__xcodeml_template_type_0_1>::value_type __s());}};
                                                                                                         ^
vec.cpp:9288:39: note: to match this '('
}catch(...){{;for(;(__s,__r);(++__s)){(typename iterator_traits<__xcodeml_template_type_0_1>::value_type __s());}};
                                      ^
vec.cpp:9288:112: error: expected expression
}catch(...){{;for(;(__s,__r);(++__s)){(typename iterator_traits<__xcodeml_template_type_0_1>::value_type __s());}};
                                                                                                               ^
vec.cpp:9296:103: error: expected unqualified-id
try{{;for(;(__n,0);(((++__f),((void)(++__r))),((void)(--__n)))){::new(static_cast<void(*)>((std::__1::((*__r)))))__xcodeml_identity<typename iterator_traits<__xcodeml_template_type_0_2>::value_type>::t((*__f));}};
                                                                                                      ^
vec.cpp:9297:106: error: expected ')'
}catch(...){{;for(;(__s,__r);(++__s)){(typename iterator_traits<__xcodeml_template_type_0_2>::value_type __s());}};
                                                                                                         ^
vec.cpp:9297:39: note: to match this '('
}catch(...){{;for(;(__s,__r);(++__s)){(typename iterator_traits<__xcodeml_template_type_0_2>::value_type __s());}};
                                      ^
vec.cpp:9297:112: error: expected expression
}catch(...){{;for(;(__s,__r);(++__s)){(typename iterator_traits<__xcodeml_template_type_0_2>::value_type __s());}};
                                                                                                               ^
vec.cpp:9305:69: error: expected unqualified-id
try{{;for(;(__f,__l);(++__f)){::new(static_cast<void(*)>((std::__1::((*__f)))))__xcodeml_identity<typename iterator_traits<__xcodeml_template_type_0_0>::value_type>::t(__x);}};
                                                                    ^
vec.cpp:9306:106: error: expected ')'
}catch(...){{;for(;(__s,__f);(++__s)){(typename iterator_traits<__xcodeml_template_type_0_0>::value_type __s());}};
                                                                                                         ^
vec.cpp:9306:39: note: to match this '('
}catch(...){{;for(;(__s,__f);(++__s)){(typename iterator_traits<__xcodeml_template_type_0_0>::value_type __s());}};
                                      ^
vec.cpp:9306:112: error: expected expression
}catch(...){{;for(;(__s,__f);(++__s)){(typename iterator_traits<__xcodeml_template_type_0_0>::value_type __s());}};
                                                                                                               ^
vec.cpp:9313:85: error: expected unqualified-id
try{{;for(;(__n,0);((++__f),((void)(--__n)))){::new(static_cast<void(*)>((std::__1::((*__f)))))__xcodeml_identity<typename iterator_traits<__xcodeml_template_type_0_0>::value_type>::t(__x);}};
                                                                                    ^
vec.cpp:9314:106: error: expected ')'
}catch(...){{;for(;(__s,__f);(++__s)){(typename iterator_traits<__xcodeml_template_type_0_0>::value_type __s());}};
                                                                                                         ^
vec.cpp:9314:39: note: to match this '('
}catch(...){{;for(;(__s,__f);(++__s)){(typename iterator_traits<__xcodeml_template_type_0_0>::value_type __s());}};
                                      ^
vec.cpp:9314:112: error: expected expression
}catch(...){{;for(;(__s,__f);(++__s)){(typename iterator_traits<__xcodeml_template_type_0_0>::value_type __s());}};
                                                                                                               ^
vec.cpp:9322:68: error: cannot initialize return object of type 'long' with an rvalue of type 'long *'
template <>long __libcpp_atomic_refcount_increment(long&__t){return(&__t)0 1;
                                                                   ^~~~~~
vec.cpp:9322:75: error: expected ';' after expression
template <>long __libcpp_atomic_refcount_increment(long&__t){return(&__t)0 1;
                                                                          ^
                                                                          ;
vec.cpp:9322:74: warning: expression result unused [-Wunused-value]
template <>long __libcpp_atomic_refcount_increment(long&__t){return(&__t)0 1;
                                                                         ^
vec.cpp:9322:76: warning: expression result unused [-Wunused-value]
template <>long __libcpp_atomic_refcount_increment(long&__t){return(&__t)0 1;
                                                                           ^
vec.cpp:9326:68: error: cannot initialize return object of type 'long' with an rvalue of type 'long *'
template <>long __libcpp_atomic_refcount_decrement(long&__t){return(&__t)4(-1);
                                                                   ^~~~~~
vec.cpp:9326:75: error: called object type 'int' is not a function or function pointer
template <>long __libcpp_atomic_refcount_decrement(long&__t){return(&__t)4(-1);
                                                                         ~^
vec.cpp:9328:27: error: expected class name
class bad_weak_ptr:public exception{public:
                          ^
vec.cpp:9378:183: warning: declaration does not declare anything [-Wmissing-declarations]
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __shared_ptr_pointer:public __shared_weak_count{private:__compressed_pair<__compressed_pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>,__xcodeml_template_type_0_2>;
                                                                                                                                                                                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:9380:248: error: expected unqualified-id
public:__shared_ptr_pointer(__xcodeml_template_type_0_0 __p,__xcodeml_template_type_0_1 __d,__xcodeml_template_type_0_2 __a):__data_(__xcodeml_identity<__compressed_pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1> >::t(__p,(std::__1::(__d)))(std::__1::(__a))){}
                                                                                                                                                                                                                                                       ^
vec.cpp:9380:266: error: expected unqualified-id
public:__shared_ptr_pointer(__xcodeml_template_type_0_0 __p,__xcodeml_template_type_0_1 __d,__xcodeml_template_type_0_2 __a):__data_(__xcodeml_identity<__compressed_pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1> >::t(__p,(std::__1::(__d)))(std::__1::(__a))){}
                                                                                                                                                                                                                                                                         ^
vec.cpp:9388:13: error: '__shared_ptr_pointer' is not a class, namespace, or enumeration
void const(*__shared_ptr_pointer::__get_deleter(class type_info const&__t)const){return(__t.operator==(__xcodeml_template_type_0_1)?(std::__1::(((this->__data_.first()).second()))):nullptr);
            ^
vec.cpp:9378:127: note: '__shared_ptr_pointer' declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __shared_ptr_pointer:public __shared_weak_count{private:__compressed_pair<__compressed_pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>,__xcodeml_template_type_0_2>;
                                                                                                                              ^
vec.cpp:9390:6: error: '__shared_ptr_pointer' is not a class, namespace, or enumeration
void __shared_ptr_pointer::__on_zero_shared(){(((this->__data_.first()).second())(((this->__data_.first()).first())));
     ^
vec.cpp:9378:127: note: '__shared_ptr_pointer' declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __shared_ptr_pointer:public __shared_weak_count{private:__compressed_pair<__compressed_pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>,__xcodeml_template_type_0_2>;
                                                                                                                              ^
vec.cpp:9393:6: error: '__shared_ptr_pointer' is not a class, namespace, or enumeration
void __shared_ptr_pointer::__on_zero_shared_weak(){typedef typename __allocator_traits_rebind<__xcodeml_template_type_0_2,class __shared_ptr_pointer,expression>::type _Al;
     ^
vec.cpp:9378:127: note: '__shared_ptr_pointer' declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __shared_ptr_pointer:public __shared_weak_count{private:__compressed_pair<__compressed_pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>,__xcodeml_template_type_0_2>;
                                                                                                                              ^
vec.cpp:9400:146: warning: declaration does not declare anything [-Wmissing-declarations]
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __shared_ptr_emplace:public __shared_weak_count{private:__compressed_pair<__xcodeml_template_type_0_1,__xcodeml_template_type_0_0>;
                                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:9403:74: error: 'void' must be the first and only parameter if specified
public:template<typename __xcodeml_template_type_1_0>__shared_ptr_emplace(__xcodeml_template_type_0_1 __a,void/*__args*/):__data_(piecewise_construct(std::__1::(__a))(std::__1::((std::__1::__xcodeml_template_type_1_0(__args))))){}
                                                                         ^
vec.cpp:9402:81: error: expected unqualified-id
public:__shared_ptr_emplace(__xcodeml_template_type_0_1 __a):__data_((std::__1::(__a))){}
                                                                                ^
vec.cpp:9403:161: error: expected unqualified-id
public:template<typename __xcodeml_template_type_1_0>__shared_ptr_emplace(__xcodeml_template_type_0_1 __a,void/*__args*/):__data_(piecewise_construct(std::__1::(__a))(std::__1::((std::__1::__xcodeml_template_type_1_0(__args))))){}
                                                                                                                                                                ^
vec.cpp:9403:178: error: expected unqualified-id
public:template<typename __xcodeml_template_type_1_0>__shared_ptr_emplace(__xcodeml_template_type_0_1 __a,void/*__args*/):__data_(piecewise_construct(std::__1::(__a))(std::__1::((std::__1::__xcodeml_template_type_1_0(__args))))){}
                                                                                                                                                                                 ^
vec.cpp:9403:190: error: no member named '__xcodeml_template_type_1_0' in namespace 'std::__1'
public:template<typename __xcodeml_template_type_1_0>__shared_ptr_emplace(__xcodeml_template_type_0_1 __a,void/*__args*/):__data_(piecewise_construct(std::__1::(__a))(std::__1::((std::__1::__xcodeml_template_type_1_0(__args))))){}
                                                                                                                                                                                   ~~~~~~~~~~^
vec.cpp:9403:218: error: use of undeclared identifier '__args'
public:template<typename __xcodeml_template_type_1_0>__shared_ptr_emplace(__xcodeml_template_type_0_1 __a,void/*__args*/):__data_(piecewise_construct(std::__1::(__a))(std::__1::((std::__1::__xcodeml_template_type_1_0(__args))))){}
                                                                                                                                                                                                                         ^
vec.cpp:9408:61: error: expected unqualified-id
public:__xcodeml_template_type_0_0(*get()){return(std::__1::((this->__data_.second())));
                                                            ^
vec.cpp:9413:6: error: '__shared_ptr_emplace' is not a class, namespace, or enumeration
void __shared_ptr_emplace::__on_zero_shared(){(__xcodeml_template_type_0_0(this->__data_.second())());
     ^
vec.cpp:9400:90: note: '__shared_ptr_emplace' declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __shared_ptr_emplace:public __shared_weak_count{private:__compressed_pair<__xcodeml_template_type_0_1,__xcodeml_template_type_0_0>;
                                                                                         ^
vec.cpp:9415:6: error: '__shared_ptr_emplace' is not a class, namespace, or enumeration
void __shared_ptr_emplace::__on_zero_shared_weak(){typedef typename __allocator_traits_rebind<__xcodeml_template_type_0_1,class __shared_ptr_emplace,expression>::type _Al;
     ^
vec.cpp:9400:90: note: '__shared_ptr_emplace' declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __shared_ptr_emplace:public __shared_weak_count{private:__compressed_pair<__xcodeml_template_type_0_1,__xcodeml_template_type_0_0>;
                                                                                         ^
vec.cpp:9424:74: warning: typedef requires a name [-Wmissing-declarations]
public:template<typename __xcodeml_template_type_0_0>class rebind{public:typedef allocator<__xcodeml_template_type_0_0>;
                                                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:9443:166: error: parameter declarator cannot be qualified
public:template<typename __xcodeml_template_type_1_0>shared_ptr(__xcodeml_template_type_1_0(*__p),typename enable_if<expression,class::std::__1::shared_ptr::__nat>::type)
                                                                                                                                                                   ~~^
vec.cpp:9443:171: error: expected ';' at end of declaration list
public:template<typename __xcodeml_template_type_1_0>shared_ptr(__xcodeml_template_type_1_0(*__p),typename enable_if<expression,class::std::__1::shared_ptr::__nat>::type)
                                                                                                                                                                          ^
                                                                                                                                                                          ;
vec.cpp:9450:172: error: parameter declarator cannot be qualified
public:template<typename __xcodeml_template_type_1_0>shared_ptr(shared_ptr<__xcodeml_template_type_1_0>,typename enable_if<expression,class::std::__1::shared_ptr::__nat>::type)
                                                                                                                                                                         ~~^
vec.cpp:9450:177: error: expected ';' at end of declaration list
public:template<typename __xcodeml_template_type_1_0>shared_ptr(shared_ptr<__xcodeml_template_type_1_0>,typename enable_if<expression,class::std::__1::shared_ptr::__nat>::type)
                                                                                                                                                                                ^
                                                                                                                                                                                ;
vec.cpp:9452:172: error: parameter declarator cannot be qualified
public:template<typename __xcodeml_template_type_1_0>shared_ptr(shared_ptr<__xcodeml_template_type_1_0>,typename enable_if<expression,class::std::__1::shared_ptr::__nat>::type)
                                                                                                                                                                         ~~^
vec.cpp:9452:177: error: expected ';' at end of declaration list
public:template<typename __xcodeml_template_type_1_0>shared_ptr(shared_ptr<__xcodeml_template_type_1_0>,typename enable_if<expression,class::std::__1::shared_ptr::__nat>::type)
                                                                                                                                                                                ^
                                                                                                                                                                                ;
vec.cpp:9459:104: error: member 'type' declared as a template
public:template<typename __xcodeml_template_type_1_0>typename enable_if<expression,class shared_ptr&>::type operator=(shared_ptr<__xcodeml_template_type_1_0>)
       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                                  ^
vec.cpp:9459:108: error: expected ';' at end of declaration list
public:template<typename __xcodeml_template_type_1_0>typename enable_if<expression,class shared_ptr&>::type operator=(shared_ptr<__xcodeml_template_type_1_0>)
                                                                                                           ^
                                                                                                           ;
vec.cpp:9461:104: error: member 'type' declared as a template
public:template<typename __xcodeml_template_type_1_0>typename enable_if<expression,class shared_ptr&>::type operator=(shared_ptr<__xcodeml_template_type_1_0>)
       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                                  ^
vec.cpp:9461:108: error: expected ';' at end of declaration list
public:template<typename __xcodeml_template_type_1_0>typename enable_if<expression,class shared_ptr&>::type operator=(shared_ptr<__xcodeml_template_type_1_0>)
                                                                                                           ^
                                                                                                           ;
vec.cpp:9466:91: error: member 'type' declared as a template
public:template<typename __xcodeml_template_type_1_0>typename enable_if<expression,void>::type reset(__xcodeml_template_type_1_0(*__p))
       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                     ^
vec.cpp:9466:95: error: expected ';' at end of declaration list
public:template<typename __xcodeml_template_type_1_0>typename enable_if<expression,void>::type reset(__xcodeml_template_type_1_0(*__p))
                                                                                              ^
                                                                                              ;
vec.cpp:9501:129: error: member 'type' declared as a template
private:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1>typename enable_if<expression,void>::type __enable_weak_this(enable_shared_from_this<__xcodeml_template_type_1_0>,__xcodeml_template_type_1_1(*__ptr)){typedef typename remove_cv<__xcodeml_template_type_1_0>::type _RawYp;
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                     ^
vec.cpp:9501:133: error: expected ';' at end of declaration list
private:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1>typename enable_if<expression,void>::type __enable_weak_this(enable_shared_from_this<__xcodeml_template_type_1_0>,__xcodeml_template_type_1_1(*__ptr)){typedef typename remove_cv<__xcodeml_template_type_1_0>::type _RawYp;
                                                                                                                                    ^
                                                                                                                                    ;
vec.cpp:9508:15: error: expected member name or ';' after declaration specifiers
public:friend template<typename __xcodeml_template_type_1_0>class weak_ptr;
              ^
vec.cpp:9513:1: error: 'shared_ptr' is not a class, namespace, or enumeration
shared_ptr::shared_ptr():__ptr_(0),__cntrl_(0){}
^
vec.cpp:9432:53: note: 'shared_ptr' declared here
template<typename __xcodeml_template_type_0_0>class shared_ptr{public:
                                                    ^
vec.cpp:9514:1: error: 'shared_ptr' is not a class, namespace, or enumeration
shared_ptr::shared_ptr(nullptr_t):__ptr_(0),__cntrl_(0){}
^
vec.cpp:9432:53: note: 'shared_ptr' declared here
template<typename __xcodeml_template_type_0_0>class shared_ptr{public:
                                                    ^
vec.cpp:9514:13: error: use of class template 'shared_ptr' requires template arguments
shared_ptr::shared_ptr(nullptr_t):__ptr_(0),__cntrl_(0){}
            ^
vec.cpp:9432:53: note: template is declared here
template<typename __xcodeml_template_type_0_0>class shared_ptr{public:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~      ^
vec.cpp:9514:34: error: expected ';' after top level declarator
shared_ptr::shared_ptr(nullptr_t):__ptr_(0),__cntrl_(0){}
                                 ^
                                 ;
vec.cpp:9514:35: error: C++ requires a type specifier for all declarations
shared_ptr::shared_ptr(nullptr_t):__ptr_(0),__cntrl_(0){}
                                  ^
vec.cpp:9514:54: error: expected ';' after top level declarator
shared_ptr::shared_ptr(nullptr_t):__ptr_(0),__cntrl_(0){}
                                                     ^
                                                     ;
vec.cpp:9740:1: error: 'weak_ptr' is not a class, namespace, or enumeration
weak_ptr::weak_ptr():__ptr_(0),__cntrl_(0){}
^
vec.cpp:9335:53: note: 'weak_ptr' declared here
template<typename __xcodeml_template_type_0_0>class weak_ptr;
                                                    ^
vec.cpp:9741:1: error: 'weak_ptr' is not a class, namespace, or enumeration
weak_ptr::weak_ptr(class weak_ptr const&__r):__ptr_(__r.__ptr_),__cntrl_(__r.__cntrl_){if(this->__cntrl_){(this->__cntrl_->__add_weak());};
^
vec.cpp:9335:53: note: 'weak_ptr' declared here
template<typename __xcodeml_template_type_0_0>class weak_ptr;
                                                    ^
vec.cpp:9741:26: error: template 'weak_ptr' cannot be referenced with a class specifier
weak_ptr::weak_ptr(class weak_ptr const&__r):__ptr_(__r.__ptr_),__cntrl_(__r.__cntrl_){if(this->__cntrl_){(this->__cntrl_->__add_weak());};
                         ^
vec.cpp:9335:53: note: declared here
template<typename __xcodeml_template_type_0_0>class weak_ptr;
                                                    ^
vec.cpp:9743:47: error: 'weak_ptr' is not a class, namespace, or enumeration
template<typename __xcodeml_template_type_1_0>weak_ptr::weak_ptr(shared_ptr<__xcodeml_template_type_1_0>,typename enable_if<expression,class::std::__1::__nat(*)>::type):__ptr_(__r.__ptr_),__cntrl_(__r.__cntrl_){if(this->__cntrl_){(this->__cntrl_->__add_weak());};
                                              ^
vec.cpp:9335:53: note: 'weak_ptr' declared here
template<typename __xcodeml_template_type_0_0>class weak_ptr;
                                                    ^
vec.cpp:9743:164: error: parameter declarator cannot be qualified
template<typename __xcodeml_template_type_1_0>weak_ptr::weak_ptr(shared_ptr<__xcodeml_template_type_1_0>,typename enable_if<expression,class::std::__1::__nat(*)>::type):__ptr_(__r.__ptr_),__cntrl_(__r.__cntrl_){if(this->__cntrl_){(this->__cntrl_->__add_weak());};
                                                                                                                                                                 ~~^
vec.cpp:9786:53: error: explicit specialization of undeclared template class 'owner_less'
template<typename __xcodeml_template_type_0_0>class owner_less<shared_ptr<__xcodeml_template_type_0_0> >:public binary_function<shared_ptr<__xcodeml_template_type_0_0>,shared_ptr<__xcodeml_template_type_0_0>,bool>{public:typedef bool result_type;
                                                    ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:9787:117: error: use of undeclared identifier '__x'
public:bool operator()(shared_ptr<__xcodeml_template_type_0_0>,shared_ptr<__xcodeml_template_type_0_0>)const{return(__x.owner_before(__y));
                                                                                                                    ^
vec.cpp:9787:134: error: use of undeclared identifier '__y'
public:bool operator()(shared_ptr<__xcodeml_template_type_0_0>,shared_ptr<__xcodeml_template_type_0_0>)const{return(__x.owner_before(__y));
                                                                                                                                     ^
vec.cpp:9789:115: error: use of undeclared identifier '__x'
public:bool operator()(shared_ptr<__xcodeml_template_type_0_0>,weak_ptr<__xcodeml_template_type_0_0>)const{return(__x.owner_before(__y));
                                                                                                                  ^
vec.cpp:9789:132: error: use of undeclared identifier '__y'
public:bool operator()(shared_ptr<__xcodeml_template_type_0_0>,weak_ptr<__xcodeml_template_type_0_0>)const{return(__x.owner_before(__y));
                                                                                                                                   ^
vec.cpp:9791:115: error: use of undeclared identifier '__x'
public:bool operator()(weak_ptr<__xcodeml_template_type_0_0>,shared_ptr<__xcodeml_template_type_0_0>)const{return(__x.owner_before(__y));
                                                                                                                  ^
vec.cpp:9791:132: error: use of undeclared identifier '__y'
public:bool operator()(weak_ptr<__xcodeml_template_type_0_0>,shared_ptr<__xcodeml_template_type_0_0>)const{return(__x.owner_before(__y));
                                                                                                                                   ^
vec.cpp:9796:113: error: use of undeclared identifier '__x'
public:bool operator()(weak_ptr<__xcodeml_template_type_0_0>,weak_ptr<__xcodeml_template_type_0_0>)const{return(__x.owner_before(__y));
                                                                                                                ^
vec.cpp:9796:130: error: use of undeclared identifier '__y'
public:bool operator()(weak_ptr<__xcodeml_template_type_0_0>,weak_ptr<__xcodeml_template_type_0_0>)const{return(__x.owner_before(__y));
                                                                                                                                 ^
vec.cpp:9798:115: error: use of undeclared identifier '__x'
public:bool operator()(shared_ptr<__xcodeml_template_type_0_0>,weak_ptr<__xcodeml_template_type_0_0>)const{return(__x.owner_before(__y));
                                                                                                                  ^
vec.cpp:9798:132: error: use of undeclared identifier '__y'
public:bool operator()(shared_ptr<__xcodeml_template_type_0_0>,weak_ptr<__xcodeml_template_type_0_0>)const{return(__x.owner_before(__y));
                                                                                                                                   ^
vec.cpp:9800:115: error: use of undeclared identifier '__x'
public:bool operator()(weak_ptr<__xcodeml_template_type_0_0>,shared_ptr<__xcodeml_template_type_0_0>)const{return(__x.owner_before(__y));
                                                                                                                  ^
vec.cpp:9800:132: error: use of undeclared identifier '__y'
public:bool operator()(weak_ptr<__xcodeml_template_type_0_0>,shared_ptr<__xcodeml_template_type_0_0>)const{return(__x.owner_before(__y));
                                                                                                                                   ^
vec.cpp:9804:85: warning: declaration does not declare anything [-Wmissing-declarations]
template<typename __xcodeml_template_type_0_0>class enable_shared_from_this{private:weak_ptr<__xcodeml_template_type_0_0>;
                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:9812:47: error: expected member name or ';' after declaration specifiers
public:shared_ptr<__xcodeml_template_type_0_0>{return __xcodeml_identity<shared_ptr<__xcodeml_template_type_0_0> >::t(this->__weak_this_);
       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
vec.cpp:9821:107: warning: typedef requires a name [-Wmissing-declarations]
template<typename __xcodeml_template_type_0_0>class hash<shared_ptr<__xcodeml_template_type_0_0> >{public:typedef shared_ptr<__xcodeml_template_type_0_0>;
                                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:9823:150: error: use of undeclared identifier '__ptr'
public:unsigned long operator()(shared_ptr<__xcodeml_template_type_0_0>)const{return(__xcodeml_identity<hash<__xcodeml_template_type_0_0(*)> >::t()((__ptr.get())));
                                                                                                                                                     ^
vec.cpp:9835:26: error: template '__sp_mut' cannot be referenced with a class specifier
private:class::std::__1::__sp_mut&operator=(class __sp_mut const&);
                         ^
vec.cpp:9828:7: note: declared here
class __sp_mut{private:void(*__lx);
      ^
vec.cpp:9836:32: error: template '__sp_mut' cannot be referenced with a class specifier
public:friend class::std::__1::__sp_mut&__get_sp_mut(void const(*));
                               ^
vec.cpp:9828:7: note: declared here
class __sp_mut{private:void(*__lx);
      ^
vec.cpp:9828:1: error: cannot combine with previous 'type-name' declaration specifier
class __sp_mut{private:void(*__lx);
^
vec.cpp:9827:121: warning: declaration does not declare anything [-Wmissing-declarations]
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>basic_ostream<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>
                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:9839:18: error: template '__sp_mut' cannot be referenced with a class specifier
class::std::__1::__sp_mut&__get_sp_mut(void const(*));
                 ^
vec.cpp:9828:7: note: declared here
class __sp_mut{private:void(*__lx);
      ^
vec.cpp:9842:86: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0>shared_ptr<__xcodeml_template_type_0_0>{class::std::__1::__sp_mut&__m=((__p));
                                                                                     ^
vec.cpp:9892:18: error: no class named 'pointer_safety' in namespace 'std::__1'
class::std::__1::pointer_safety get_pointer_safety(){return __xcodeml_identity<class::std::__1::pointer_safety>::t(pointer_safety::relaxed);
     ~~~~~~~~~~~~^
vec.cpp:9892:97: error: no class named 'pointer_safety' in namespace 'std::__1'
class::std::__1::pointer_safety get_pointer_safety(){return __xcodeml_identity<class::std::__1::pointer_safety>::t(pointer_safety::relaxed);
                                                                                    ~~~~~~~~~~~~^
vec.cpp:9901:202: error: expected a type
template<typename __xcodeml_template_type_0_0>void __swap_allocator(__xcodeml_template_type_0_0&__a1,__xcodeml_template_type_0_0&__a2){((__a1,__a2,__xcodeml_identity<integral_constant<bool,expression> >::t()));
                                                                                                                                                                                                         ^
vec.cpp:9901:205: error: no member named 't' in the global namespace
template<typename __xcodeml_template_type_0_0>void __swap_allocator(__xcodeml_template_type_0_0&__a1,__xcodeml_template_type_0_0&__a2){((__a1,__a2,__xcodeml_identity<integral_constant<bool,expression> >::t()));
                                                                                                                                                                                                          ~~^
vec.cpp:9903:189: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0>void __swap_allocator(__xcodeml_template_type_0_0&__a1,__xcodeml_template_type_0_0&__a2,class::std::__1::integral_constant<bool,1>){std::__1::;
                                                                                                                                                                                            ^
vec.cpp:9910:110: warning: typedef requires a name [-Wmissing-declarations]
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __temp_value{public:typedef allocator_traits<__xcodeml_template_type_0_1>;
                                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:9911:57: error: non-friend class member 'type' cannot have a qualified name
public:typename aligned_storage<expression,expression>::type __v;
                                                      ~~^
vec.cpp:9911:61: error: expected ';' at end of declaration list
public:typename aligned_storage<expression,expression>::type __v;
                                                            ^
                                                            ;
vec.cpp:9917:66: error: 'void' must be the first and only parameter if specified
public:template<typename __xcodeml_template_type_1_0>__temp_value(__xcodeml_template_type_0_1&__alloc,void/*__args*/):__a(__alloc){(allocator_traits<__xcodeml_template_type_0_1>::.construct(this->__a,reinterpret_cast<__xcodeml_template_type_0_0(*)>(((this->__v))),(std::__1::__xcodeml_template_type_1_0(__args))));
                                                                 ^
vec.cpp:9917:180: error: expected unqualified-id
public:template<typename __xcodeml_template_type_1_0>__temp_value(__xcodeml_template_type_0_1&__alloc,void/*__args*/):__a(__alloc){(allocator_traits<__xcodeml_template_type_0_1>::.construct(this->__a,reinterpret_cast<__xcodeml_template_type_0_0(*)>(((this->__v))),(std::__1::__xcodeml_template_type_1_0(__args))));
                                                                                                                                                                                   ^
vec.cpp:9917:276: error: no member named '__xcodeml_template_type_1_0' in namespace 'std::__1'
public:template<typename __xcodeml_template_type_1_0>__temp_value(__xcodeml_template_type_0_1&__alloc,void/*__args*/):__a(__alloc){(allocator_traits<__xcodeml_template_type_0_1>::.construct(this->__a,reinterpret_cast<__xcodeml_template_type_0_0(*)>(((this->__v))),(std::__1::__xcodeml_template_type_1_0(__args))));
                                                                                                                                                                                                                                                                         ~~~~~~~~~~^
vec.cpp:9917:304: error: use of undeclared identifier '__args'
public:template<typename __xcodeml_template_type_1_0>__temp_value(__xcodeml_template_type_0_1&__alloc,void/*__args*/):__a(__alloc){(allocator_traits<__xcodeml_template_type_0_1>::.construct(this->__a,reinterpret_cast<__xcodeml_template_type_0_0(*)>(((this->__v))),(std::__1::__xcodeml_template_type_1_0(__args))));
                                                                                                                                                                                                                                                                                                               ^
vec.cpp:9919:72: error: expected unqualified-id
public:~__temp_value(){(allocator_traits<__xcodeml_template_type_0_1>::.destroy(this->__a,(this->__addr())));
                                                                       ^
vec.cpp:9927:198: error: expected expression
template<typename __xcodeml_template_type_0_0>class __is_allocator<__xcodeml_template_type_0_0,typename __void_t<typename __xcodeml_template_type_0_0::value_type>::type,typename __void_t<decltype ()>::type>:public integral_constant<bool,1>{}
                                                                                                                                                                                                     ^
vec.cpp:9927:202: error: no type named 'type' in the global namespace
template<typename __xcodeml_template_type_0_0>class __is_allocator<__xcodeml_template_type_0_0,typename __void_t<typename __xcodeml_template_type_0_0::value_type>::type,typename __void_t<decltype ()>::type>:public integral_constant<bool,1>{}
                                                                                                                                                                                                       ~~^
vec.cpp:9931:45: error: no member named '__libcpp_deallocate' in namespace 'std'
public:void operator()(void(*p))const{(std::__libcpp_deallocate(p,this->__size_,this->__align_));
                                       ~~~~~^
vec.cpp:9003:164: error: no type named 'type' in 'std::__1::__pointer_type<void, std::__1::__builtin_new_allocator::__builtin_new_deleter>'
public:template<bool _Dummy=true,typename __xcodeml_template_type_1_1>unique_ptr(typename __pointer_type<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>::type __p):__ptr_(__p){}
                                                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~
vec.cpp:9939:112: note: in instantiation of template class 'std::__1::unique_ptr<void, std::__1::__builtin_new_allocator::__builtin_new_deleter>' requested here
public:static class::std::__1::unique_ptr<void,class::std::__1::__builtin_new_allocator::__builtin_new_deleter>__allocate_bytes(unsigned long __s,unsigned long __align){return __xcodeml_identity<class::std::__1::unique_ptr<void,class::std::__1::__builtin_new_allocator::__builtin_new_deleter> >::t((std::__libcpp_allocate(__s,__align)),__xcodeml_identity<class::std::__1::__builtin_new_allocator::__builtin_new_deleter>::t(__s,__align));
                                                                                                               ^
vec.cpp:9939:305: error: no member named '__libcpp_allocate' in namespace 'std'
public:static class::std::__1::unique_ptr<void,class::std::__1::__builtin_new_allocator::__builtin_new_deleter>__allocate_bytes(unsigned long __s,unsigned long __align){return __xcodeml_identity<class::std::__1::unique_ptr<void,class::std::__1::__builtin_new_allocator::__builtin_new_deleter> >::t((std::__libcpp_allocate(__s,__align)),__xcodeml_identity<class::std::__1::__builtin_new_allocator::__builtin_new_deleter>::t(__s,__align));
                                                                                                                                                                                                                                                                                                           ~~~~~^
vec.cpp:9941:97: error: no member named '__libcpp_deallocate' in namespace 'std'
public:static void __deallocate_bytes(void(*__p),unsigned long __s,unsigned long __align){(std::__libcpp_deallocate(__p,__s,__align));
                                                                                           ~~~~~^
vec.cpp:9943:261: error: '__xcodeml_template_type_0_0' does not refer to a value
public:template<typename __xcodeml_template_type_0_0>static class::std::__1::unique_ptr<void,class::std::__1::__builtin_new_allocator::__builtin_new_deleter>__allocate_type(unsigned long __n){return(__allocate_bytes((__n*(sizeof(__xcodeml_template_type_0_0))),__xcodeml_template_type_0_0));
                                                                                                                                                                                                                                                                    ^
vec.cpp:9943:26: note: declared here
public:template<typename __xcodeml_template_type_0_0>static class::std::__1::unique_ptr<void,class::std::__1::__builtin_new_allocator::__builtin_new_deleter>__allocate_type(unsigned long __n){return(__allocate_bytes((__n*(sizeof(__xcodeml_template_type_0_0))),__xcodeml_template_type_0_0));
                         ^
vec.cpp:9945:182: error: '__xcodeml_template_type_0_0' does not refer to a value
public:template<typename __xcodeml_template_type_0_0>static void __deallocate_type(void(*__p),unsigned long __n){(__deallocate_bytes(__p,(__n*(sizeof(__xcodeml_template_type_0_0))),__xcodeml_template_type_0_0));
                                                                                                                                                                                     ^
vec.cpp:9945:26: note: declared here
public:template<typename __xcodeml_template_type_0_0>static void __deallocate_type(void(*__p),unsigned long __n){(__deallocate_bytes(__p,(__n*(sizeof(__xcodeml_template_type_0_0))),__xcodeml_template_type_0_0));
                         ^
vec.cpp:9956:168: error: use of undeclared identifier '__t'
template<>class plus<void>{public:template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>decltype (operator()(__xcodeml_template_type_0_0(*__t),__xcodeml_template_type_0_1(*__u))const){return((std::__1::__xcodeml_template_type_0_0(__t)),(std::__1::__xcodeml_template_type_0_1(__u)));
                                                                                                                                                                       ^
vec.cpp:9956:202: error: use of undeclared identifier '__u'
template<>class plus<void>{public:template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>decltype (operator()(__xcodeml_template_type_0_0(*__t),__xcodeml_template_type_0_1(*__u))const){return((std::__1::__xcodeml_template_type_0_0(__t)),(std::__1::__xcodeml_template_type_0_1(__u)));
                                                                                                                                                                                                         ^
vec.cpp:9956:213: error: expected member name or ';' after declaration specifiers
template<>class plus<void>{public:template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>decltype (operator()(__xcodeml_template_type_0_0(*__t),__xcodeml_template_type_0_1(*__u))const){return((std::__1::__xcodeml_template_type_0_0(__t)),(std::__1::__xcodeml_template_type_0_1(__u)));
                                                                                                                                                                                                                    ^
vec.cpp:9966:169: error: use of undeclared identifier '__t'
template<>class minus<void>{public:template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>decltype (operator()(__xcodeml_template_type_0_0(*__t),__xcodeml_template_type_0_1(*__u))const){return((std::__1::__xcodeml_template_type_0_0(__t)),(std::__1::__xcodeml_template_type_0_1(__u)));
                                                                                                                                                                        ^
vec.cpp:9966:203: error: use of undeclared identifier '__u'
template<>class minus<void>{public:template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>decltype (operator()(__xcodeml_template_type_0_0(*__t),__xcodeml_template_type_0_1(*__u))const){return((std::__1::__xcodeml_template_type_0_0(__t)),(std::__1::__xcodeml_template_type_0_1(__u)));
                                                                                                                                                                                                          ^
vec.cpp:9966:214: error: expected member name or ';' after declaration specifiers
template<>class minus<void>{public:template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>decltype (operator()(__xcodeml_template_type_0_0(*__t),__xcodeml_template_type_0_1(*__u))const){return((std::__1::__xcodeml_template_type_0_0(__t)),(std::__1::__xcodeml_template_type_0_1(__u)));
                                                                                                                                                                                                                     ^
vec.cpp:9976:174: error: use of undeclared identifier '__t'
template<>class multiplies<void>{public:template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>decltype (operator()(__xcodeml_template_type_0_0(*__t),__xcodeml_template_type_0_1(*__u))const){return((std::__1::__xcodeml_template_type_0_0(__t))*(std::__1::__xcodeml_template_type_0_1(__u)));
                                                                                                                                                                             ^
vec.cpp:9976:208: error: use of undeclared identifier '__u'
template<>class multiplies<void>{public:template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>decltype (operator()(__xcodeml_template_type_0_0(*__t),__xcodeml_template_type_0_1(*__u))const){return((std::__1::__xcodeml_template_type_0_0(__t))*(std::__1::__xcodeml_template_type_0_1(__u)));
                                                                                                                                                                                                               ^
vec.cpp:9976:219: error: expected member name or ';' after declaration specifiers
template<>class multiplies<void>{public:template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>decltype (operator()(__xcodeml_template_type_0_0(*__t),__xcodeml_template_type_0_1(*__u))const){return((std::__1::__xcodeml_template_type_0_0(__t))*(std::__1::__xcodeml_template_type_0_1(__u)));
                                                                                                                                                                                                                          ^
vec.cpp:9986:171: error: use of undeclared identifier '__t'
template<>class divides<void>{public:template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>decltype (operator()(__xcodeml_template_type_0_0(*__t),__xcodeml_template_type_0_1(*__u))const){return((std::__1::__xcodeml_template_type_0_0(__t))/(std::__1::__xcodeml_template_type_0_1(__u)));
                                                                                                                                                                          ^
vec.cpp:9986:205: error: use of undeclared identifier '__u'
template<>class divides<void>{public:template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>decltype (operator()(__xcodeml_template_type_0_0(*__t),__xcodeml_template_type_0_1(*__u))const){return((std::__1::__xcodeml_template_type_0_0(__t))/(std::__1::__xcodeml_template_type_0_1(__u)));
                                                                                                                                                                                                            ^
vec.cpp:9986:216: error: expected member name or ';' after declaration specifiers
template<>class divides<void>{public:template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>decltype (operator()(__xcodeml_template_type_0_0(*__t),__xcodeml_template_type_0_1(*__u))const){return((std::__1::__xcodeml_template_type_0_0(__t))/(std::__1::__xcodeml_template_type_0_1(__u)));
                                                                                                                                                                                                                       ^
vec.cpp:9996:171: error: use of undeclared identifier '__t'
template<>class modulus<void>{public:template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>decltype (operator()(__xcodeml_template_type_0_0(*__t),__xcodeml_template_type_0_1(*__u))const){return((std::__1::__xcodeml_template_type_0_0(__t))%(std::__1::__xcodeml_template_type_0_1(__u)));
                                                                                                                                                                          ^
vec.cpp:9996:205: error: use of undeclared identifier '__u'
template<>class modulus<void>{public:template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>decltype (operator()(__xcodeml_template_type_0_0(*__t),__xcodeml_template_type_0_1(*__u))const){return((std::__1::__xcodeml_template_type_0_0(__t))%(std::__1::__xcodeml_template_type_0_1(__u)));
                                                                                                                                                                                                            ^
vec.cpp:9996:216: error: expected member name or ';' after declaration specifiers
template<>class modulus<void>{public:template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>decltype (operator()(__xcodeml_template_type_0_0(*__t),__xcodeml_template_type_0_1(*__u))const){return((std::__1::__xcodeml_template_type_0_0(__t))%(std::__1::__xcodeml_template_type_0_1(__u)));
                                                                                                                                                                                                                       ^
vec.cpp:10006:133: error: use of undeclared identifier '__x'
template<>class negate<void>{public:template<typename __xcodeml_template_type_0_0>decltype (operator()(__xcodeml_template_type_0_0(*__x))const){return((std::__1::__xcodeml_template_type_0_0(__x)));
                                                                                                                                    ^
vec.cpp:10006:144: error: expected member name or ';' after declaration specifiers
template<>class negate<void>{public:template<typename __xcodeml_template_type_0_0>decltype (operator()(__xcodeml_template_type_0_0(*__x))const){return((std::__1::__xcodeml_template_type_0_0(__x)));
                                                                                                                                               ^
vec.cpp:10016:172: error: use of undeclared identifier '__t'
template<>class equal_to<void>{public:template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>decltype (operator()(__xcodeml_template_type_0_0(*__t),__xcodeml_template_type_0_1(*__u))const){return((std::__1::__xcodeml_template_type_0_0(__t)),(std::__1::__xcodeml_template_type_0_1(__u)));
                                                                                                                                                                           ^
vec.cpp:10016:206: error: use of undeclared identifier '__u'
template<>class equal_to<void>{public:template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>decltype (operator()(__xcodeml_template_type_0_0(*__t),__xcodeml_template_type_0_1(*__u))const){return((std::__1::__xcodeml_template_type_0_0(__t)),(std::__1::__xcodeml_template_type_0_1(__u)));
                                                                                                                                                                                                             ^
vec.cpp:10016:217: error: expected member name or ';' after declaration specifiers
template<>class equal_to<void>{public:template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>decltype (operator()(__xcodeml_template_type_0_0(*__t),__xcodeml_template_type_0_1(*__u))const){return((std::__1::__xcodeml_template_type_0_0(__t)),(std::__1::__xcodeml_template_type_0_1(__u)));
                                                                                                                                                                                                                        ^
vec.cpp:10026:176: error: use of undeclared identifier '__t'
template<>class not_equal_to<void>{public:template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>decltype (operator()(__xcodeml_template_type_0_0(*__t),__xcodeml_template_type_0_1(*__u))const){return((std::__1::__xcodeml_template_type_0_0(__t)),(std::__1::__xcodeml_template_type_0_1(__u)));
                                                                                                                                                                               ^
vec.cpp:10026:210: error: use of undeclared identifier '__u'
template<>class not_equal_to<void>{public:template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>decltype (operator()(__xcodeml_template_type_0_0(*__t),__xcodeml_template_type_0_1(*__u))const){return((std::__1::__xcodeml_template_type_0_0(__t)),(std::__1::__xcodeml_template_type_0_1(__u)));
                                                                                                                                                                                                                 ^
vec.cpp:10026:221: error: expected member name or ';' after declaration specifiers
template<>class not_equal_to<void>{public:template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>decltype (operator()(__xcodeml_template_type_0_0(*__t),__xcodeml_template_type_0_1(*__u))const){return((std::__1::__xcodeml_template_type_0_0(__t)),(std::__1::__xcodeml_template_type_0_1(__u)));
                                                                                                                                                                                                                            ^
vec.cpp:10036:171: error: use of undeclared identifier '__t'
template<>class greater<void>{public:template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>decltype (operator()(__xcodeml_template_type_0_0(*__t),__xcodeml_template_type_0_1(*__u))const){return((std::__1::__xcodeml_template_type_0_0(__t)),(std::__1::__xcodeml_template_type_0_1(__u)));
                                                                                                                                                                          ^
vec.cpp:10036:205: error: use of undeclared identifier '__u'
template<>class greater<void>{public:template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>decltype (operator()(__xcodeml_template_type_0_0(*__t),__xcodeml_template_type_0_1(*__u))const){return((std::__1::__xcodeml_template_type_0_0(__t)),(std::__1::__xcodeml_template_type_0_1(__u)));
                                                                                                                                                                                                            ^
vec.cpp:10036:216: error: expected member name or ';' after declaration specifiers
template<>class greater<void>{public:template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>decltype (operator()(__xcodeml_template_type_0_0(*__t),__xcodeml_template_type_0_1(*__u))const){return((std::__1::__xcodeml_template_type_0_0(__t)),(std::__1::__xcodeml_template_type_0_1(__u)));
                                                                                                                                                                                                                       ^
vec.cpp:10046:177: error: use of undeclared identifier '__t'
template<>class greater_equal<void>{public:template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>decltype (operator()(__xcodeml_template_type_0_0(*__t),__xcodeml_template_type_0_1(*__u))const){return((std::__1::__xcodeml_template_type_0_0(__t)),(std::__1::__xcodeml_template_type_0_1(__u)));
                                                                                                                                                                                ^
vec.cpp:10046:211: error: use of undeclared identifier '__u'
template<>class greater_equal<void>{public:template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>decltype (operator()(__xcodeml_template_type_0_0(*__t),__xcodeml_template_type_0_1(*__u))const){return((std::__1::__xcodeml_template_type_0_0(__t)),(std::__1::__xcodeml_template_type_0_1(__u)));
                                                                                                                                                                                                                  ^
vec.cpp:10046:222: error: expected member name or ';' after declaration specifiers
template<>class greater_equal<void>{public:template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>decltype (operator()(__xcodeml_template_type_0_0(*__t),__xcodeml_template_type_0_1(*__u))const){return((std::__1::__xcodeml_template_type_0_0(__t)),(std::__1::__xcodeml_template_type_0_1(__u)));
                                                                                                                                                                                                                             ^
vec.cpp:10056:174: error: use of undeclared identifier '__t'
template<>class less_equal<void>{public:template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>decltype (operator()(__xcodeml_template_type_0_0(*__t),__xcodeml_template_type_0_1(*__u))const){return((std::__1::__xcodeml_template_type_0_0(__t)),(std::__1::__xcodeml_template_type_0_1(__u)));
                                                                                                                                                                             ^
vec.cpp:10056:208: error: use of undeclared identifier '__u'
template<>class less_equal<void>{public:template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>decltype (operator()(__xcodeml_template_type_0_0(*__t),__xcodeml_template_type_0_1(*__u))const){return((std::__1::__xcodeml_template_type_0_0(__t)),(std::__1::__xcodeml_template_type_0_1(__u)));
                                                                                                                                                                                                               ^
vec.cpp:10056:219: error: expected member name or ';' after declaration specifiers
template<>class less_equal<void>{public:template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>decltype (operator()(__xcodeml_template_type_0_0(*__t),__xcodeml_template_type_0_1(*__u))const){return((std::__1::__xcodeml_template_type_0_0(__t)),(std::__1::__xcodeml_template_type_0_1(__u)));
                                                                                                                                                                                                                          ^
vec.cpp:10066:175: error: use of undeclared identifier '__t'
template<>class logical_and<void>{public:template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>decltype (operator()(__xcodeml_template_type_0_0(*__t),__xcodeml_template_type_0_1(*__u))const){return((std::__1::__xcodeml_template_type_0_0(__t))&&(std::__1::__xcodeml_template_type_0_1(__u)));
                                                                                                                                                                              ^
vec.cpp:10066:209: error: use of undeclared identifier '__u'
template<>class logical_and<void>{public:template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>decltype (operator()(__xcodeml_template_type_0_0(*__t),__xcodeml_template_type_0_1(*__u))const){return((std::__1::__xcodeml_template_type_0_0(__t))&&(std::__1::__xcodeml_template_type_0_1(__u)));
                                                                                                                                                                                                                ^
vec.cpp:10066:220: error: expected member name or ';' after declaration specifiers
template<>class logical_and<void>{public:template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>decltype (operator()(__xcodeml_template_type_0_0(*__t),__xcodeml_template_type_0_1(*__u))const){return((std::__1::__xcodeml_template_type_0_0(__t))&&(std::__1::__xcodeml_template_type_0_1(__u)));
                                                                                                                                                                                                                           ^
vec.cpp:10076:174: error: use of undeclared identifier '__t'
template<>class logical_or<void>{public:template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>decltype (operator()(__xcodeml_template_type_0_0(*__t),__xcodeml_template_type_0_1(*__u))const){return((std::__1::__xcodeml_template_type_0_0(__t))||(std::__1::__xcodeml_template_type_0_1(__u)));
                                                                                                                                                                             ^
vec.cpp:10076:208: error: use of undeclared identifier '__u'
template<>class logical_or<void>{public:template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>decltype (operator()(__xcodeml_template_type_0_0(*__t),__xcodeml_template_type_0_1(*__u))const){return((std::__1::__xcodeml_template_type_0_0(__t))||(std::__1::__xcodeml_template_type_0_1(__u)));
                                                                                                                                                                                                               ^
vec.cpp:10076:219: error: expected member name or ';' after declaration specifiers
template<>class logical_or<void>{public:template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>decltype (operator()(__xcodeml_template_type_0_0(*__t),__xcodeml_template_type_0_1(*__u))const){return((std::__1::__xcodeml_template_type_0_0(__t))||(std::__1::__xcodeml_template_type_0_1(__u)));
                                                                                                                                                                                                                          ^
vec.cpp:10086:138: error: use of undeclared identifier '__x'
template<>class logical_not<void>{public:template<typename __xcodeml_template_type_0_0>decltype (operator()(__xcodeml_template_type_0_0(*__x))const){return(!(std::__1::__xcodeml_template_type_0_0(__x)));
                                                                                                                                         ^
vec.cpp:10086:149: error: expected member name or ';' after declaration specifiers
template<>class logical_not<void>{public:template<typename __xcodeml_template_type_0_0>decltype (operator()(__xcodeml_template_type_0_0(*__x))const){return(!(std::__1::__xcodeml_template_type_0_0(__x)));
                                                                                                                                                    ^
vec.cpp:10096:171: error: use of undeclared identifier '__t'
template<>class bit_and<void>{public:template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>decltype (operator()(__xcodeml_template_type_0_0(*__t),__xcodeml_template_type_0_1(*__u))const){return((std::__1::__xcodeml_template_type_0_0(__t))&(std::__1::__xcodeml_template_type_0_1(__u)));
                                                                                                                                                                          ^
vec.cpp:10096:205: error: use of undeclared identifier '__u'
template<>class bit_and<void>{public:template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>decltype (operator()(__xcodeml_template_type_0_0(*__t),__xcodeml_template_type_0_1(*__u))const){return((std::__1::__xcodeml_template_type_0_0(__t))&(std::__1::__xcodeml_template_type_0_1(__u)));
                                                                                                                                                                                                            ^
vec.cpp:10096:216: error: expected member name or ';' after declaration specifiers
template<>class bit_and<void>{public:template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>decltype (operator()(__xcodeml_template_type_0_0(*__t),__xcodeml_template_type_0_1(*__u))const){return((std::__1::__xcodeml_template_type_0_0(__t))&(std::__1::__xcodeml_template_type_0_1(__u)));
                                                                                                                                                                                                                       ^
vec.cpp:10106:170: error: use of undeclared identifier '__t'
template<>class bit_or<void>{public:template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>decltype (operator()(__xcodeml_template_type_0_0(*__t),__xcodeml_template_type_0_1(*__u))const){return((std::__1::__xcodeml_template_type_0_0(__t))|(std::__1::__xcodeml_template_type_0_1(__u)));
                                                                                                                                                                         ^
vec.cpp:10106:204: error: use of undeclared identifier '__u'
template<>class bit_or<void>{public:template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>decltype (operator()(__xcodeml_template_type_0_0(*__t),__xcodeml_template_type_0_1(*__u))const){return((std::__1::__xcodeml_template_type_0_0(__t))|(std::__1::__xcodeml_template_type_0_1(__u)));
                                                                                                                                                                                                           ^
vec.cpp:10106:215: error: expected member name or ';' after declaration specifiers
template<>class bit_or<void>{public:template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>decltype (operator()(__xcodeml_template_type_0_0(*__t),__xcodeml_template_type_0_1(*__u))const){return((std::__1::__xcodeml_template_type_0_0(__t))|(std::__1::__xcodeml_template_type_0_1(__u)));
                                                                                                                                                                                                                      ^
vec.cpp:10116:171: error: use of undeclared identifier '__t'
template<>class bit_xor<void>{public:template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>decltype (operator()(__xcodeml_template_type_0_0(*__t),__xcodeml_template_type_0_1(*__u))const){return((std::__1::__xcodeml_template_type_0_0(__t))^(std::__1::__xcodeml_template_type_0_1(__u)));
                                                                                                                                                                          ^
vec.cpp:10116:205: error: use of undeclared identifier '__u'
template<>class bit_xor<void>{public:template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>decltype (operator()(__xcodeml_template_type_0_0(*__t),__xcodeml_template_type_0_1(*__u))const){return((std::__1::__xcodeml_template_type_0_0(__t))^(std::__1::__xcodeml_template_type_0_1(__u)));
                                                                                                                                                                                                            ^
vec.cpp:10116:216: error: expected member name or ';' after declaration specifiers
template<>class bit_xor<void>{public:template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>decltype (operator()(__xcodeml_template_type_0_0(*__t),__xcodeml_template_type_0_1(*__u))const){return((std::__1::__xcodeml_template_type_0_0(__t))^(std::__1::__xcodeml_template_type_0_1(__u)));
                                                                                                                                                                                                                       ^
vec.cpp:10126:134: error: use of undeclared identifier '__x'
template<>class bit_not<void>{public:template<typename __xcodeml_template_type_0_0>decltype (operator()(__xcodeml_template_type_0_0(*__x))const){return(~(std::__1::__xcodeml_template_type_0_0(__x)));
                                                                                                                                     ^
vec.cpp:10126:145: error: expected member name or ';' after declaration specifiers
template<>class bit_not<void>{public:template<typename __xcodeml_template_type_0_0>decltype (operator()(__xcodeml_template_type_0_0(*__x))const){return(~(std::__1::__xcodeml_template_type_0_0(__x)));
                                                                                                                                                ^
vec.cpp:10139:88: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0>unary_negate<__xcodeml_template_type_0_0>{return __xcodeml_identity<unary_negate<__xcodeml_template_type_0_0> >::t(__pred);
                                                                                       ^
vec.cpp:10149:47: error: no template named 'binary_negate'
template<typename __xcodeml_template_type_0_0>binary_negate<__xcodeml_template_type_0_0>{return __xcodeml_identity<binary_negate<__xcodeml_template_type_0_0> >::t(__pred);
                                              ^
vec.cpp:10149:89: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0>binary_negate<__xcodeml_template_type_0_0>{return __xcodeml_identity<binary_negate<__xcodeml_template_type_0_0> >::t(__pred);
                                                                                        ^
vec.cpp:10163:84: error: no template named 'binder1st'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>binder1st<__xcodeml_template_type_0_0>{return __xcodeml_identity<binder1st<__xcodeml_template_type_0_0> >::t(__op,__x);
                                                                                   ^
vec.cpp:10163:122: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>binder1st<__xcodeml_template_type_0_0>{return __xcodeml_identity<binder1st<__xcodeml_template_type_0_0> >::t(__op,__x);
                                                                                                                         ^
vec.cpp:10177:84: error: no template named 'binder2nd'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>binder2nd<__xcodeml_template_type_0_0>{return __xcodeml_identity<binder2nd<__xcodeml_template_type_0_0> >::t(__op,__x);
                                                                                   ^
vec.cpp:10177:122: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>binder2nd<__xcodeml_template_type_0_0>{return __xcodeml_identity<binder2nd<__xcodeml_template_type_0_0> >::t(__op,__x);
                                                                                                                         ^
vec.cpp:10187:84: error: no template named 'pointer_to_unary_function'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>pointer_to_unary_function<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>{return __xcodeml_identity<pointer_to_unary_function<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1> >::t(__f);
                                                                                   ^
vec.cpp:10187:166: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>pointer_to_unary_function<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>{return __xcodeml_identity<pointer_to_unary_function<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1> >::t(__f);
                                                                                                                                                                     ^
vec.cpp:10197:121: error: no template named 'pointer_to_binary_function'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>pointer_to_binary_function<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1,__xcodeml_template_type_0_2>{return __xcodeml_identity<pointer_to_binary_function<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1,__xcodeml_template_type_0_2> >::t(__f);
                                                                                                                        ^
vec.cpp:10197:232: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>pointer_to_binary_function<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1,__xcodeml_template_type_0_2>{return __xcodeml_identity<pointer_to_binary_function<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1,__xcodeml_template_type_0_2> >::t(__f);
                                                                                                                                                                                                                                       ^
vec.cpp:10210:127: error: '__p' is not a class, namespace, or enumeration
public:__xcodeml_template_type_0_0 operator()(__xcodeml_template_type_0_1(*__p),__xcodeml_template_type_0_2 __x)const{return((__p::*this->__p_)(__x));
                                                                                                                              ^
vec.cpp:10210:76: note: '__p' declared here
public:__xcodeml_template_type_0_0 operator()(__xcodeml_template_type_0_1(*__p),__xcodeml_template_type_0_2 __x)const{return((__p::*this->__p_)(__x));
                                                                           ^
vec.cpp:10210:132: error: expected unqualified-id
public:__xcodeml_template_type_0_0 operator()(__xcodeml_template_type_0_1(*__p),__xcodeml_template_type_0_2 __x)const{return((__p::*this->__p_)(__x));
                                                                                                                                   ^
vec.cpp:10215:84: error: no template named 'mem_fun_t'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>mem_fun_t<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>{return __xcodeml_identity<mem_fun_t<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1> >::t(__f);
                                                                                   ^
vec.cpp:10215:150: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>mem_fun_t<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>{return __xcodeml_identity<mem_fun_t<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1> >::t(__f);
                                                                                                                                                     ^
vec.cpp:10235:84: error: no template named 'mem_fun_ref_t'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>mem_fun_ref_t<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>{return __xcodeml_identity<mem_fun_ref_t<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1> >::t(__f);
                                                                                   ^
vec.cpp:10235:154: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>mem_fun_ref_t<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>{return __xcodeml_identity<mem_fun_ref_t<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1> >::t(__f);
                                                                                                                                                         ^
vec.cpp:10250:133: error: '__p' is not a class, namespace, or enumeration
public:__xcodeml_template_type_0_0 operator()(__xcodeml_template_type_0_1 const(*__p),__xcodeml_template_type_0_2 __x)const{return((__p::*this->__p_)(__x));
                                                                                                                                    ^
vec.cpp:10250:82: note: '__p' declared here
public:__xcodeml_template_type_0_0 operator()(__xcodeml_template_type_0_1 const(*__p),__xcodeml_template_type_0_2 __x)const{return((__p::*this->__p_)(__x));
                                                                                 ^
vec.cpp:10250:138: error: expected unqualified-id
public:__xcodeml_template_type_0_0 operator()(__xcodeml_template_type_0_1 const(*__p),__xcodeml_template_type_0_2 __x)const{return((__p::*this->__p_)(__x));
                                                                                                                                         ^
vec.cpp:10255:84: error: no template named 'const_mem_fun_t'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>const_mem_fun_t<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>{return __xcodeml_identity<const_mem_fun_t<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1> >::t(__f);
                                                                                   ^
vec.cpp:10255:156: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>const_mem_fun_t<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>{return __xcodeml_identity<const_mem_fun_t<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1> >::t(__f);
                                                                                                                                                           ^
vec.cpp:10275:84: error: no template named 'const_mem_fun_ref_t'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>const_mem_fun_ref_t<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>{return __xcodeml_identity<const_mem_fun_ref_t<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1> >::t(__f);
                                                                                   ^
vec.cpp:10275:160: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>const_mem_fun_ref_t<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>{return __xcodeml_identity<const_mem_fun_ref_t<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1> >::t(__f);
                                                                                                                                                               ^
vec.cpp:10290:84: error: no template named '__mem_fn'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>__mem_fn<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)>{return __xcodeml_identity<__mem_fn<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)> >::t(__pm);
                                                                                   ^
vec.cpp:10290:176: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>__mem_fn<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)>{return __xcodeml_identity<__mem_fn<__xcodeml_template_type_0_0(__xcodeml_identity<__xcodeml_template_type_0_1>::t::*)> >::t(__pm);
                                                                                                                                                                               ^
vec.cpp:10294:76: error: no class named 'bad_function_call' in namespace 'std::__1'
void __throw_bad_function_call(){throw __xcodeml_identity<class::std::__1::bad_function_call>::t();
                                                               ~~~~~~~~~~~~^
vec.cpp:10314:112: error: use of undeclared identifier '__f'
template<typename __xcodeml_template_type_0_0>bool __not_null(function<__xcodeml_template_type_0_0>){return(!(!__f));
                                                                                                               ^
vec.cpp:10321:164: error: class template partial specialization contains a template parameter that cannot be deduced; this partial specialization will never be used [-Wunusable-partial-specialization]
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3>class __alloc_func<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1,__xcodeml_template_type_0_2(void/**/)>{private:__compressed_pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>;
                                                                                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:10321:130: note: non-deducible template parameter '__xcodeml_template_type_0_3'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3>class __alloc_func<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1,__xcodeml_template_type_0_2(void/**/)>{private:__compressed_pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>;
                                                                                                                                 ^
vec.cpp:10321:280: warning: declaration does not declare anything [-Wmissing-declarations]
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3>class __alloc_func<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1,__xcodeml_template_type_0_2(void/**/)>{private:__compressed_pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>;
                                                                                                                                                                                                                                                                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:10329:91: error: expected unqualified-id
public:__alloc_func(__xcodeml_template_type_0_0(*__f)):__f_(piecewise_construct(std::__1::((std::__1::(__f))))(std::__1::forward_as_tuple())){}
                                                                                          ^
vec.cpp:10329:103: error: expected unqualified-id
public:__alloc_func(__xcodeml_template_type_0_0(*__f)):__f_(piecewise_construct(std::__1::((std::__1::(__f))))(std::__1::forward_as_tuple())){}
                                                                                                      ^
vec.cpp:10329:122: error: no member named 'forward_as_tuple' in namespace 'std::__1'
public:__alloc_func(__xcodeml_template_type_0_0(*__f)):__f_(piecewise_construct(std::__1::((std::__1::(__f))))(std::__1::forward_as_tuple())){}
                                                                                                               ~~~~~~~~~~^
vec.cpp:10330:133: error: expected unqualified-id
public:__alloc_func(__xcodeml_template_type_0_0 const&__f,__xcodeml_template_type_0_1 const&__a):__f_(piecewise_construct(std::__1::(__f))(std::__1::(__a))){}
                                                                                                                                    ^
vec.cpp:10330:150: error: expected unqualified-id
public:__alloc_func(__xcodeml_template_type_0_0 const&__f,__xcodeml_template_type_0_1 const&__a):__f_(piecewise_construct(std::__1::(__f))(std::__1::(__a))){}
                                                                                                                                                     ^
vec.cpp:10331:129: error: expected unqualified-id
public:__alloc_func(__xcodeml_template_type_0_0 const&__f,__xcodeml_template_type_0_1(*__a)):__f_(piecewise_construct(std::__1::(__f))(std::__1::((std::__1::(__a))))){}
                                                                                                                                ^
vec.cpp:10331:146: error: expected unqualified-id
public:__alloc_func(__xcodeml_template_type_0_0 const&__f,__xcodeml_template_type_0_1(*__a)):__f_(piecewise_construct(std::__1::(__f))(std::__1::((std::__1::(__a))))){}
                                                                                                                                                 ^
vec.cpp:10331:158: error: expected unqualified-id
public:__alloc_func(__xcodeml_template_type_0_0 const&__f,__xcodeml_template_type_0_1(*__a)):__f_(piecewise_construct(std::__1::(__f))(std::__1::((std::__1::(__a))))){}
                                                                                                                                                             ^
vec.cpp:10332:125: error: expected unqualified-id
public:__alloc_func(__xcodeml_template_type_0_0(*__f),__xcodeml_template_type_0_1(*__a)):__f_(piecewise_construct(std::__1::((std::__1::(__f))))(std::__1::((std::__1::(__a))))){}
                                                                                                                            ^
vec.cpp:10332:137: error: expected unqualified-id
public:__alloc_func(__xcodeml_template_type_0_0(*__f),__xcodeml_template_type_0_1(*__a)):__f_(piecewise_construct(std::__1::((std::__1::(__f))))(std::__1::((std::__1::(__a))))){}
                                                                                                                                        ^
vec.cpp:10332:156: error: expected unqualified-id
public:__alloc_func(__xcodeml_template_type_0_0(*__f),__xcodeml_template_type_0_1(*__a)):__f_(piecewise_construct(std::__1::((std::__1::(__f))))(std::__1::((std::__1::(__a))))){}
                                                                                                                                                           ^
vec.cpp:10332:168: error: expected unqualified-id
public:__alloc_func(__xcodeml_template_type_0_0(*__f),__xcodeml_template_type_0_1(*__a)):__f_(piecewise_construct(std::__1::((std::__1::(__f))))(std::__1::((std::__1::(__a))))){}
                                                                                                                                                                       ^
vec.cpp:10333:62: warning: typedef requires a name [-Wmissing-declarations]
public:__xcodeml_template_type_0_2 operator()(void/*__arg*/){typedef __invoke_void_return_wrapper<__xcodeml_template_type_0_2>;
                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:10334:67: error: expected unqualified-id
return(__invoke_void_return_wrapper<__xcodeml_template_type_0_2>::.__call((this->__f_.first()),(std::__1::__xcodeml_template_type_0_3(__arg))));
                                                                  ^
vec.cpp:10334:135: error: use of undeclared identifier '__arg'
return(__invoke_void_return_wrapper<__xcodeml_template_type_0_2>::.__call((this->__f_.first()),(std::__1::__xcodeml_template_type_0_3(__arg))));
                                                                                                                                      ^
vec.cpp:10336:139: warning: typedef requires a name [-Wmissing-declarations]
public:class __alloc_func<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1,__xcodeml_template_type_0_2(void/**/)>(*__clone()const){typedef allocator_traits<__xcodeml_template_type_0_1>;
                                                                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:10339:1: warning: typedef requires a name [-Wmissing-declarations]
typedef __allocator_destructor<typename __rebind_alloc_helper<allocator_traits<__xcodeml_template_type_0_1>,class __alloc_func<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1,__xcodeml_template_type_0_2(void/**/)> >::type>;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:10340:351: error: expected unqualified-id
unique_ptr<class __alloc_func<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1,__xcodeml_template_type_0_2(void/**/)>,__allocator_destructor<typename __rebind_alloc_helper<allocator_traits<__xcodeml_template_type_0_1>,class __alloc_func<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1,__xcodeml_template_type_0_2(void/**/)> >::type> > =(__a.allocate(1))__xcodeml_identity<__allocator_destructor<typename __rebind_alloc_helper<allocator_traits<__xcodeml_template_type_0_1>,class __alloc_func<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1,__xcodeml_template_type_0_2(void/**/)> >::type> >::t(__a,1);
                                                                                                                                                                                                                                                                                                                                                              ^
vec.cpp:10341:18: error: use of undeclared identifier '__hold'
::new(((void(*))(__hold.get())))__xcodeml_identity<class __alloc_func<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1,__xcodeml_template_type_0_2(void/**/)> >::t((this->__f_.first()),__xcodeml_identity<__xcodeml_template_type_0_1>::t(__a));
                 ^
vec.cpp:10342:8: error: use of undeclared identifier '__hold'
return(__hold.release());
       ^
vec.cpp:10344:32: error: expected ')'
public:void destroy(){(void/**/this->__f_());
                               ^
vec.cpp:10344:23: note: to match this '('
public:void destroy(){(void/**/this->__f_());
                      ^
vec.cpp:10344:45: error: expected expression
public:void destroy(){(void/**/this->__f_());
                                            ^
vec.cpp:10346:162: warning: typedef requires a name [-Wmissing-declarations]
public:static void __destroy_and_delete(class __alloc_func<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1,__xcodeml_template_type_0_2(void/**/)>(*__f)){typedef allocator_traits<__xcodeml_template_type_0_1>;
                                                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:10348:208: error: member reference base type 'class __alloc_func<__xcodeml_template_type_0_0, __xcodeml_template_type_0_1, __xcodeml_template_type_0_2 ()> (*)' is not a structure or union
typename __rebind_alloc_helper<allocator_traits<__xcodeml_template_type_0_1>,class __alloc_func<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1,__xcodeml_template_type_0_2(void/**/)> >::type __a=(__f.__get_allocator());
                                                                                                                                                                                                            ~~~^~~~~~~~~~~~~~~~
vec.cpp:10349:5: error: member reference base type 'class __alloc_func<__xcodeml_template_type_0_0, __xcodeml_template_type_0_1, __xcodeml_template_type_0_2 ()> (*)' is not a structure or union
(__f.destroy());
 ~~~^~~~~~~~
vec.cpp:10354:127: error: class template partial specialization contains a template parameter that cannot be deduced; this partial specialization will never be used [-Wunusable-partial-specialization]
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __default_alloc_func<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1(void/**/)>{private:__xcodeml_template_type_0_0 __f_;
                                                                                                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:10354:93: note: non-deducible template parameter '__xcodeml_template_type_0_2'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __default_alloc_func<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1(void/**/)>{private:__xcodeml_template_type_0_0 __f_;
                                                                                            ^
vec.cpp:10359:75: error: expected unqualified-id
public:__default_alloc_func(__xcodeml_template_type_0_0(*__f)):__f_((std::(__f))){}
                                                                          ^
vec.cpp:10361:62: warning: typedef requires a name [-Wmissing-declarations]
public:__xcodeml_template_type_0_1 operator()(void/*__arg*/){typedef __invoke_void_return_wrapper<__xcodeml_template_type_0_1>;
                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:10362:67: error: expected unqualified-id
return(__invoke_void_return_wrapper<__xcodeml_template_type_0_1>::.__call(this->__f_,(std::__1::__xcodeml_template_type_0_2(__arg))));
                                                                  ^
vec.cpp:10362:97: error: no member named '__xcodeml_template_type_0_2' in namespace 'std::__1'
return(__invoke_void_return_wrapper<__xcodeml_template_type_0_1>::.__call(this->__f_,(std::__1::__xcodeml_template_type_0_2(__arg))));
                                                                                      ~~~~~~~~~~^
vec.cpp:10362:125: error: use of undeclared identifier '__arg'
return(__invoke_void_return_wrapper<__xcodeml_template_type_0_1>::.__call(this->__f_,(std::__1::__xcodeml_template_type_0_2(__arg))));
                                                                                                                            ^
vec.cpp:10364:249: error: expected unqualified-id
public:class __default_alloc_func<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1(void/**/)>(*__clone()const){class::std::__1::unique_ptr<void,class::std::__1::__builtin_new_allocator::__builtin_new_deleter>__hold=(__builtin_new_allocator::class __default_alloc_func<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1(void/**/)>(1));
                                                                                                                                                                                                                                                        ^
vec.cpp:10365:117: error: no member named 'get' in 'std::__1::unique_ptr<void, std::__1::__builtin_new_allocator::__builtin_new_deleter>'
class __default_alloc_func<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1(void/**/)>(*__res)=::new((__hold.get()))__xcodeml_identity<class __default_alloc_func<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1(void/**/)> >::t(this->__f_);
                                                                                                             ~~~~~~ ^
vec.cpp:10366:16: error: no member named 'release' in 'std::__1::unique_ptr<void, std::__1::__builtin_new_allocator::__builtin_new_deleter>'
((void)(__hold.release()));
        ~~~~~~ ^
vec.cpp:10369:52: error: expected ')'
public:void destroy(){(__xcodeml_template_type_0_0 this->__f_());
                                                   ^
vec.cpp:10369:23: note: to match this '('
public:void destroy(){(__xcodeml_template_type_0_0 this->__f_());
                      ^
vec.cpp:10369:65: error: expected expression
public:void destroy(){(__xcodeml_template_type_0_0 this->__f_());
                                                                ^
vec.cpp:10371:146: error: member reference base type 'class __default_alloc_func<__xcodeml_template_type_0_0, __xcodeml_template_type_0_1 ()> (*)' is not a structure or union
public:static void __destroy_and_delete(class __default_alloc_func<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1(void/**/)>(*__f)){(__f.destroy());
                                                                                                                                              ~~~^~~~~~~~
vec.cpp:10372:27: error: expected unqualified-id
(__builtin_new_allocator::class __default_alloc_func<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1(void/**/)>(__f,1));
                          ^
vec.cpp:10378:90: error: class template partial specialization contains a template parameter that cannot be deduced; this partial specialization will never be used [-Wunusable-partial-specialization]
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __base<__xcodeml_template_type_0_0(void/**/)>{private:__base(class __base const&);
                                                                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:10378:56: note: non-deducible template parameter '__xcodeml_template_type_0_1'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __base<__xcodeml_template_type_0_0(void/**/)>{private:__base(class __base const&);
                                                       ^
vec.cpp:10394:164: error: class template partial specialization contains a template parameter that cannot be deduced; this partial specialization will never be used [-Wunusable-partial-specialization]
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3>class __func<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1,__xcodeml_template_type_0_2(void/**/)>:public __base<__xcodeml_template_type_0_2(void/**/)>{private:__alloc_func<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1,__xcodeml_template_type_0_2(void/**/)>;
                                                                                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:10394:130: note: non-deducible template parameter '__xcodeml_template_type_0_3'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3>class __func<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1,__xcodeml_template_type_0_2(void/**/)>:public __base<__xcodeml_template_type_0_2(void/**/)>{private:__alloc_func<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1,__xcodeml_template_type_0_2(void/**/)>;
                                                                                                                                 ^
vec.cpp:10394:327: warning: declaration does not declare anything [-Wmissing-declarations]
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3>class __func<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1,__xcodeml_template_type_0_2(void/**/)>:public __base<__xcodeml_template_type_0_2(void/**/)>{private:__alloc_func<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1,__xcodeml_template_type_0_2(void/**/)>;
                                                                                                                                                                                                                                                                                                                                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:10400:8: error: 'virtual' can only appear on non-static member functions
public:virtual __base<__xcodeml_template_type_0_2(void/**/)>;
       ^
vec.cpp:10400:8: warning: declaration does not declare anything [-Wmissing-declarations]
public:virtual __base<__xcodeml_template_type_0_2(void/**/)>;
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:10396:66: error: expected unqualified-id
public:__func(__xcodeml_template_type_0_0(*__f)):__f_((std::__1::(__f))){}
                                                                 ^
vec.cpp:10397:101: error: expected ')'
public:__func(__xcodeml_template_type_0_0 const&__f,__xcodeml_template_type_0_1 const&__a):__f_(__f __a){}
                                                                                                    ^
vec.cpp:10397:96: note: to match this '('
public:__func(__xcodeml_template_type_0_0 const&__f,__xcodeml_template_type_0_1 const&__a):__f_(__f __a){}
                                                                                               ^
vec.cpp:10397:92: error: member initializer '__f_' does not name a non-static data member or base class
public:__func(__xcodeml_template_type_0_0 const&__f,__xcodeml_template_type_0_1 const&__a):__f_(__f __a){}
                                                                                           ^~~~~~~~~~~~~
vec.cpp:10398:107: error: expected unqualified-id
public:__func(__xcodeml_template_type_0_0 const&__f,__xcodeml_template_type_0_1(*__a)):__f_(__f(std::__1::(__a))){}
                                                                                                          ^
vec.cpp:10399:100: error: expected unqualified-id
public:__func(__xcodeml_template_type_0_0(*__f),__xcodeml_template_type_0_1(*__a)):__f_((std::__1::(__f))(std::__1::(__a))){}
                                                                                                   ^
vec.cpp:10399:117: error: expected unqualified-id
public:__func(__xcodeml_template_type_0_0(*__f),__xcodeml_template_type_0_1(*__a)):__f_((std::__1::(__f))(std::__1::(__a))){}
                                                                                                                    ^
vec.cpp:10409:44: error: expected '(' for function-style cast or type construction
__base<__xcodeml_template_type_0_2(void/**/)>{typedef allocator_traits<__xcodeml_template_type_0_1>;
                                   ~~~~    ^
vec.cpp:10409:46: error: expected unqualified-id
__base<__xcodeml_template_type_0_2(void/**/)>{typedef allocator_traits<__xcodeml_template_type_0_1>;
                                             ^
vec.cpp:10417:6: error: '__func' is not a class, namespace, or enumeration
void __func::__clone(__base<__xcodeml_template_type_0_2(void/**/)>)const{::new(__p)__xcodeml_identity<class __func<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1,__xcodeml_template_type_0_2(void/**/)> >::t((this->__f_.__target()),(this->__f_.__get_allocator()));
     ^
vec.cpp:10392:127: note: '__func' declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __func;
                                                                                                                              ^
vec.cpp:10417:65: error: expected '(' for function-style cast or type construction
void __func::__clone(__base<__xcodeml_template_type_0_2(void/**/)>)const{::new(__p)__xcodeml_identity<class __func<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1,__xcodeml_template_type_0_2(void/**/)> >::t((this->__f_.__target()),(this->__f_.__get_allocator()));
                                                        ~~~~    ^
vec.cpp:10417:65: error: expected '(' for function-style cast or type construction
void __func::__clone(__base<__xcodeml_template_type_0_2(void/**/)>)const{::new(__p)__xcodeml_identity<class __func<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1,__xcodeml_template_type_0_2(void/**/)> >::t((this->__f_.__target()),(this->__f_.__get_allocator()));
                                                        ~~~~    ^
vec.cpp:10419:6: error: '__func' is not a class, namespace, or enumeration
void __func::destroy(){(this->__f_.destroy());
     ^
vec.cpp:10392:127: note: '__func' declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __func;
                                                                                                                              ^
vec.cpp:10421:6: error: '__func' is not a class, namespace, or enumeration
void __func::destroy_deallocate(){typedef allocator_traits<__xcodeml_template_type_0_1>;
     ^
vec.cpp:10392:127: note: '__func' declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __func;
                                                                                                                              ^
vec.cpp:10427:1: error: unknown type name '__xcodeml_template_type_0_2'
__xcodeml_template_type_0_2 __func::operator()(void/*__arg*/){return(this->__f_((std::__1::__xcodeml_template_type_0_3(__arg))));
^
vec.cpp:10427:29: error: '__func' is not a class, namespace, or enumeration
__xcodeml_template_type_0_2 __func::operator()(void/*__arg*/){return(this->__f_((std::__1::__xcodeml_template_type_0_3(__arg))));
                            ^
vec.cpp:10392:127: note: '__func' declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __func;
                                                                                                                              ^
vec.cpp:10429:13: error: '__func' is not a class, namespace, or enumeration
void const(*__func::target(class type_info const&__ti)const){if(__ti.operator==(__xcodeml_template_type_0_0)){return(&(this->__f_.__target()));};
            ^
vec.cpp:10392:127: note: '__func' declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __func;
                                                                                                                              ^
vec.cpp:10432:23: error: '__func' is not a class, namespace, or enumeration
class type_info const&__func::target_type()const{return __xcodeml_template_type_0_0;
                      ^
vec.cpp:10392:127: note: '__func' declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __func;
                                                                                                                              ^
vec.cpp:10436:90: error: class template partial specialization contains a template parameter that cannot be deduced; this partial specialization will never be used [-Wunusable-partial-specialization]
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __value_func<__xcodeml_template_type_0_0(void/**/)>{private:class::std::__1::aligned_storage<24,16>::type __buf_;
                                                                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:10436:56: note: non-deducible template parameter '__xcodeml_template_type_0_1'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __value_func<__xcodeml_template_type_0_0(void/**/)>{private:class::std::__1::aligned_storage<24,16>::type __buf_;
                                                       ^
vec.cpp:10437:9: warning: typedef requires a name [-Wmissing-declarations]
private:typedef __base<__xcodeml_template_type_0_0(void/**/)>;
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:10438:9: warning: declaration does not declare anything [-Wmissing-declarations]
private:__base<__xcodeml_template_type_0_0(void/**/)>;
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:10439:61: error: expected member name or ';' after declaration specifiers
private:static __base<__xcodeml_template_type_0_0(void/**/)>{return reinterpret_cast<__base<__xcodeml_template_type_0_0(void/**/)> >(p);
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
vec.cpp:10530:131: error: expected '(' for function-style cast or type construction
public:static class __policy const(*__create_empty()){static constexpr class __policy const __policy_={nullptr,nullptr,true,(&void)};
                                                                                                                              ~~~~^
vec.cpp:10535:11: error: member reference base type 'const __xcodeml_template_type_0_0 (*)' is not a structure or union
return(__f.__clone());
       ~~~^~~~~~~~
vec.cpp:10539:196: error: '__xcodeml_template_type_0_0' does not refer to a value
private:template<typename __xcodeml_template_type_0_0>static class __policy const(*__choose_policy(class::std::__1::integral_constant<bool,0>)){static constexpr class __policy const __policy_={(&__xcodeml_template_type_0_0),(&__xcodeml_template_type_0_0),false,(&typename __xcodeml_template_type_0_0::_Target)};
                                                                                                                                                                                                   ^
vec.cpp:10539:27: note: declared here
private:template<typename __xcodeml_template_type_0_0>static class __policy const(*__choose_policy(class::std::__1::integral_constant<bool,0>)){static constexpr class __policy const __policy_={(&__xcodeml_template_type_0_0),(&__xcodeml_template_type_0_0),false,(&typename __xcodeml_template_type_0_0::_Target)};
                          ^
vec.cpp:10539:227: error: '__xcodeml_template_type_0_0' does not refer to a value
private:template<typename __xcodeml_template_type_0_0>static class __policy const(*__choose_policy(class::std::__1::integral_constant<bool,0>)){static constexpr class __policy const __policy_={(&__xcodeml_template_type_0_0),(&__xcodeml_template_type_0_0),false,(&typename __xcodeml_template_type_0_0::_Target)};
                                                                                                                                                                                                                                  ^
vec.cpp:10539:27: note: declared here
private:template<typename __xcodeml_template_type_0_0>static class __policy const(*__choose_policy(class::std::__1::integral_constant<bool,0>)){static constexpr class __policy const __policy_={(&__xcodeml_template_type_0_0),(&__xcodeml_template_type_0_0),false,(&typename __xcodeml_template_type_0_0::_Target)};
                          ^
vec.cpp:10539:309: error: expected '(' for function-style cast or type construction
private:template<typename __xcodeml_template_type_0_0>static class __policy const(*__choose_policy(class::std::__1::integral_constant<bool,0>)){static constexpr class __policy const __policy_={(&__xcodeml_template_type_0_0),(&__xcodeml_template_type_0_0),false,(&typename __xcodeml_template_type_0_0::_Target)};
                                                                                                                                                                                                                                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
vec.cpp:10542:263: error: expected '(' for function-style cast or type construction
private:template<typename __xcodeml_template_type_0_0>static class __policy const(*__choose_policy(class::std::__1::integral_constant<bool,1>)){static constexpr class __policy const __policy_={nullptr,nullptr,false,(&typename __xcodeml_template_type_0_0::_Target)};
                                                                                                                                                                                                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
vec.cpp:10547:161: error: expected ';' after alias declaration
template<typename __xcodeml_template_type_0_0>using __fast_forward=typename conditional<expression,__xcodeml_template_type_0_0,__xcodeml_template_type_0_0(*)>::type;
                                                                                                                                                                ^
                                                                                                                                                                ;
vec.cpp:10550:90: error: class template partial specialization contains a template parameter that cannot be deduced; this partial specialization will never be used [-Wunusable-partial-specialization]
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __policy_invoker<__xcodeml_template_type_0_0(void/**/)>{public:typedef __xcodeml_template_type_0_0(*__Call)(union __policy_storage const(*),void/**/);
                                                                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:10550:56: note: non-deducible template parameter '__xcodeml_template_type_0_1'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __policy_invoker<__xcodeml_template_type_0_0(void/**/)>{public:typedef __xcodeml_template_type_0_0(*__Call)(union __policy_storage const(*),void/**/);
                                                       ^
vec.cpp:10550:197: error: 'void' must be the first and only parameter if specified
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __policy_invoker<__xcodeml_template_type_0_0(void/**/)>{public:typedef __xcodeml_template_type_0_0(*__Call)(union __policy_storage const(*),void/**/);
                                                                                                                                                                                                    ^
vec.cpp:10551:45: error: 'void' must be the first and only parameter if specified
public:__xcodeml_template_type_0_0(*__call_)(union __policy_storage const(*),void/**/);
                                            ^
vec.cpp:10556:59: error: 'void' must be the first and only parameter if specified
private:__policy_invoker(__xcodeml_template_type_0_0(*__c)(union __policy_storage const(*),void/**/)):__call_(__c){}
                                                          ^
vec.cpp:10557:56: error: 'void' must be the first and only parameter if specified
private:static __xcodeml_template_type_0_0 __call_empty(union __policy_storage const(*),void/**/){(__throw_bad_function_call());
                                                       ^
vec.cpp:10559:101: error: 'void' must be the first and only parameter if specified
private:template<typename __xcodeml_template_type_1_0>static __xcodeml_template_type_0_0 __call_impl(union __policy_storage const(*__buf),void/*__args*/){__xcodeml_template_type_1_0(*__f)=reinterpret_cast<__xcodeml_template_type_1_0(*)>((__use_small_storage<__xcodeml_template_type_1_0>::value?(&__buf->__small):__buf->__large));
                                                                                                    ^
vec.cpp:10553:228: error: '__xcodeml_template_type_1_0' does not refer to a value
public:template<typename __xcodeml_template_type_1_0>static class __policy_invoker<__xcodeml_template_type_0_0(void/**/)>__create(){return __xcodeml_identity<class __policy_invoker<__xcodeml_template_type_0_0(void/**/)> >::t((&__xcodeml_template_type_1_0));
                                                                                                                                                                                                                                   ^
vec.cpp:10553:26: note: declared here
public:template<typename __xcodeml_template_type_1_0>static class __policy_invoker<__xcodeml_template_type_0_0(void/**/)>__create(){return __xcodeml_identity<class __policy_invoker<__xcodeml_template_type_0_0(void/**/)> >::t((&__xcodeml_template_type_1_0));
                         ^
vec.cpp:10560:26: error: no member named '__xcodeml_template_type_0_1' in namespace 'std::__1'
return((*__f)((std::__1::__xcodeml_template_type_0_1(__args))));
               ~~~~~~~~~~^
vec.cpp:10560:54: error: use of undeclared identifier '__args'
return((*__f)((std::__1::__xcodeml_template_type_0_1(__args))));
                                                     ^
vec.cpp:10566:90: error: class template partial specialization contains a template parameter that cannot be deduced; this partial specialization will never be used [-Wunusable-partial-specialization]
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __policy_func<__xcodeml_template_type_0_0(void/**/)>{private:union::std::__1::__function::__policy_storage __buf_;
                                                                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:10566:56: note: non-deducible template parameter '__xcodeml_template_type_0_1'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __policy_func<__xcodeml_template_type_0_0(void/**/)>{private:union::std::__1::__function::__policy_storage __buf_;
                                                       ^
vec.cpp:10567:9: warning: typedef requires a name [-Wmissing-declarations]
private:typedef __policy_invoker<__xcodeml_template_type_0_0(void/**/)>;
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:10568:9: warning: declaration does not declare anything [-Wmissing-declarations]
private:__policy_invoker<__xcodeml_template_type_0_0(void/**/)>;
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:10612:77: error: unknown type name 'nullptr_t'
public:class __policy_func<__xcodeml_template_type_0_0(void/**/)>&operator=(nullptr_t){class __policy const(*__p)=this->__policy_;
                                                                            ^
vec.cpp:10572:218: warning: typedef requires a name [-Wmissing-declarations]
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1>__policy_func(__xcodeml_template_type_1_0(*__f),__xcodeml_template_type_1_1 const&__a):__policy_((__policy::__create_empty())){typedef __alloc_func<__xcodeml_template_type_1_0,__xcodeml_template_type_1_1,__xcodeml_template_type_0_0(void/**/)>;
                                                                                                                                                                                                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:10573:1: warning: typedef requires a name [-Wmissing-declarations]
typedef allocator_traits<__xcodeml_template_type_1_1>;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:10575:17: error: expected unqualified-id
if((__function::(__f))){{(this->__invoker_=(__policy_invoker<__xcodeml_template_type_0_0(void/**/)>::.__create()));
                ^
vec.cpp:10575:102: error: expected unqualified-id
if((__function::(__f))){{(this->__invoker_=(__policy_invoker<__xcodeml_template_type_0_0(void/**/)>::.__create()));
                                                                                                     ^
vec.cpp:10576:29: error: no member named '__alloc_func' in 'std::__1::__function::__policy'
(this->__policy_=(__policy::__alloc_func<__xcodeml_template_type_1_0,__xcodeml_template_type_1_1,__xcodeml_template_type_0_0(void/**/)>()));
                  ~~~~~~~~~~^
vec.cpp:10576:42: error: '__xcodeml_template_type_1_0' does not refer to a value
(this->__policy_=(__policy::__alloc_func<__xcodeml_template_type_1_0,__xcodeml_template_type_1_1,__xcodeml_template_type_0_0(void/**/)>()));
                                         ^
vec.cpp:10572:26: note: declared here
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1>__policy_func(__xcodeml_template_type_1_0(*__f),__xcodeml_template_type_1_1 const&__a):__policy_((__policy::__create_empty())){typedef __alloc_func<__xcodeml_template_type_1_0,__xcodeml_template_type_1_1,__xcodeml_template_type_0_0(void/**/)>;
                         ^
vec.cpp:10578:203: error: missing 'typename' prior to dependent type name '__xcodeml_identity<__alloc_func<__xcodeml_template_type_1_0, __xcodeml_template_type_1_1, __xcodeml_template_type_0_0 ()> >::t'
if(__xcodeml_identity<__use_small_storage<__alloc_func<__xcodeml_template_type_1_0,__xcodeml_template_type_1_1,__xcodeml_template_type_0_0(void/**/)> > >::t()){{::new(((void(*))(&this->__buf_.__small)))__xcodeml_identity<__alloc_func<__xcodeml_template_type_1_0,__xcodeml_template_type_1_1,__xcodeml_template_type_0_0(void/**/)> >::t((std::__1::(__f)),__xcodeml_identity<__xcodeml_template_type_1_1>::t(__af));
                                                                                                                                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                                                                                                                                                                                          typename 
vec.cpp:10578:346: error: expected unqualified-id
if(__xcodeml_identity<__use_small_storage<__alloc_func<__xcodeml_template_type_1_0,__xcodeml_template_type_1_1,__xcodeml_template_type_0_0(void/**/)> > >::t()){{::new(((void(*))(&this->__buf_.__small)))__xcodeml_identity<__alloc_func<__xcodeml_template_type_1_0,__xcodeml_template_type_1_1,__xcodeml_template_type_0_0(void/**/)> >::t((std::__1::(__f)),__xcodeml_identity<__xcodeml_template_type_1_1>::t(__af));
                                                                                                                                                                                                                                                                                                                                                         ^
vec.cpp:10579:10: warning: typedef requires a name [-Wmissing-declarations]
};}else{{typedef __allocator_destructor<typename __rebind_alloc_helper<allocator_traits<__xcodeml_template_type_1_1>,__alloc_func<__xcodeml_template_type_1_0,__xcodeml_template_type_1_1,__xcodeml_template_type_0_0(void/**/)> >::type>;
         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:10580:339: error: expected unqualified-id
unique_ptr<__alloc_func<__xcodeml_template_type_1_0,__xcodeml_template_type_1_1,__xcodeml_template_type_0_0(void/**/)>,__allocator_destructor<typename __rebind_alloc_helper<allocator_traits<__xcodeml_template_type_1_1>,__alloc_func<__xcodeml_template_type_1_0,__xcodeml_template_type_1_1,__xcodeml_template_type_0_0(void/**/)> >::type> > =(__af.allocate(1))__xcodeml_identity<__allocator_destructor<typename __rebind_alloc_helper<allocator_traits<__xcodeml_template_type_1_1>,__alloc_func<__xcodeml_template_type_1_0,__xcodeml_template_type_1_1,__xcodeml_template_type_0_0(void/**/)> >::type> >::t(__af,1);
                                                                                                                                                                                                                                                                                                                                                  ^
vec.cpp:10581:18: error: use of undeclared identifier '__hold'
::new(((void(*))(__hold.get())))__xcodeml_identity<__alloc_func<__xcodeml_template_type_1_0,__xcodeml_template_type_1_1,__xcodeml_template_type_0_0(void/**/)> >::t((std::__1::(__f)),__xcodeml_identity<__xcodeml_template_type_1_1>::t(__af));
                 ^
vec.cpp:10582:24: error: use of undeclared identifier '__hold'
(this->__buf_.__large=(__hold.release()));
                       ^
vec.cpp:10586:180: warning: typedef requires a name [-Wmissing-declarations]
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1>__policy_func(__xcodeml_template_type_1_0(*__f)):__policy_((__policy::__create_empty())){typedef __default_alloc_func<__xcodeml_template_type_1_0,__xcodeml_template_type_0_0(void/**/)>;
                                                                                                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:10587:17: error: expected unqualified-id
if((__function::(__f))){{(this->__invoker_=(__policy_invoker<__xcodeml_template_type_0_0(void/**/)>::.__create()));
                ^
vec.cpp:10587:102: error: expected unqualified-id
if((__function::(__f))){{(this->__invoker_=(__policy_invoker<__xcodeml_template_type_0_0(void/**/)>::.__create()));
                                                                                                     ^
vec.cpp:10588:29: error: no member named '__default_alloc_func' in 'std::__1::__function::__policy'
(this->__policy_=(__policy::__default_alloc_func<__xcodeml_template_type_1_0,__xcodeml_template_type_0_0(void/**/)>()));
                  ~~~~~~~~~~^
vec.cpp:10588:50: error: '__xcodeml_template_type_1_0' does not refer to a value
(this->__policy_=(__policy::__default_alloc_func<__xcodeml_template_type_1_0,__xcodeml_template_type_0_0(void/**/)>()));
                                                 ^
vec.cpp:10586:26: note: declared here
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1>__policy_func(__xcodeml_template_type_1_0(*__f)):__policy_((__policy::__create_empty())){typedef __default_alloc_func<__xcodeml_template_type_1_0,__xcodeml_template_type_0_0(void/**/)>;
                         ^
vec.cpp:10588:114: error: expected '(' for function-style cast or type construction
(this->__policy_=(__policy::__default_alloc_func<__xcodeml_template_type_1_0,__xcodeml_template_type_0_0(void/**/)>()));
                                                                                                         ~~~~    ^
vec.cpp:10588:117: error: expected expression
(this->__policy_=(__policy::__default_alloc_func<__xcodeml_template_type_1_0,__xcodeml_template_type_0_0(void/**/)>()));
                                                                                                                    ^
vec.cpp:10589:183: error: missing 'typename' prior to dependent type name '__xcodeml_identity<__default_alloc_func<__xcodeml_template_type_1_0, __xcodeml_template_type_0_0 ()> >::t'
if(__xcodeml_identity<__use_small_storage<__default_alloc_func<__xcodeml_template_type_1_0,__xcodeml_template_type_0_0(void/**/)> > >::t()){{::new(((void(*))(&this->__buf_.__small)))__xcodeml_identity<__default_alloc_func<__xcodeml_template_type_1_0,__xcodeml_template_type_0_0(void/**/)> >::t((std::__1::(__f)));
                                                                                                                                                                                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                                                                                                                                                                      typename 
vec.cpp:10589:306: error: expected unqualified-id
if(__xcodeml_identity<__use_small_storage<__default_alloc_func<__xcodeml_template_type_1_0,__xcodeml_template_type_0_0(void/**/)> > >::t()){{::new(((void(*))(&this->__buf_.__small)))__xcodeml_identity<__default_alloc_func<__xcodeml_template_type_1_0,__xcodeml_template_type_0_0(void/**/)> >::t((std::__1::(__f)));
                                                                                                                                                                                                                                                                                                                 ^
vec.cpp:10590:140: error: no member named '__default_alloc_func' in 'std::__1::__builtin_new_allocator'
};}else{{class::std::__1::unique_ptr<void,class::std::__1::__builtin_new_allocator::__builtin_new_deleter>__hold=(__builtin_new_allocator::__default_alloc_func<__xcodeml_template_type_1_0,__xcodeml_template_type_0_0(void/**/)>(1));
                                                                                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~^
vec.cpp:10590:161: error: '__xcodeml_template_type_1_0' does not refer to a value
};}else{{class::std::__1::unique_ptr<void,class::std::__1::__builtin_new_allocator::__builtin_new_deleter>__hold=(__builtin_new_allocator::__default_alloc_func<__xcodeml_template_type_1_0,__xcodeml_template_type_0_0(void/**/)>(1));
                                                                                                                                                                ^
vec.cpp:10586:26: note: declared here
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1>__policy_func(__xcodeml_template_type_1_0(*__f)):__policy_((__policy::__create_empty())){typedef __default_alloc_func<__xcodeml_template_type_1_0,__xcodeml_template_type_0_0(void/**/)>;
                         ^
vec.cpp:10590:225: error: expected '(' for function-style cast or type construction
};}else{{class::std::__1::unique_ptr<void,class::std::__1::__builtin_new_allocator::__builtin_new_deleter>__hold=(__builtin_new_allocator::__default_alloc_func<__xcodeml_template_type_1_0,__xcodeml_template_type_0_0(void/**/)>(1));
                                                                                                                                                                                                                        ~~~~    ^
vec.cpp:10591:37: error: no member named 'get' in 'std::__1::unique_ptr<void, std::__1::__builtin_new_allocator::__builtin_new_deleter>'
(this->__buf_.__large=::new((__hold.get()))__xcodeml_identity<__default_alloc_func<__xcodeml_template_type_1_0,__xcodeml_template_type_0_0(void/**/)> >::t((std::__1::(__f))));
                             ~~~~~~ ^
vec.cpp:10592:16: error: no member named 'release' in 'std::__1::unique_ptr<void, std::__1::__builtin_new_allocator::__builtin_new_deleter>'
((void)(__hold.release()));
        ~~~~~~ ^
vec.cpp:10596:72: error: member initializer '__invoker_' does not name a non-static data member or base class
public:__policy_func(class __policy_func const&__f):__buf_(__f.__buf_),__invoker_(__f.__invoker_),__policy_(__f.__policy_){if(this->__policy_->__clone){(this->__buf_.__large=(this->__policy_->__clone(__f.__buf_.__large)));};
                                                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:10598:98: error: member reference base type 'class __policy_func<__xcodeml_template_type_0_0 ()> (*)' is not a structure or union
public:__policy_func(class __policy_func<__xcodeml_template_type_0_0(void/**/)>(*__f)):__buf_(__f.__buf_),__invoker_(__f.__invoker_),__policy_(__f.__policy_){if(this->__policy_->__destroy){{(__f.__policy_=(__policy::__create_empty()));
                                                                                              ~~~^~~~~~~
vec.cpp:10598:121: error: member reference base type 'class __policy_func<__xcodeml_template_type_0_0 ()> (*)' is not a structure or union
public:__policy_func(class __policy_func<__xcodeml_template_type_0_0(void/**/)>(*__f)):__buf_(__f.__buf_),__invoker_(__f.__invoker_),__policy_(__f.__policy_){if(this->__policy_->__destroy){{(__f.__policy_=(__policy::__create_empty()));
                                                                                                                     ~~~^~~~~~~~~~~
vec.cpp:10598:147: error: member reference base type 'class __policy_func<__xcodeml_template_type_0_0 ()> (*)' is not a structure or union
public:__policy_func(class __policy_func<__xcodeml_template_type_0_0(void/**/)>(*__f)):__buf_(__f.__buf_),__invoker_(__f.__invoker_),__policy_(__f.__policy_){if(this->__policy_->__destroy){{(__f.__policy_=(__policy::__create_empty()));
                                                                                                                                               ~~~^~~~~~~~~~
vec.cpp:10598:195: error: member reference base type 'class __policy_func<__xcodeml_template_type_0_0 ()> (*)' is not a structure or union
public:__policy_func(class __policy_func<__xcodeml_template_type_0_0(void/**/)>(*__f)):__buf_(__f.__buf_),__invoker_(__f.__invoker_),__policy_(__f.__policy_){if(this->__policy_->__destroy){{(__f.__policy_=(__policy::__create_empty()));
                                                                                                                                                                                               ~~~^~~~~~~~~~
vec.cpp:10599:5: error: member reference base type 'class __policy_func<__xcodeml_template_type_0_0 ()> (*)' is not a structure or union
(__f.__invoker_=__xcodeml_identity<__policy_invoker<__xcodeml_template_type_0_0(void/**/)> >::t());
 ~~~^~~~~~~~~~~
vec.cpp:10605:18: error: member reference base type 'class __policy_func<__xcodeml_template_type_0_0 ()> (*)' is not a structure or union
(this->__buf_=__f.__buf_);
              ~~~^~~~~~~
vec.cpp:10606:22: error: member reference base type 'class __policy_func<__xcodeml_template_type_0_0 ()> (*)' is not a structure or union
(this->__invoker_=__f.__invoker_);
                  ~~~^~~~~~~~~~~
vec.cpp:10607:21: error: member reference base type 'class __policy_func<__xcodeml_template_type_0_0 ()> (*)' is not a structure or union
(this->__policy_=__f.__policy_);
                 ~~~^~~~~~~~~~
vec.cpp:10608:5: error: member reference base type 'class __policy_func<__xcodeml_template_type_0_0 ()> (*)' is not a structure or union
(__f.__policy_=(__policy::__create_empty()));
 ~~~^~~~~~~~~~
vec.cpp:10609:5: error: member reference base type 'class __policy_func<__xcodeml_template_type_0_0 ()> (*)' is not a structure or union
(__f.__invoker_=__xcodeml_identity<__policy_invoker<__xcodeml_template_type_0_0(void/**/)> >::t());
 ~~~^~~~~~~~~~~
vec.cpp:10618:111: error: expected unqualified-id
public:__xcodeml_template_type_0_0 operator()(void/*__args*/)const{return(this->__invoker_.__call_((std::__1::(this->__buf_)),(std::__1::__xcodeml_template_type_0_1(__args))));
                                                                                                              ^
vec.cpp:10618:138: error: no member named '__xcodeml_template_type_0_1' in namespace 'std::__1'
public:__xcodeml_template_type_0_0 operator()(void/*__args*/)const{return(this->__invoker_.__call_((std::__1::(this->__buf_)),(std::__1::__xcodeml_template_type_0_1(__args))));
                                                                                                                               ~~~~~~~~~~^
vec.cpp:10618:166: error: use of undeclared identifier '__args'
public:__xcodeml_template_type_0_0 operator()(void/*__args*/)const{return(this->__invoker_.__call_((std::__1::(this->__buf_)),(std::__1::__xcodeml_template_type_0_1(__args))));
                                                                                                                                                                     ^
vec.cpp:10620:93: error: expected unqualified-id
public:void swap(class __policy_func<__xcodeml_template_type_0_0(void/**/)>&__f){(std::__1::(this->__invoker_,__f.__invoker_));
                                                                                            ^
vec.cpp:10621:12: error: expected unqualified-id
(std::__1::(this->__policy_,__f.__policy_));
           ^
vec.cpp:10622:12: error: expected unqualified-id
(std::__1::(this->__buf_,__f.__buf_));
           ^
vec.cpp:10628:136: error: '__xcodeml_template_type_1_0' does not refer to a value
public:template<typename __xcodeml_template_type_1_0>__xcodeml_template_type_1_0 const(*target()const){if((this->__policy_->__is_null||__xcodeml_template_type_1_0.operator!=((*this->__policy_->__type_info)))){return nullptr;};
                                                                                                                                       ^
vec.cpp:10628:26: note: declared here
public:template<typename __xcodeml_template_type_1_0>__xcodeml_template_type_1_0 const(*target()const){if((this->__policy_->__is_null||__xcodeml_template_type_1_0.operator!=((*this->__policy_->__type_info)))){return nullptr;};
                         ^
vec.cpp:10634:90: error: class template partial specialization contains a template parameter that cannot be deduced; this partial specialization will never be used [-Wunusable-partial-specialization]
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class function<__xcodeml_template_type_0_0(void/**/)>:public __maybe_derive_from_unary_function<__xcodeml_template_type_0_0(void/**/)>,public __maybe_derive_from_binary_function<__xcodeml_template_type_0_0(void/**/)>{private:typedef __value_func<__xcodeml_template_type_0_0(void/**/)>;
                                                                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:10634:56: note: non-deducible template parameter '__xcodeml_template_type_0_1'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class function<__xcodeml_template_type_0_0(void/**/)>:public __maybe_derive_from_unary_function<__xcodeml_template_type_0_0(void/**/)>,public __maybe_derive_from_binary_function<__xcodeml_template_type_0_0(void/**/)>{private:typedef __value_func<__xcodeml_template_type_0_0(void/**/)>;
                                                       ^
vec.cpp:10634:317: error: no template named '__value_func'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class function<__xcodeml_template_type_0_0(void/**/)>:public __maybe_derive_from_unary_function<__xcodeml_template_type_0_0(void/**/)>,public __maybe_derive_from_binary_function<__xcodeml_template_type_0_0(void/**/)>{private:typedef __value_func<__xcodeml_template_type_0_0(void/**/)>;
                                                                                                                                                                                                                                                                                                                            ^
vec.cpp:10635:9: error: no template named '__value_func'
private:__value_func<__xcodeml_template_type_0_0(void/**/)>;
        ^
vec.cpp:10636:68: error: expected '(' for function-style cast or type construction
private:template<typename __xcodeml_template_type_1_0,bool=void/**/::value>class __callable;
                                                           ~~~~    ^
vec.cpp:10648:116: error: expected ';' after alias declaration
private:template<typename __xcodeml_template_type_1_0>using _EnableIfCallable=typename enable_if<expression,void>::type;
                                                                                                                   ^
                                                                                                                   ;
vec.cpp:10652:17: error: unknown type name 'nullptr_t'
public:function(nullptr_t){}
                ^
vec.cpp:10655:128: error: expected ';' at end of declaration list
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1>function(__xcodeml_template_type_1_0)
                                                                                                                               ^
                                                                                                                               ;
vec.cpp:10663:72: error: unknown type name 'nullptr_t'
public:class function<__xcodeml_template_type_0_0(void/**/)>&operator=(nullptr_t);
                                                                       ^
vec.cpp:10664:186: error: expected ';' at end of declaration list
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1>class function<__xcodeml_template_type_0_0(void/**/)>&operator=(__xcodeml_template_type_1_0(*))
                                                                                                                                                                                         ^
                                                                                                                                                                                         ;
vec.cpp:10671:160: error: expected ';' at end of declaration list
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1>bool operator==(function<__xcodeml_template_type_1_0(void/**/)>)const
                                                                                                                                                               ^
                                                                                                                                                               ;
vec.cpp:10676:92: error: expected ';' at end of declaration list
public:template<typename __xcodeml_template_type_1_0>__xcodeml_template_type_1_0(*target())
                                                                                           ^
                                                                                           ;
vec.cpp:10667:284: error: no member named '__xcodeml_template_type_1_0' in namespace 'std::__1'
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1>void assign(__xcodeml_template_type_1_0(*__f),__xcodeml_template_type_1_1 const&__a){(__xcodeml_identity<class function<__xcodeml_template_type_0_0(void/**/)> >::t(allocator_arg,__a,(std::__1::__xcodeml_template_type_1_0(__f))).swap((*this)));
                                                                                                                                                                                                                                                                                 ~~~~~~~~~~^
vec.cpp:10680:1: error: 'function' is not a class, namespace, or enumeration
function::function(class function const&__f):__f_(__f.__f_){}
^
vec.cpp:10296:53: note: 'function' declared here
template<typename __xcodeml_template_type_0_0>class function;
                                                    ^
vec.cpp:10680:26: error: template 'function' cannot be referenced with a class specifier
function::function(class function const&__f):__f_(__f.__f_){}
                         ^
vec.cpp:10296:53: note: declared here
template<typename __xcodeml_template_type_0_0>class function;
                                                    ^
vec.cpp:10681:47: error: 'function' is not a class, namespace, or enumeration
template<typename __xcodeml_template_type_1_0>function::function(class::std::__1::allocator_arg_t,__xcodeml_template_type_1_0 const&,class function const&__f):__f_(__f.__f_){}
                                              ^
vec.cpp:10296:53: note: 'function' declared here
template<typename __xcodeml_template_type_0_0>class function;
                                                    ^
vec.cpp:10681:140: error: template 'function' cannot be referenced with a class specifier
template<typename __xcodeml_template_type_1_0>function::function(class::std::__1::allocator_arg_t,__xcodeml_template_type_1_0 const&,class function const&__f):__f_(__f.__f_){}
                                                                                                                                           ^
vec.cpp:10296:53: note: declared here
template<typename __xcodeml_template_type_0_0>class function;
                                                    ^
vec.cpp:10722:79: error: no template named '__is_bind_expression'
template<typename __xcodeml_template_type_0_0>class is_bind_expression:public __is_bind_expression<typename remove_cv<__xcodeml_template_type_0_0>::type>{}
                                                                              ^
vec.cpp:10733:26: error: expected ';' after class
template<>class __ph<1>{}
                         ^
                         ;
vec.cpp:10734:26: error: expected ';' after class
template<>class __ph<2>{}
                         ^
                         ;
vec.cpp:10735:26: error: expected ';' after class
template<>class __ph<3>{}
                         ^
                         ;
vec.cpp:10736:26: error: expected ';' after class
template<>class __ph<4>{}
                         ^
                         ;
vec.cpp:10737:26: error: expected ';' after class
template<>class __ph<5>{}
                         ^
                         ;
vec.cpp:10738:26: error: expected ';' after class
template<>class __ph<6>{}
                         ^
                         ;
vec.cpp:10739:26: error: expected ';' after class
template<>class __ph<7>{}
                         ^
                         ;
vec.cpp:10740:26: error: expected ';' after class
template<>class __ph<8>{}
                         ^
                         ;
vec.cpp:10741:26: error: expected ';' after class
template<>class __ph<9>{}
                         ^
                         ;
vec.cpp:10744:17: error: template '__ph' cannot be referenced with a class specifier
constexpr class __ph const _1={};
                ^
vec.cpp:10731:47: note: declared here
namespace placeholders{template<int _Np>class __ph{}
                                              ^
vec.cpp:10745:17: error: template '__ph' cannot be referenced with a class specifier
constexpr class __ph const _2={};
                ^
vec.cpp:10731:47: note: declared here
namespace placeholders{template<int _Np>class __ph{}
                                              ^
vec.cpp:10746:17: error: template '__ph' cannot be referenced with a class specifier
constexpr class __ph const _3={};
                ^
vec.cpp:10731:47: note: declared here
namespace placeholders{template<int _Np>class __ph{}
                                              ^
vec.cpp:10747:17: error: template '__ph' cannot be referenced with a class specifier
constexpr class __ph const _4={};
                ^
vec.cpp:10731:47: note: declared here
namespace placeholders{template<int _Np>class __ph{}
                                              ^
vec.cpp:10748:17: error: template '__ph' cannot be referenced with a class specifier
constexpr class __ph const _5={};
                ^
vec.cpp:10731:47: note: declared here
namespace placeholders{template<int _Np>class __ph{}
                                              ^
vec.cpp:10749:17: error: template '__ph' cannot be referenced with a class specifier
constexpr class __ph const _6={};
                ^
vec.cpp:10731:47: note: declared here
namespace placeholders{template<int _Np>class __ph{}
                                              ^
vec.cpp:10750:17: error: template '__ph' cannot be referenced with a class specifier
constexpr class __ph const _7={};
                ^
vec.cpp:10731:47: note: declared here
namespace placeholders{template<int _Np>class __ph{}
                                              ^
vec.cpp:10751:17: error: template '__ph' cannot be referenced with a class specifier
constexpr class __ph const _8={};
                ^
vec.cpp:10731:47: note: declared here
namespace placeholders{template<int _Np>class __ph{}
                                              ^
vec.cpp:10752:17: error: template '__ph' cannot be referenced with a class specifier
constexpr class __ph const _9={};
                ^
vec.cpp:10731:47: note: declared here
namespace placeholders{template<int _Np>class __ph{}
                                              ^
vec.cpp:10753:17: error: template '__ph' cannot be referenced with a class specifier
constexpr class __ph const _10={};
                ^
vec.cpp:10731:47: note: declared here
namespace placeholders{template<int _Np>class __ph{}
                                              ^
vec.cpp:10755:58: error: expected a type
template<int _Np>class __is_placeholder<__ph<expression> >:public integral_constant<int,expression>{}
                                                         ^
vec.cpp:10757:201: error: use of undeclared identifier '__t'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>__xcodeml_template_type_0_0&__mu(reference_wrapper<__xcodeml_template_type_0_0>,__xcodeml_template_type_0_1&){return(__t.get());
                                                                                                                                                                                                        ^
vec.cpp:10759:154: error: expected expression
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,unsigned long _Indx>typename __invoke_of<__xcodeml_template_type_0_0&,...>::type __mu_expand(__xcodeml_template_type_0_0&__ti,tuple<...>,__tuple_indices<...>){return(__ti((std::__1::__xcodeml_template_type_0_1((std::__1::_Indx(__uj))))));
                                                                                                                                                         ^
vec.cpp:10759:160: error: definition or redeclaration of 'type' cannot name the global scope
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,unsigned long _Indx>typename __invoke_of<__xcodeml_template_type_0_0&,...>::type __mu_expand(__xcodeml_template_type_0_0&__ti,tuple<...>,__tuple_indices<...>){return(__ti((std::__1::__xcodeml_template_type_0_1((std::__1::_Indx(__uj))))));
                                                                                                                                                             ~~^
vec.cpp:10759:164: error: expected ';' at end of declaration
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,unsigned long _Indx>typename __invoke_of<__xcodeml_template_type_0_0&,...>::type __mu_expand(__xcodeml_template_type_0_0&__ti,tuple<...>,__tuple_indices<...>){return(__ti((std::__1::__xcodeml_template_type_0_1((std::__1::_Indx(__uj))))));
                                                                                                                                                                   ^
                                                                                                                                                                   ;
vec.cpp:10759:165: error: C++ requires a type specifier for all declarations
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,unsigned long _Indx>typename __invoke_of<__xcodeml_template_type_0_0&,...>::type __mu_expand(__xcodeml_template_type_0_0&__ti,tuple<...>,__tuple_indices<...>){return(__ti((std::__1::__xcodeml_template_type_0_1((std::__1::_Indx(__uj))))));
                                                                                                                                                                    ^
vec.cpp:10759:205: error: use of undeclared identifier '__ti'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,unsigned long _Indx>typename __invoke_of<__xcodeml_template_type_0_0&,...>::type __mu_expand(__xcodeml_template_type_0_0&__ti,tuple<...>,__tuple_indices<...>){return(__ti((std::__1::__xcodeml_template_type_0_1((std::__1::_Indx(__uj))))));
                                                                                                                                                                                                            ^
vec.cpp:10759:216: error: expected expression
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,unsigned long _Indx>typename __invoke_of<__xcodeml_template_type_0_0&,...>::type __mu_expand(__xcodeml_template_type_0_0&__ti,tuple<...>,__tuple_indices<...>){return(__ti((std::__1::__xcodeml_template_type_0_1((std::__1::_Indx(__uj))))));
                                                                                                                                                                                                                       ^
vec.cpp:10759:237: error: expected expression
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,unsigned long _Indx>typename __invoke_of<__xcodeml_template_type_0_0&,...>::type __mu_expand(__xcodeml_template_type_0_0&__ti,tuple<...>,__tuple_indices<...>){return(__ti((std::__1::__xcodeml_template_type_0_1((std::__1::_Indx(__uj))))));
                                                                                                                                                                                                                                            ^
vec.cpp:10759:242: error: expected ';' after top level declarator
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,unsigned long _Indx>typename __invoke_of<__xcodeml_template_type_0_0&,...>::type __mu_expand(__xcodeml_template_type_0_0&__ti,tuple<...>,__tuple_indices<...>){return(__ti((std::__1::__xcodeml_template_type_0_1((std::__1::_Indx(__uj))))));
                                                                                                                                                                                                                                                 ^
                                                                                                                                                                                                                                                 ;
vec.cpp:10767:90: error: explicit specialization of undeclared template class '__mu_return2'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __mu_return2<1,__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>{public:typedef typename tuple_element<expression,__xcodeml_template_type_0_1>::type type;
                                                                                         ^           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:10767:241: error: non-friend class member 'type' cannot have a qualified name
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __mu_return2<1,__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>{public:typedef typename tuple_element<expression,__xcodeml_template_type_0_1>::type type;
                                                                                                                                                                                                                                              ~~^
vec.cpp:10767:241: error: typedef declarator cannot be qualified
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __mu_return2<1,__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>{public:typedef typename tuple_element<expression,__xcodeml_template_type_0_1>::type type;
                                                                                                                                                                                                                                              ~~^
vec.cpp:10767:245: error: expected ';' at end of declaration list
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __mu_return2<1,__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>{public:typedef typename tuple_element<expression,__xcodeml_template_type_0_1>::type type;
                                                                                                                                                                                                                                                    ^
                                                                                                                                                                                                                                                    ;
vec.cpp:10770:205: error: definition or redeclaration of 'type' cannot name the global scope
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>typename enable_if<expression,typename __mu_return2<expression,__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>::type>::type __mu(__xcodeml_template_type_0_0&,__xcodeml_template_type_0_1&__uj){unsigned long const _Indx=(is_placeholder<__xcodeml_template_type_0_0>::value,1);
                                                                                                                                                                                                          ~~^
vec.cpp:10770:209: error: expected ';' at end of declaration
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>typename enable_if<expression,typename __mu_return2<expression,__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>::type>::type __mu(__xcodeml_template_type_0_0&,__xcodeml_template_type_0_1&__uj){unsigned long const _Indx=(is_placeholder<__xcodeml_template_type_0_0>::value,1);
                                                                                                                                                                                                                ^
                                                                                                                                                                                                                ;
vec.cpp:10770:209: error: expected unqualified-id
vec.cpp:10773:145: error: definition or redeclaration of 'type' cannot name the global scope
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>typename enable_if<expression,__xcodeml_template_type_0_0&>::type __mu(__xcodeml_template_type_0_0&__ti,__xcodeml_template_type_0_1&){return __ti;
                                                                                                                                              ~~^
vec.cpp:10773:149: error: expected ';' at end of declaration
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>typename enable_if<expression,__xcodeml_template_type_0_0&>::type __mu(__xcodeml_template_type_0_0&__ti,__xcodeml_template_type_0_1&){return __ti;
                                                                                                                                                    ^
                                                                                                                                                    ;
vec.cpp:10773:150: error: C++ requires a type specifier for all declarations
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>typename enable_if<expression,__xcodeml_template_type_0_0&>::type __mu(__xcodeml_template_type_0_0&__ti,__xcodeml_template_type_0_1&){return __ti;
                                                                                                                                                     ^
vec.cpp:10773:183: error: use of undeclared identifier '__ti'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>typename enable_if<expression,__xcodeml_template_type_0_0&>::type __mu(__xcodeml_template_type_0_0&__ti,__xcodeml_template_type_0_1&){return __ti;
                                                                                                                                                                                      ^
vec.cpp:10773:188: error: use of undeclared identifier '__xcodeml_template_type_0_1'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>typename enable_if<expression,__xcodeml_template_type_0_0&>::type __mu(__xcodeml_template_type_0_0&__ti,__xcodeml_template_type_0_1&){return __ti;
                                                                                                                                                                                           ^
vec.cpp:10773:216: error: expected expression
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>typename enable_if<expression,__xcodeml_template_type_0_0&>::type __mu(__xcodeml_template_type_0_0&__ti,__xcodeml_template_type_0_1&){return __ti;
                                                                                                                                                                                                                       ^
vec.cpp:10773:217: error: expected ';' after top level declarator
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>typename enable_if<expression,__xcodeml_template_type_0_0&>::type __mu(__xcodeml_template_type_0_0&__ti,__xcodeml_template_type_0_1&){return __ti;
                                                                                                                                                                                                                        ^
                                                                                                                                                                                                                        ;
vec.cpp:10781:142: error: expected expression
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __mu_return_invokable<1,__xcodeml_template_type_0_0,...>{public:typedef typename __invoke_of<__xcodeml_template_type_0_0&,...>::type type;
                                                                                                                                             ^
vec.cpp:10784:147: error: expected expression
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __mu_return_impl<__xcodeml_template_type_0_0,0,1,0,tuple<...> >:public __mu_return_invokable<expression,__xcodeml_template_type_0_0,...>{}
                                                                                                                                                  ^
vec.cpp:10784:152: error: expected a type
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __mu_return_impl<__xcodeml_template_type_0_0,0,1,0,tuple<...> >:public __mu_return_invokable<expression,__xcodeml_template_type_0_0,...>{}
                                                                                                                                                       ^
vec.cpp:10786:90: error: explicit specialization of undeclared template class '__mu_return_impl'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __mu_return_impl<__xcodeml_template_type_0_0,0,0,1,__xcodeml_template_type_0_1>{public:typedef typename tuple_element<expression,__xcodeml_template_type_0_1>::type(*type);
                                                                                         ^               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:10786:255: error: C++ requires a type specifier for all declarations
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __mu_return_impl<__xcodeml_template_type_0_0,0,0,1,__xcodeml_template_type_0_1>{public:typedef typename tuple_element<expression,__xcodeml_template_type_0_1>::type(*type);
                                                                                                                                                                                                                                                              ^
vec.cpp:10786:249: error: non-friend class member 'type' cannot have a qualified name
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __mu_return_impl<__xcodeml_template_type_0_0,0,0,1,__xcodeml_template_type_0_1>{public:typedef typename tuple_element<expression,__xcodeml_template_type_0_1>::type(*type);
                                                                                                                                                                                                                                                      ~~^
vec.cpp:10786:249: error: typedef declarator cannot be qualified
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __mu_return_impl<__xcodeml_template_type_0_0,0,0,1,__xcodeml_template_type_0_1>{public:typedef typename tuple_element<expression,__xcodeml_template_type_0_1>::type(*type);
                                                                                                                                                                                                                                                      ~~^
vec.cpp:10789:135: error: template argument for template type parameter must be a type
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __mu_return_impl<__xcodeml_template_type_0_0,1,0,0,__xcodeml_template_type_0_1>{public:typedef typename __xcodeml_template_type_0_0::type&type;
                                                                                                                                      ^
vec.cpp:10786:56: note: template parameter is declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __mu_return_impl<__xcodeml_template_type_0_0,0,0,1,__xcodeml_template_type_0_1>{public:typedef typename tuple_element<expression,__xcodeml_template_type_0_1>::type(*type);
                                                       ^
vec.cpp:10792:135: error: template argument for template type parameter must be a type
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __mu_return_impl<__xcodeml_template_type_0_0,0,0,0,__xcodeml_template_type_0_1>{public:typedef __xcodeml_template_type_0_0&type;
                                                                                                                                      ^
vec.cpp:10786:56: note: template parameter is declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __mu_return_impl<__xcodeml_template_type_0_0,0,0,1,__xcodeml_template_type_0_1>{public:typedef typename tuple_element<expression,__xcodeml_template_type_0_1>::type(*type);
                                                       ^
vec.cpp:10802:184: error: expected expression
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __is_valid_bind_return<__xcodeml_template_type_0_0,tuple<...>,__xcodeml_template_type_0_2>{public:static bool const value=__invokable_r<void,__xcodeml_template_type_0_0,...>::value;
                                                                                                                                                                                       ^
vec.cpp:10802:188: error: expected a type
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __is_valid_bind_return<__xcodeml_template_type_0_0,tuple<...>,__xcodeml_template_type_0_2>{public:static bool const value=__invokable_r<void,__xcodeml_template_type_0_0,...>::value;
                                                                                                                                                                                           ^
vec.cpp:10805:184: error: expected expression
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __is_valid_bind_return<__xcodeml_template_type_0_0,tuple<...>,__xcodeml_template_type_0_2>{public:static bool const value=__invokable_r<void,__xcodeml_template_type_0_0,...>::value;
                                                                                                                                                                                       ^
vec.cpp:10805:188: error: expected a type
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __is_valid_bind_return<__xcodeml_template_type_0_0,tuple<...>,__xcodeml_template_type_0_2>{public:static bool const value=__invokable_r<void,__xcodeml_template_type_0_0,...>::value;
                                                                                                                                                                                           ^
vec.cpp:10810:175: error: expected expression
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __bind_return<__xcodeml_template_type_0_0,tuple<...>,__xcodeml_template_type_0_2,1>{public:typedef typename __invoke_of<__xcodeml_template_type_0_0&,...>::type type;
                                                                                                                                                                              ^
vec.cpp:10810:179: error: expected a type
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __bind_return<__xcodeml_template_type_0_0,tuple<...>,__xcodeml_template_type_0_2,1>{public:typedef typename __invoke_of<__xcodeml_template_type_0_0&,...>::type type;
                                                                                                                                                                                  ^
vec.cpp:10813:175: error: expected expression
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __bind_return<__xcodeml_template_type_0_0,tuple<...>,__xcodeml_template_type_0_2,1>{public:typedef typename __invoke_of<__xcodeml_template_type_0_0&,...>::type type;
                                                                                                                                                                              ^
vec.cpp:10813:179: error: expected a type
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __bind_return<__xcodeml_template_type_0_0,tuple<...>,__xcodeml_template_type_0_2,1>{public:typedef typename __invoke_of<__xcodeml_template_type_0_0&,...>::type type;
                                                                                                                                                                                  ^
vec.cpp:10816:261: error: definition or redeclaration of 'type' cannot name the global scope
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,unsigned long _Indx,typename __xcodeml_template_type_0_3>typename __bind_return<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1,__xcodeml_template_type_0_3,expression>::type __apply_functor(__xcodeml_template_type_0_0&__f,__xcodeml_template_type_0_1&__bound_args,__tuple_indices<...>,__xcodeml_template_type_0_3(*__args)){return(std::__1::(__f,(std::__1::((std::__1::_Indx(__bound_args)),__args))));
                                                                                                                                                                                                                                                                  ~~^
vec.cpp:10816:265: error: expected ';' at end of declaration
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,unsigned long _Indx,typename __xcodeml_template_type_0_3>typename __bind_return<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1,__xcodeml_template_type_0_3,expression>::type __apply_functor(__xcodeml_template_type_0_0&__f,__xcodeml_template_type_0_1&__bound_args,__tuple_indices<...>,__xcodeml_template_type_0_3(*__args)){return(std::__1::(__f,(std::__1::((std::__1::_Indx(__bound_args)),__args))));
                                                                                                                                                                                                                                                                        ^
                                                                                                                                                                                                                                                                        ;
vec.cpp:10816:266: error: C++ requires a type specifier for all declarations
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,unsigned long _Indx,typename __xcodeml_template_type_0_3>typename __bind_return<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1,__xcodeml_template_type_0_3,expression>::type __apply_functor(__xcodeml_template_type_0_0&__f,__xcodeml_template_type_0_1&__bound_args,__tuple_indices<...>,__xcodeml_template_type_0_3(*__args)){return(std::__1::(__f,(std::__1::((std::__1::_Indx(__bound_args)),__args))));
                                                                                                                                                                                                                                                                         ^
vec.cpp:10816:310: error: use of undeclared identifier '__f'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,unsigned long _Indx,typename __xcodeml_template_type_0_3>typename __bind_return<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1,__xcodeml_template_type_0_3,expression>::type __apply_functor(__xcodeml_template_type_0_0&__f,__xcodeml_template_type_0_1&__bound_args,__tuple_indices<...>,__xcodeml_template_type_0_3(*__args)){return(std::__1::(__f,(std::__1::((std::__1::_Indx(__bound_args)),__args))));
                                                                                                                                                                                                                                                                                                                     ^
vec.cpp:10816:314: error: use of undeclared identifier '__xcodeml_template_type_0_1'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,unsigned long _Indx,typename __xcodeml_template_type_0_3>typename __bind_return<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1,__xcodeml_template_type_0_3,expression>::type __apply_functor(__xcodeml_template_type_0_0&__f,__xcodeml_template_type_0_1&__bound_args,__tuple_indices<...>,__xcodeml_template_type_0_3(*__args)){return(std::__1::(__f,(std::__1::((std::__1::_Indx(__bound_args)),__args))));
                                                                                                                                                                                                                                                                                                                         ^
vec.cpp:10816:342: error: use of undeclared identifier '__bound_args'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,unsigned long _Indx,typename __xcodeml_template_type_0_3>typename __bind_return<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1,__xcodeml_template_type_0_3,expression>::type __apply_functor(__xcodeml_template_type_0_0&__f,__xcodeml_template_type_0_1&__bound_args,__tuple_indices<...>,__xcodeml_template_type_0_3(*__args)){return(std::__1::(__f,(std::__1::((std::__1::_Indx(__bound_args)),__args))));
                                                                                                                                                                                                                                                                                                                                                     ^
vec.cpp:10816:371: error: expected expression
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,unsigned long _Indx,typename __xcodeml_template_type_0_3>typename __bind_return<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1,__xcodeml_template_type_0_3,expression>::type __apply_functor(__xcodeml_template_type_0_0&__f,__xcodeml_template_type_0_1&__bound_args,__tuple_indices<...>,__xcodeml_template_type_0_3(*__args)){return(std::__1::(__f,(std::__1::((std::__1::_Indx(__bound_args)),__args))));
                                                                                                                                                                                                                                                                                                                                                                                  ^
vec.cpp:10816:405: error: use of undeclared identifier '__args'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,unsigned long _Indx,typename __xcodeml_template_type_0_3>typename __bind_return<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1,__xcodeml_template_type_0_3,expression>::type __apply_functor(__xcodeml_template_type_0_0&__f,__xcodeml_template_type_0_1&__bound_args,__tuple_indices<...>,__xcodeml_template_type_0_3(*__args)){return(std::__1::(__f,(std::__1::((std::__1::_Indx(__bound_args)),__args))));
                                                                                                                                                                                                                                                                                                                                                                                                                    ^
vec.cpp:10816:413: error: expected ';' after top level declarator
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,unsigned long _Indx,typename __xcodeml_template_type_0_3>typename __bind_return<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1,__xcodeml_template_type_0_3,expression>::type __apply_functor(__xcodeml_template_type_0_0&__f,__xcodeml_template_type_0_1&__bound_args,__tuple_indices<...>,__xcodeml_template_type_0_3(*__args)){return(std::__1::(__f,(std::__1::((std::__1::_Indx(__bound_args)),__args))));
                                                                                                                                                                                                                                                                                                                                                                                                                            ^
                                                                                                                                                                                                                                                                                                                                                                                                                            ;
vec.cpp:10834:146: error: expected expression
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __is_bind_expression<__bind<__xcodeml_template_type_0_0,...> >:public integral_constant<bool,1>{}
                                                                                                                                                 ^
vec.cpp:10834:146: error: expected expression
vec.cpp:10834:151: error: expected a type
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __is_bind_expression<__bind<__xcodeml_template_type_0_0,...> >:public integral_constant<bool,1>{}
                                                                                                                                                      ^
vec.cpp:10836:178: error: expected expression
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __bind_r:public __bind<__xcodeml_template_type_0_1,...>{private:typedef __bind<__xcodeml_template_type_0_1,...>;
                                                                                                                                                                                 ^
vec.cpp:10836:234: error: expected expression
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __bind_r:public __bind<__xcodeml_template_type_0_1,...>{private:typedef __bind<__xcodeml_template_type_0_1,...>;
                                                                                                                                                                                                                                         ^
vec.cpp:10837:61: error: expected expression
private:typedef typename __bind<__xcodeml_template_type_0_1,...>::_Fd _Fd;
                                                            ^
vec.cpp:10837:67: error: non-friend class member '_Fd' cannot have a qualified name
private:typedef typename __bind<__xcodeml_template_type_0_1,...>::_Fd _Fd;
                                                                ~~^
vec.cpp:10837:67: error: typedef declarator cannot be qualified
private:typedef typename __bind<__xcodeml_template_type_0_1,...>::_Fd _Fd;
                                                                ~~^
vec.cpp:10837:70: error: expected ';' at end of declaration list
private:typedef typename __bind<__xcodeml_template_type_0_1,...>::_Fd _Fd;
                                                                     ^
                                                                     ;
vec.cpp:10838:61: error: expected expression
private:typedef typename __bind<__xcodeml_template_type_0_1,...>::_Td _Td;
                                                            ^
vec.cpp:10838:67: error: non-friend class member '_Td' cannot have a qualified name
private:typedef typename __bind<__xcodeml_template_type_0_1,...>::_Td _Td;
                                                                ~~^
vec.cpp:10838:67: error: typedef declarator cannot be qualified
private:typedef typename __bind<__xcodeml_template_type_0_1,...>::_Td _Td;
                                                                ~~^
vec.cpp:10838:70: error: expected ';' at end of declaration list
private:typedef typename __bind<__xcodeml_template_type_0_1,...>::_Td _Td;
                                                                     ^
                                                                     ;
vec.cpp:10841:136: error: 'void' must be the first and only parameter if specified
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1,typename __xcodeml_template_type_1_2>__bind_r(__xcodeml_template_type_1_0(*__f),void/*__bound_args*/):((std::__1::__xcodeml_template_type_1_0(__f))(std::__1::__xcodeml_template_type_1_1(__bound_args))){}
                                                                                                                                       ^
vec.cpp:10842:114: error: member 'type' declared as a template
public:template<typename __xcodeml_template_type_1_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type operator()(void/*__args*/){typedef __invoke_void_return_wrapper<__xcodeml_template_type_0_0>;
       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                                            ^
vec.cpp:10842:118: error: expected ';' at end of declaration list
public:template<typename __xcodeml_template_type_1_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type operator()(void/*__args*/){typedef __invoke_void_return_wrapper<__xcodeml_template_type_0_0>;
                                                                                                                     ^
                                                                                                                     ;
vec.cpp:10841:193: error: expected class member or base class name
public:template<typename __xcodeml_template_type_1_0,typename __xcodeml_template_type_1_1,typename __xcodeml_template_type_1_2>__bind_r(__xcodeml_template_type_1_0(*__f),void/*__bound_args*/):((std::__1::__xcodeml_template_type_1_0(__f))(std::__1::__xcodeml_template_type_1_1(__bound_args))){}
                                                                                                                                                                                                ^
vec.cpp:10851:213: error: expected expression
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __is_bind_expression<__bind_r<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1,...> >:public integral_constant<bool,1>{}
                                                                                                                                                                                                                    ^
vec.cpp:10851:213: error: expected expression
vec.cpp:10851:218: error: expected a type
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>class __is_bind_expression<__bind_r<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1,...> >:public integral_constant<bool,1>{}
                                                                                                                                                                                                                         ^
vec.cpp:10853:119: error: expected expression
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>__bind<__xcodeml_template_type_0_0,...>{typedef __bind<__xcodeml_template_type_0_0,...>;
                                                                                                                      ^
vec.cpp:10853:123: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>__bind<__xcodeml_template_type_0_0,...>{typedef __bind<__xcodeml_template_type_0_0,...>;
                                                                                                                          ^
vec.cpp:10935:2: error: expected ';' after class
}
 ^
 ;
vec.cpp:10936:17: error: template '__less' cannot be referenced with a class specifier
template<>class __less template<>class __less template<>class __less template<>class __less template<>class __less template<>class __less template<>class __less template<>class __less template<>class __less template<>class __less template<>class __less template<>class __less template<>class __less template<>class __less;
                ^
vec.cpp:10923:90: note: declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __less{public:bool operator()(__xcodeml_template_type_0_0 const&__x,__xcodeml_template_type_0_0 const&__y)const{return(__x,__y);
                                                                                         ^
vec.cpp:10936:24: error: expected unqualified-id
template<>class __less template<>class __less template<>class __less template<>class __less template<>class __less template<>class __less template<>class __less template<>class __less template<>class __less template<>class __less template<>class __less template<>class __less template<>class __less template<>class __less;
                       ^
vec.cpp:10961:107: error: definition or redeclaration of 'type' cannot name the global scope
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type __half_positive(__xcodeml_template_type_0_0 __value){return static_cast<__xcodeml_template_type_0_0>((static_cast<typename make_unsigned<__xcodeml_template_type_0_0>::type>(__value)/2));
                                                                                                        ~~^
vec.cpp:10961:111: error: expected ';' at end of declaration
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type __half_positive(__xcodeml_template_type_0_0 __value){return static_cast<__xcodeml_template_type_0_0>((static_cast<typename make_unsigned<__xcodeml_template_type_0_0>::type>(__value)/2));
                                                                                                              ^
                                                                                                              ;
vec.cpp:10961:128: error: unknown type name '__xcodeml_template_type_0_0'
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type __half_positive(__xcodeml_template_type_0_0 __value){return static_cast<__xcodeml_template_type_0_0>((static_cast<typename make_unsigned<__xcodeml_template_type_0_0>::type>(__value)/2));
                                                                                                                               ^
vec.cpp:10961:112: error: C++ requires a type specifier for all declarations
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type __half_positive(__xcodeml_template_type_0_0 __value){return static_cast<__xcodeml_template_type_0_0>((static_cast<typename make_unsigned<__xcodeml_template_type_0_0>::type>(__value)/2));
                                                                                                               ^
vec.cpp:10961:184: error: unknown type name '__xcodeml_template_type_0_0'
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type __half_positive(__xcodeml_template_type_0_0 __value){return static_cast<__xcodeml_template_type_0_0>((static_cast<typename make_unsigned<__xcodeml_template_type_0_0>::type>(__value)/2));
                                                                                                                                                                                       ^
vec.cpp:10961:279: error: expected '>'
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type __half_positive(__xcodeml_template_type_0_0 __value){return static_cast<__xcodeml_template_type_0_0>((static_cast<typename make_unsigned<__xcodeml_template_type_0_0>::type>(__value)/2));
                                                                                                                                                                                                                                                                                      ^
                                                                                                                                                                                                                                                                                      >
vec.cpp:10961:225: note: to match this '<'
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type __half_positive(__xcodeml_template_type_0_0 __value){return static_cast<__xcodeml_template_type_0_0>((static_cast<typename make_unsigned<__xcodeml_template_type_0_0>::type>(__value)/2));
                                                                                                                                                                                                                                ^
vec.cpp:10963:107: error: definition or redeclaration of 'type' cannot name the global scope
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type __half_positive(__xcodeml_template_type_0_0 __value){return(__value/2);
                                                                                                        ~~^
vec.cpp:10963:111: error: expected ';' at end of declaration
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type __half_positive(__xcodeml_template_type_0_0 __value){return(__value/2);
                                                                                                              ^
                                                                                                              ;
vec.cpp:10963:128: error: unknown type name '__xcodeml_template_type_0_0'
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type __half_positive(__xcodeml_template_type_0_0 __value){return(__value/2);
                                                                                                                               ^
vec.cpp:10963:112: error: C++ requires a type specifier for all declarations
template<typename __xcodeml_template_type_0_0>typename enable_if<expression,__xcodeml_template_type_0_0>::type __half_positive(__xcodeml_template_type_0_0 __value){return(__value/2);
                                                                                                               ^
vec.cpp:11044:357: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>__xcodeml_template_type_0_0 find_end(__xcodeml_template_type_0_0 __first1,__xcodeml_template_type_0_0 __last1,__xcodeml_template_type_0_1 __first2,__xcodeml_template_type_0_1 __last2,__xcodeml_template_type_0_2 __pred){return(std::__1::typename add_lvalue_reference<__xcodeml_template_type_0_2>::type(__first1,__last1,__first2,__last2,__pred,__xcodeml_identity<typename iterator_traits<__xcodeml_template_type_0_0>::iterator_category>::t(),__xcodeml_identity<typename iterator_traits<__xcodeml_template_type_0_1>::iterator_category>::t()));
                                                                                                                                                                                                                                                                                                                                                                    ^
vec.cpp:11048:18: error: expected unqualified-id
return(std::__1::(__first1,__last1,__first2,__last2,__xcodeml_identity<__equal_to<typename iterator_traits<__xcodeml_template_type_0_0>::value_type,typename iterator_traits<__xcodeml_template_type_0_1>::value_type> >::t()));
                 ^
vec.cpp:11053:362: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>__xcodeml_template_type_0_0 find_first_of(__xcodeml_template_type_0_0 __first1,__xcodeml_template_type_0_0 __last1,__xcodeml_template_type_0_1 __first2,__xcodeml_template_type_0_1 __last2,__xcodeml_template_type_0_2 __pred){return(std::__1::(__first1,__last1,__first2,__last2,__pred));
                                                                                                                                                                                                                                                                                                                                                                         ^
vec.cpp:11057:18: error: expected unqualified-id
return(std::__1::(__first1,__last1,__first2,__last2,__xcodeml_identity<__equal_to<typename iterator_traits<__xcodeml_template_type_0_0>::value_type,typename iterator_traits<__xcodeml_template_type_0_1>::value_type> >::t()));
                 ^
vec.cpp:11067:18: error: expected unqualified-id
return(std::__1::(__first,__last,__xcodeml_identity<__equal_to<typename iterator_traits<__xcodeml_template_type_0_0>::value_type,typename iterator_traits<__xcodeml_template_type_0_0>::value_type> >::t()));
                 ^
vec.cpp:11077:182: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>pair<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>{{;for(;(__first1,__last1);((++__first1),((void)(++__first2)))){if((!(__pred((*__first1),(*__first2))))){break;};}};
                                                                                                                                                                                     ^
vec.cpp:11575:129: error: non-friend class member 'type' cannot have a qualified name
private:typedef typename conditional<expression,__xcodeml_template_type_0_1,typename __xcodeml_template_type_0_0::result_type>::type _Working_result_type;
                                                                                                                              ~~^
vec.cpp:11575:129: error: typedef declarator cannot be qualified
private:typedef typename conditional<expression,__xcodeml_template_type_0_1,typename __xcodeml_template_type_0_0::result_type>::type _Working_result_type;
                                                                                                                              ~~^
vec.cpp:11575:133: error: expected ';' at end of declaration list
private:typedef typename conditional<expression,__xcodeml_template_type_0_1,typename __xcodeml_template_type_0_0::result_type>::type _Working_result_type;
                                                                                                                                    ^
                                                                                                                                    ;
vec.cpp:11581:121: error: non-friend class member 'type' cannot have a qualified name
private:typename conditional<expression,__xcodeml_template_type_0_1,typename __xcodeml_template_type_0_0::result_type>::type __y0_;
                                                                                                                      ~~^
vec.cpp:11581:121: error: duplicate member 'type'
vec.cpp:11575:129: note: previous declaration is here
private:typedef typename conditional<expression,__xcodeml_template_type_0_1,typename __xcodeml_template_type_0_0::result_type>::type _Working_result_type;
                                                                                                                                ^
vec.cpp:11581:125: error: expected ';' at end of declaration list
private:typename conditional<expression,__xcodeml_template_type_0_1,typename __xcodeml_template_type_0_0::result_type>::type __y0_;
                                                                                                                            ^
                                                                                                                            ;
vec.cpp:11582:121: error: non-friend class member 'type' cannot have a qualified name
private:typename conditional<expression,__xcodeml_template_type_0_1,typename __xcodeml_template_type_0_0::result_type>::type __y1_;
                                                                                                                      ~~^
vec.cpp:11582:121: error: duplicate member 'type'
vec.cpp:11575:129: note: previous declaration is here
private:typedef typename conditional<expression,__xcodeml_template_type_0_1,typename __xcodeml_template_type_0_0::result_type>::type _Working_result_type;
                                                                                                                                ^
vec.cpp:11582:125: error: expected ';' at end of declaration list
private:typename conditional<expression,__xcodeml_template_type_0_1,typename __xcodeml_template_type_0_0::result_type>::type __y1_;
                                                                                                                            ^
                                                                                                                            ;
vec.cpp:11585:138: error: non-friend class member 'type' cannot have a qualified name
private:constexpr static typename conditional<expression,__xcodeml_template_type_0_1,typename __xcodeml_template_type_0_0::result_type>::type const _Rp=(((__xcodeml_template_type_0_0::max()),(__xcodeml_template_type_0_0::min())),__xcodeml_identity<typename conditional<expression,__xcodeml_template_type_0_1,typename __xcodeml_template_type_0_0::result_type>::type>::t(1));
                                                                                                                                       ~~^
vec.cpp:11585:142: error: expected ';' at end of declaration list
private:constexpr static typename conditional<expression,__xcodeml_template_type_0_1,typename __xcodeml_template_type_0_0::result_type>::type const _Rp=(((__xcodeml_template_type_0_0::max()),(__xcodeml_template_type_0_0::min())),__xcodeml_identity<typename conditional<expression,__xcodeml_template_type_0_1,typename __xcodeml_template_type_0_0::result_type>::type>::t(1));
                                                                                                                                             ^
                                                                                                                                             ;
vec.cpp:11586:169: error: no type named 'type' in the global namespace
private:constexpr static unsigned long const __m=__log2<typename conditional<expression,__xcodeml_template_type_0_1,typename __xcodeml_template_type_0_0::result_type>::type,expression>::value;
                                                                                                                                                                      ~~^
vec.cpp:11587:178: error: no type named 'type' in the global namespace
private:constexpr static unsigned long const _WDt=numeric_limits<typename conditional<expression,__xcodeml_template_type_0_1,typename __xcodeml_template_type_0_0::result_type>::type>::digits;
                                                                                                                                                                               ~~^
vec.cpp:11591:111: error: expected a type
public:__xcodeml_template_type_0_1 operator()(){return((__xcodeml_identity<integral_constant<bool,expression> >::t()));
                                                                                                              ^
vec.cpp:11591:114: error: no type named 't' in the global namespace
public:__xcodeml_template_type_0_1 operator()(){return((__xcodeml_identity<integral_constant<bool,expression> >::t()));
                                                                                                               ~~^
vec.cpp:11599:1: error: '__independent_bits_engine' is not a class, namespace, or enumeration
__independent_bits_engine::__independent_bits_engine(__xcodeml_template_type_0_0&__e,unsigned long __w):__e_(__e),__w_(__w){(this->__n_=((this->__w_/__m),((this->__w_%__m),0)));
^
vec.cpp:11571:90: note: '__independent_bits_engine' declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __independent_bits_engine{public:
                                                                                         ^
vec.cpp:11611:1: error: unknown type name '__xcodeml_template_type_0_1'
__xcodeml_template_type_0_1 __independent_bits_engine::__eval(class::std::__1::integral_constant<bool,0>){return static_cast<__xcodeml_template_type_0_1>(((this->__e_())&this->__mask0_));
^
vec.cpp:11611:29: error: '__independent_bits_engine' is not a class, namespace, or enumeration
__xcodeml_template_type_0_1 __independent_bits_engine::__eval(class::std::__1::integral_constant<bool,0>){return static_cast<__xcodeml_template_type_0_1>(((this->__e_())&this->__mask0_));
                            ^
vec.cpp:11571:90: note: '__independent_bits_engine' declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __independent_bits_engine{public:
                                                                                         ^
vec.cpp:11613:1: error: unknown type name '__xcodeml_template_type_0_1'
__xcodeml_template_type_0_1 __independent_bits_engine::__eval(class::std::__1::integral_constant<bool,1>){unsigned long const _WRt=numeric_limits<__xcodeml_template_type_0_1>::.digits;
^
vec.cpp:11613:29: error: '__independent_bits_engine' is not a class, namespace, or enumeration
__xcodeml_template_type_0_1 __independent_bits_engine::__eval(class::std::__1::integral_constant<bool,1>){unsigned long const _WRt=numeric_limits<__xcodeml_template_type_0_1>::.digits;
                            ^
vec.cpp:11571:90: note: '__independent_bits_engine' declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __independent_bits_engine{public:
                                                                                         ^
vec.cpp:11647:26: error: 'uniform_int_distribution' is not a class, namespace, or enumeration
private:class::std::__1::uniform_int_distribution::param_type __p_;
                         ^
vec.cpp:11629:53: note: 'uniform_int_distribution' declared here
template<typename __xcodeml_template_type_0_0>class uniform_int_distribution{public:
                                                    ^
vec.cpp:11654:152: error: expected ';' at end of declaration list
public:template<typename __xcodeml_template_type_1_0>__xcodeml_template_type_0_0 operator()(__xcodeml_template_type_1_0&__g,class param_type const&__p)
                                                                                                                                                       ^
                                                                                                                                                       ;
vec.cpp:11649:139: error: 'uniform_int_distribution' is not a class, namespace, or enumeration
public:uniform_int_distribution(__xcodeml_template_type_0_0 __a,__xcodeml_template_type_0_0 __b):__p_(__xcodeml_identity<class::std::__1::uniform_int_distribution::param_type>::t(__a,__b)){}
                                                                                                                                          ^
vec.cpp:11629:53: note: 'uniform_int_distribution' declared here
template<typename __xcodeml_template_type_0_0>class uniform_int_distribution{public:
                                                    ^
vec.cpp:11692:102: error: expected ';' at end of declaration list
public:template<typename __xcodeml_template_type_0_0>long operator()(__xcodeml_template_type_0_0&__g)
                                                                                                     ^
                                                                                                     ;
vec.cpp:11705:47: error: unknown type name '__xcodeml_template_type_0_0'
template<typename __xcodeml_template_type_1_0>__xcodeml_template_type_0_0 uniform_int_distribution::operator()(__xcodeml_template_type_1_0&__g,class param_type const&__p){typedef typename conditional<expression,unsigned int,unsigned long>::type _UIntType;
                                              ^
vec.cpp:11705:75: error: 'uniform_int_distribution' is not a class, namespace, or enumeration
template<typename __xcodeml_template_type_1_0>__xcodeml_template_type_0_0 uniform_int_distribution::operator()(__xcodeml_template_type_1_0&__g,class param_type const&__p){typedef typename conditional<expression,unsigned int,unsigned long>::type _UIntType;
                                                                          ^
vec.cpp:11629:53: note: 'uniform_int_distribution' declared here
template<typename __xcodeml_template_type_0_0>class uniform_int_distribution{public:
                                                    ^
vec.cpp:11720:18: error: no class named '__rs_default' in namespace 'std::__1'
class::std::__1::__rs_default __rs_get();
     ~~~~~~~~~~~~^
vec.cpp:11742:70: error: 'numeric_limits' is not a class, namespace, or enumeration
if((__d,1)){{class::std::__1::uniform_int_distribution<long>__uid(0,(numeric_limits::max()));
                                                                     ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:11744:166: error: no matching member function for call to 'operator()'
{((--__last),((void)(--__d)));for(;(__first,__last);((++__first),((void)(--__d)))){{typename iterator_traits<__xcodeml_template_type_0_0>::difference_type __i=__uid.operator()(__g,__xcodeml_identity<class::std::__1::uniform_int_distribution<long>::param_type>::t(0,__d));
                                                                                                                                                               ~~~~~~^~~~~~~~~~
vec.cpp:11692:59: note: candidate function template not viable: requires single argument '__g', but 2 arguments were provided
public:template<typename __xcodeml_template_type_0_0>long operator()(__xcodeml_template_type_0_0&__g)
                                                          ^
vec.cpp:11762:33: error: expected unqualified-id
return(__output_iter,(std::__1::(__n,__k)));
                                ^
vec.cpp:11764:465: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3>__xcodeml_template_type_0_1 __sample(__xcodeml_template_type_0_0 __first,__xcodeml_template_type_0_0 __last,__xcodeml_template_type_0_1 __output_iter,__xcodeml_template_type_0_2 __n,__xcodeml_template_type_0_3&__g,class::std::__1::forward_iterator_tag){__xcodeml_template_type_0_2 __unsampled_sz=(std::__1::(__first,__last));
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                ^
vec.cpp:11765:18: error: expected unqualified-id
{(__n=(std::__1::(__n,__unsampled_sz)));for(;(__n,0);(++__first)){{__xcodeml_template_type_0_2 __r=(__xcodeml_identity<uniform_int_distribution<__xcodeml_template_type_0_2> >::t(0,(--__unsampled_sz))(__g));
                 ^
vec.cpp:11774:125: error: expected ';' after expression
(__is_forward_iterator<__xcodeml_template_type_0_0>::value||__is_random_access_iterator<__xcodeml_template_type_0_1>::value)"SampleIterator must meet the requirements of RandomAccessIterator";
                                                                                                                            ^
                                                                                                                            ;
vec.cpp:11774:125: warning: expression result unused [-Wunused-value]
(__is_forward_iterator<__xcodeml_template_type_0_0>::value||__is_random_access_iterator<__xcodeml_template_type_0_1>::value)"SampleIterator must meet the requirements of RandomAccessIterator";
                                                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:11775:30: error: expected expression
typedef typename common_type<...>::type _CommonType;
                             ^
vec.cpp:11775:36: error: definition or redeclaration of 'type' cannot name the global scope
typedef typename common_type<...>::type _CommonType;
                                 ~~^
vec.cpp:11775:36: error: typedef declarator cannot be qualified
typedef typename common_type<...>::type _CommonType;
                                 ~~^
vec.cpp:11775:40: error: expected ';' at end of declaration
typedef typename common_type<...>::type _CommonType;
                                       ^
                                       ;
vec.cpp:11777:18: error: expected unqualified-id
return(std::__1::(__first,__last,__output_iter,__xcodeml_identity<typename common_type<...>::type>::t(__n),__g,__xcodeml_identity<typename iterator_traits<__xcodeml_template_type_0_0>::iterator_category>::t()));
                 ^
vec.cpp:11777:88: error: expected expression
return(std::__1::(__first,__last,__output_iter,__xcodeml_identity<typename common_type<...>::type>::t(__n),__g,__xcodeml_identity<typename iterator_traits<__xcodeml_template_type_0_0>::iterator_category>::t()));
                                                                                       ^
vec.cpp:11777:94: error: no type named 'type' in the global namespace
return(std::__1::(__first,__last,__output_iter,__xcodeml_identity<typename common_type<...>::type>::t(__n),__g,__xcodeml_identity<typename iterator_traits<__xcodeml_template_type_0_0>::iterator_category>::t()));
                                                                                           ~~^
vec.cpp:11783:70: error: 'numeric_limits' is not a class, namespace, or enumeration
if((__d,1)){{class::std::__1::uniform_int_distribution<long>__uid(0,(numeric_limits::max()));
                                                                     ^
vec.cpp:3606:53: note: 'numeric_limits' declared here
template<typename __xcodeml_template_type_0_0>class numeric_limits:private __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>{private:typedef __libcpp_numeric_limits<typename remove_cv<__xcodeml_template_type_0_0>::type,expression>;
                                                    ^
vec.cpp:11815:246: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>__xcodeml_template_type_0_0 partition(__xcodeml_template_type_0_0 __first,__xcodeml_template_type_0_0 __last,__xcodeml_template_type_0_1 __pred){return(std::__1::typename add_lvalue_reference<__xcodeml_template_type_0_1>::type(__first,__last,__pred,__xcodeml_identity<typename iterator_traits<__xcodeml_template_type_0_0>::iterator_category>::t()));
                                                                                                                                                                                                                                                     ^
vec.cpp:11817:219: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3>pair<__xcodeml_template_type_0_1,__xcodeml_template_type_0_2>{{;for(;(__first,__last);(++__first)){{if((__pred((*__first)))){{((*__out_true)=(*__first));
                                                                                                                                                                                                                          ^
vec.cpp:11887:89: error: expected unqualified-id
typename iterator_traits<__xcodeml_template_type_0_1>::difference_type __len=(std::__1::(__first,__last));
                                                                                        ^
vec.cpp:11888:81: error: expected unqualified-id
pair<typename iterator_traits<__xcodeml_template_type_0_1>::value_type(*),long> =0 0;
                                                                                ^
vec.cpp:11889:95: error: no class named '__return_temporary_buffer' in namespace 'std::__1'
unique_ptr<typename iterator_traits<__xcodeml_template_type_0_1>::value_type,class::std::__1::__return_temporary_buffer>;
                                                                                  ~~~~~~~~~~~~^
vec.cpp:11890:29: error: use of undeclared identifier '__p'
if((__len,__alloc_limit)){{(__p=(std::__1::typename iterator_traits<__xcodeml_template_type_0_1>::value_type(__len)));
                            ^
vec.cpp:11890:44: error: expected unqualified-id
if((__len,__alloc_limit)){{(__p=(std::__1::typename iterator_traits<__xcodeml_template_type_0_1>::value_type(__len)));
                                           ^
vec.cpp:11891:2: error: use of undeclared identifier '__h'
(__h.reset(__p.first));
 ^
vec.cpp:11891:12: error: use of undeclared identifier '__p'
(__h.reset(__p.first));
           ^
vec.cpp:11893:101: error: use of undeclared identifier '__p'
return(typename add_lvalue_reference<__xcodeml_template_type_0_0>::type(__first,__last,__pred,__len,__p,__xcodeml_identity<class::std::__1::forward_iterator_tag>::t()));
                                                                                                    ^
vec.cpp:11909:110: error: expected unqualified-id
unique_ptr<typename iterator_traits<__xcodeml_template_type_0_1>::value_type,class::std::__1::__destruct_n&> =__p.first __d;
                                                                                                             ^
vec.cpp:11911:11: error: missing 'typename' prior to dependent type name '__xcodeml_identity<typename iterator_traits<__xcodeml_template_type_0_1>::value_type>::t'
::new(__t)__xcodeml_identity<typename iterator_traits<__xcodeml_template_type_0_1>::value_type>::t((std::__1::((*__first))));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
          typename 
vec.cpp:11911:111: error: expected unqualified-id
::new(__t)__xcodeml_identity<typename iterator_traits<__xcodeml_template_type_0_1>::value_type>::t((std::__1::((*__first))));
                                                                                                              ^
vec.cpp:11915:71: error: expected unqualified-id
while(((++__i),__last)){{if((__pred((*__i)))){{((*__first)=(std::__1::((*__i))));
                                                                      ^
vec.cpp:11917:20: error: missing 'typename' prior to dependent type name '__xcodeml_identity<typename iterator_traits<__xcodeml_template_type_0_1>::value_type>::t'
};}else{{::new(__t)__xcodeml_identity<typename iterator_traits<__xcodeml_template_type_0_1>::value_type>::t((std::__1::((*__i))));
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                   typename 
vec.cpp:11917:120: error: expected unqualified-id
};}else{{::new(__t)__xcodeml_identity<typename iterator_traits<__xcodeml_template_type_0_1>::value_type>::t((std::__1::((*__i))));
                                                                                                                       ^
vec.cpp:11922:24: error: expected unqualified-id
((*__first)=(std::__1::((*__i))));
                       ^
vec.cpp:11924:140: error: expected unqualified-id
{typename iterator_traits<__xcodeml_template_type_0_1>::value_type(*__t2)=__p.first;for(;(__t2,__t);((++__t2),(++__i))){((*__i)=(std::__1::((*__t2))));}};
                                                                                                                                           ^
vec.cpp:11929:12: error: expected unqualified-id
(std::__1::(__m,__len2));
           ^
vec.cpp:11946:37: error: expected unqualified-id
__second_half_done:return(std::__1::(__first_false,__m,__second_false));
                                    ^
vec.cpp:11957:90: error: expected unqualified-id
typename iterator_traits<__xcodeml_template_type_0_1>::difference_type __len=((std::__1::(__first,__last)),1);
                                                                                         ^
vec.cpp:11958:81: error: expected unqualified-id
pair<typename iterator_traits<__xcodeml_template_type_0_1>::value_type(*),long> =0 0;
                                                                                ^
vec.cpp:11959:95: error: no class named '__return_temporary_buffer' in namespace 'std::__1'
unique_ptr<typename iterator_traits<__xcodeml_template_type_0_1>::value_type,class::std::__1::__return_temporary_buffer>;
                                                                                  ~~~~~~~~~~~~^
vec.cpp:11960:29: error: use of undeclared identifier '__p'
if((__len,__alloc_limit)){{(__p=(std::__1::typename iterator_traits<__xcodeml_template_type_0_1>::value_type(__len)));
                            ^
vec.cpp:11960:44: error: expected unqualified-id
if((__len,__alloc_limit)){{(__p=(std::__1::typename iterator_traits<__xcodeml_template_type_0_1>::value_type(__len)));
                                           ^
vec.cpp:11961:2: error: use of undeclared identifier '__h'
(__h.reset(__p.first));
 ^
vec.cpp:11961:12: error: use of undeclared identifier '__p'
(__h.reset(__p.first));
           ^
vec.cpp:11963:101: error: use of undeclared identifier '__p'
return(typename add_lvalue_reference<__xcodeml_template_type_0_0>::type(__first,__last,__pred,__len,__p,__xcodeml_identity<class::std::__1::bidirectional_iterator_tag>::t()));
                                                                                                    ^
vec.cpp:11974:180: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0 is_sorted_until(__xcodeml_template_type_0_0 __first,__xcodeml_template_type_0_0 __last){return(std::__1::(__first,__last,__xcodeml_identity<__less<typename iterator_traits<__xcodeml_template_type_0_0>::value_type,typename iterator_traits<__xcodeml_template_type_0_0>::value_type> >::t()));
                                                                                                                                                                                   ^
vec.cpp:11976:224: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool is_sorted(__xcodeml_template_type_0_0 __first,__xcodeml_template_type_0_0 __last,__xcodeml_template_type_0_1 __comp){return((std::__1::(__first,__last,__comp)),__last);
                                                                                                                                                                                                                               ^
vec.cpp:11978:151: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0>bool is_sorted(__xcodeml_template_type_0_0 __first,__xcodeml_template_type_0_0 __last){return(std::__1::(__first,__last,__xcodeml_identity<__less<typename iterator_traits<__xcodeml_template_type_0_0>::value_type,typename iterator_traits<__xcodeml_template_type_0_0>::value_type> >::t()));
                                                                                                                                                      ^
vec.cpp:12027:181: error: expected ';' at end of declaration
template <>unsigned int __sort5(long double(*__x1),long double(*__x2),long double(*__x3),long double(*__x4),long double(*__x5),class::std::__1::__less<long double,long double>&__c)
                                                                                                                                                                                    ^
                                                                                                                                                                                    ;
vec.cpp:12029:90: error: no member named '__xcodeml_template_type_0_1' in namespace 'std::__1'
{(--__lm1);for(;(__first,__lm1);(++__first)){{__xcodeml_template_type_0_1 __i=(std::__1::__xcodeml_template_type_0_1 typename add_lvalue_reference<__xcodeml_template_type_0_0>::type(__first,__last,__comp));
                                                                               ~~~~~~~~~~^
vec.cpp:12036:82: error: expected unqualified-id
typename iterator_traits<__xcodeml_template_type_0_1>::value_type __t=(std::__1::((*__j)));
                                                                                 ^
vec.cpp:12037:113: error: expected unqualified-id
{__xcodeml_template_type_0_1 __k=__i;for(;((__k,__first)&&(__comp(__t,(*(--__k)))));(--__j)){((*__j)=(std::__1::((*__k))));}};
                                                                                                                ^
vec.cpp:12038:20: error: expected unqualified-id
((*__j)=(std::__1::(__t)));
                   ^
vec.cpp:12045:180: error: expected unqualified-id
{__xcodeml_template_type_0_1 __i=(__j,1);for(;(__i,__last);(++__i)){{if((__comp((*__i),(*__j)))){{typename iterator_traits<__xcodeml_template_type_0_1>::value_type __t=(std::__1::((*__i)));
                                                                                                                                                                                   ^
vec.cpp:12048:24: error: expected unqualified-id
do{{((*__j)=(std::__1::((*__k))));
                       ^
vec.cpp:12051:20: error: expected unqualified-id
((*__j)=(std::__1::(__t)));
                   ^
vec.cpp:12059:19: error: no member named '__xcodeml_template_type_0_0' in namespace 'std::__1'
case 3:(std::__1::__xcodeml_template_type_0_0(__first,(__first,1),(--__last),__comp));
        ~~~~~~~~~~^
vec.cpp:12061:19: error: no member named '__xcodeml_template_type_0_0' in namespace 'std::__1'
case 4:(std::__1::__xcodeml_template_type_0_0(__first,(__first,1),(__first,2),(--__last),__comp));
        ~~~~~~~~~~^
vec.cpp:12063:19: error: no member named '__xcodeml_template_type_0_0' in namespace 'std::__1'
case 5:(std::__1::__xcodeml_template_type_0_0(__first,(__first,1),(__first,2),(__first,3),(--__last),__comp));
        ~~~~~~~~~~^
vec.cpp:12071:180: error: expected unqualified-id
{__xcodeml_template_type_0_1 __i=(__j,1);for(;(__i,__last);(++__i)){{if((__comp((*__i),(*__j)))){{typename iterator_traits<__xcodeml_template_type_0_1>::value_type __t=(std::__1::((*__i)));
                                                                                                                                                                                   ^
vec.cpp:12074:24: error: expected unqualified-id
do{{((*__j)=(std::__1::((*__k))));
                       ^
vec.cpp:12077:20: error: expected unqualified-id
((*__j)=(std::__1::(__t)));
                   ^
vec.cpp:12078:16: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
if(((++__count)==__limit)){return((++__i),__last);};
    ~~~~~~~~~~~^~~~~~~~~
vec.cpp:12078:16: note: remove extraneous parentheses around the comparison to silence this warning
if(((++__count)==__limit)){return((++__i),__last);};
   ~           ^        ~
vec.cpp:12078:16: note: use '=' to turn this equality comparison into an assignment
if(((++__count)==__limit)){return((++__i),__last);};
               ^~
               =
vec.cpp:12084:116: error: expected ';' at end of declaration
template <>bool __insertion_sort_incomplete(char(*__first),char(*__last),class::std::__1::__less<char,char>&__comp)
                                                                                                                   ^
                                                                                                                   ;
vec.cpp:12085:128: error: expected ';' at end of declaration
template <>bool __insertion_sort_incomplete(wchar_t(*__first),wchar_t(*__last),class::std::__1::__less<wchar_t,wchar_t>&__comp)
                                                                                                                               ^
                                                                                                                               ;
vec.cpp:12086:144: error: expected ';' at end of declaration
template <>bool __insertion_sort_incomplete(signed char(*__first),signed char(*__last),class::std::__1::__less<signed char,signed char>&__comp)
                                                                                                                                               ^
                                                                                                                                               ;
vec.cpp:12087:152: error: expected ';' at end of declaration
template <>bool __insertion_sort_incomplete(unsigned char(*__first),unsigned char(*__last),class::std::__1::__less<unsigned char,unsigned char>&__comp)
                                                                                                                                                       ^
                                                                                                                                                       ;
vec.cpp:12088:120: error: expected ';' at end of declaration
template <>bool __insertion_sort_incomplete(short(*__first),short(*__last),class::std::__1::__less<short,short>&__comp)
                                                                                                                       ^
                                                                                                                       ;
vec.cpp:12089:156: error: expected ';' at end of declaration
template <>bool __insertion_sort_incomplete(unsigned short(*__first),unsigned short(*__last),class::std::__1::__less<unsigned short,unsigned short>&__comp)
                                                                                                                                                           ^
                                                                                                                                                           ;
vec.cpp:12090:112: error: expected ';' at end of declaration
template <>bool __insertion_sort_incomplete(int(*__first),int(*__last),class::std::__1::__less<int,int>&__comp)
                                                                                                               ^
                                                                                                               ;
vec.cpp:12091:148: error: expected ';' at end of declaration
template <>bool __insertion_sort_incomplete(unsigned int(*__first),unsigned int(*__last),class::std::__1::__less<unsigned int,unsigned int>&__comp)
                                                                                                                                                   ^
                                                                                                                                                   ;
vec.cpp:12092:116: error: expected ';' at end of declaration
template <>bool __insertion_sort_incomplete(long(*__first),long(*__last),class::std::__1::__less<long,long>&__comp)
                                                                                                                   ^
                                                                                                                   ;
vec.cpp:12093:152: error: expected ';' at end of declaration
template <>bool __insertion_sort_incomplete(unsigned long(*__first),unsigned long(*__last),class::std::__1::__less<unsigned long,unsigned long>&__comp)
                                                                                                                                                       ^
                                                                                                                                                       ;
vec.cpp:12094:136: error: expected ';' at end of declaration
template <>bool __insertion_sort_incomplete(long long(*__first),long long(*__last),class::std::__1::__less<long long,long long>&__comp)
                                                                                                                                       ^
                                                                                                                                       ;
vec.cpp:12095:172: error: expected ';' at end of declaration
template <>bool __insertion_sort_incomplete(unsigned long long(*__first),unsigned long long(*__last),class::std::__1::__less<unsigned long long,unsigned long long>&__comp)
                                                                                                                                                                           ^
                                                                                                                                                                           ;
vec.cpp:12096:120: error: expected ';' at end of declaration
template <>bool __insertion_sort_incomplete(float(*__first),float(*__last),class::std::__1::__less<float,float>&__comp)
                                                                                                                       ^
                                                                                                                       ;
vec.cpp:12097:124: error: expected ';' at end of declaration
template <>bool __insertion_sort_incomplete(double(*__first),double(*__last),class::std::__1::__less<double,double>&__comp)
                                                                                                                           ^
                                                                                                                           ;
vec.cpp:12098:144: error: expected ';' at end of declaration
template <>bool __insertion_sort_incomplete(long double(*__first),long double(*__last),class::std::__1::__less<long double,long double>&__comp)
                                                                                                                                               ^
                                                                                                                                               ;
vec.cpp:12101:110: error: expected unqualified-id
unique_ptr<typename iterator_traits<__xcodeml_template_type_0_1>::value_type,class::std::__1::__destruct_n&> =__first2 __d;
                                                                                                             ^
vec.cpp:12103:15: error: missing 'typename' prior to dependent type name '__xcodeml_identity<typename iterator_traits<__xcodeml_template_type_0_1>::value_type>::t'
::new(__last2)__xcodeml_identity<typename iterator_traits<__xcodeml_template_type_0_1>::value_type>::t((std::__1::((*__first1))));
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
              typename 
vec.cpp:12103:115: error: expected unqualified-id
::new(__last2)__xcodeml_identity<typename iterator_traits<__xcodeml_template_type_0_1>::value_type>::t((std::__1::((*__first1))));
                                                                                                                  ^
vec.cpp:12107:51: error: missing 'typename' prior to dependent type name '__xcodeml_identity<typename iterator_traits<__xcodeml_template_type_0_1>::value_type>::t'
if((__comp((*__first1),(*(--__i2))))){{::new(__j2)__xcodeml_identity<typename iterator_traits<__xcodeml_template_type_0_1>::value_type>::t((std::__1::((*__i2))));
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                                  typename 
vec.cpp:12107:151: error: expected unqualified-id
if((__comp((*__first1),(*(--__i2))))){{::new(__j2)__xcodeml_identity<typename iterator_traits<__xcodeml_template_type_0_1>::value_type>::t((std::__1::((*__i2))));
                                                                                                                                                      ^
vec.cpp:12109:99: error: expected unqualified-id
{(--__j2);for(;((__i2,__first2)&&(__comp((*__first1),(*(--__i2)))));(--__j2)){((*__j2)=(std::__1::((*__i2))));}};
                                                                                                  ^
vec.cpp:12110:21: error: expected unqualified-id
((*__j2)=(std::__1::((*__first1))));
                    ^
vec.cpp:12111:21: error: missing 'typename' prior to dependent type name '__xcodeml_identity<typename iterator_traits<__xcodeml_template_type_0_1>::value_type>::t'
};}else{{::new(__j2)__xcodeml_identity<typename iterator_traits<__xcodeml_template_type_0_1>::value_type>::t((std::__1::((*__first1))));
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                    typename 
vec.cpp:12111:121: error: expected unqualified-id
};}else{{::new(__j2)__xcodeml_identity<typename iterator_traits<__xcodeml_template_type_0_1>::value_type>::t((std::__1::((*__first1))));
                                                                                                                        ^
vec.cpp:12115:2: error: use of undeclared identifier '__h'
(__h.release());
 ^
vec.cpp:12125:19: error: no member named '__xcodeml_template_type_0_0' in namespace 'std::__1'
case 3:(std::__1::__xcodeml_template_type_0_0(__first,(__first,1),(--__last),__comp));
        ~~~~~~~~~~^
vec.cpp:12127:19: error: no member named '__xcodeml_template_type_0_0' in namespace 'std::__1'
case 4:(std::__1::__xcodeml_template_type_0_0(__first,(__first,1),(__first,2),(--__last),__comp));
        ~~~~~~~~~~^
vec.cpp:12129:19: error: no member named '__xcodeml_template_type_0_0' in namespace 'std::__1'
case 5:(std::__1::__xcodeml_template_type_0_0(__first,(__first,1),(__first,2),(__first,3),(--__last),__comp));
        ~~~~~~~~~~^
vec.cpp:12132:33: error: no member named '__xcodeml_template_type_0_0' in namespace 'std::__1'
if((__len,__limit)){{(std::__1::__xcodeml_template_type_0_0(__first,__last,__comp));
                      ~~~~~~~~~~^
vec.cpp:12143:23: error: no member named '__xcodeml_template_type_0_0' in namespace 'std::__1'
(__n_swaps=(std::__1::__xcodeml_template_type_0_0(__first,(__first,__delta),__m,(__m,__delta),__lm1,__comp)));
            ~~~~~~~~~~^
vec.cpp:12146:23: error: no member named '__xcodeml_template_type_0_0' in namespace 'std::__1'
(__n_swaps=(std::__1::__xcodeml_template_type_0_0(__first,__m,__lm1,__comp)));
            ~~~~~~~~~~^
vec.cpp:12192:14: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
if((__n_swaps==0)){{bool __fs=(std::__1::__xcodeml_template_type_0_0(__first,__i,__comp));
    ~~~~~~~~~^~~
vec.cpp:12192:14: note: remove extraneous parentheses around the comparison to silence this warning
if((__n_swaps==0)){{bool __fs=(std::__1::__xcodeml_template_type_0_0(__first,__i,__comp));
   ~         ^  ~
vec.cpp:12192:14: note: use '=' to turn this equality comparison into an assignment
if((__n_swaps==0)){{bool __fs=(std::__1::__xcodeml_template_type_0_0(__first,__i,__comp));
             ^~
             =
vec.cpp:12192:42: error: no member named '__xcodeml_template_type_0_0' in namespace 'std::__1'
if((__n_swaps==0)){{bool __fs=(std::__1::__xcodeml_template_type_0_0(__first,__i,__comp));
                               ~~~~~~~~~~^
vec.cpp:12193:15: error: no member named '__xcodeml_template_type_0_0' in namespace 'std::__1'
if((std::__1::__xcodeml_template_type_0_0((__i,1),__last,__comp))){{if(__fs){return;};
    ~~~~~~~~~~^
vec.cpp:12201:46: error: no member named '__xcodeml_template_type_0_0' in namespace 'std::__1'
if(((__i,__first),(__last,__i))){{(std::__1::__xcodeml_template_type_0_0(__first,__i,__comp));
                                   ~~~~~~~~~~^
vec.cpp:12203:21: error: no member named '__xcodeml_template_type_0_0' in namespace 'std::__1'
};}else{{(std::__1::__xcodeml_template_type_0_0((__i,1),__last,__comp));
          ~~~~~~~~~~^
vec.cpp:12208:95: error: expected ';' at end of declaration
template <>void __sort(char(*__first),char(*__last),class::std::__1::__less<char,char>&__comp)
                                                                                              ^
                                                                                              ;
vec.cpp:12209:107: error: expected ';' at end of declaration
template <>void __sort(wchar_t(*__first),wchar_t(*__last),class::std::__1::__less<wchar_t,wchar_t>&__comp)
                                                                                                          ^
                                                                                                          ;
vec.cpp:12210:123: error: expected ';' at end of declaration
template <>void __sort(signed char(*__first),signed char(*__last),class::std::__1::__less<signed char,signed char>&__comp)
                                                                                                                          ^
                                                                                                                          ;
vec.cpp:12211:131: error: expected ';' at end of declaration
template <>void __sort(unsigned char(*__first),unsigned char(*__last),class::std::__1::__less<unsigned char,unsigned char>&__comp)
                                                                                                                                  ^
                                                                                                                                  ;
vec.cpp:12212:99: error: expected ';' at end of declaration
template <>void __sort(short(*__first),short(*__last),class::std::__1::__less<short,short>&__comp)
                                                                                                  ^
                                                                                                  ;
vec.cpp:12213:135: error: expected ';' at end of declaration
template <>void __sort(unsigned short(*__first),unsigned short(*__last),class::std::__1::__less<unsigned short,unsigned short>&__comp)
                                                                                                                                      ^
                                                                                                                                      ;
vec.cpp:12214:91: error: expected ';' at end of declaration
template <>void __sort(int(*__first),int(*__last),class::std::__1::__less<int,int>&__comp)
                                                                                          ^
                                                                                          ;
vec.cpp:12215:127: error: expected ';' at end of declaration
template <>void __sort(unsigned int(*__first),unsigned int(*__last),class::std::__1::__less<unsigned int,unsigned int>&__comp)
                                                                                                                              ^
                                                                                                                              ;
vec.cpp:12216:95: error: expected ';' at end of declaration
template <>void __sort(long(*__first),long(*__last),class::std::__1::__less<long,long>&__comp)
                                                                                              ^
                                                                                              ;
vec.cpp:12217:131: error: expected ';' at end of declaration
template <>void __sort(unsigned long(*__first),unsigned long(*__last),class::std::__1::__less<unsigned long,unsigned long>&__comp)
                                                                                                                                  ^
                                                                                                                                  ;
vec.cpp:12218:115: error: expected ';' at end of declaration
template <>void __sort(long long(*__first),long long(*__last),class::std::__1::__less<long long,long long>&__comp)
                                                                                                                  ^
                                                                                                                  ;
vec.cpp:12219:151: error: expected ';' at end of declaration
template <>void __sort(unsigned long long(*__first),unsigned long long(*__last),class::std::__1::__less<unsigned long long,unsigned long long>&__comp)
                                                                                                                                                      ^
                                                                                                                                                      ;
vec.cpp:12220:99: error: expected ';' at end of declaration
template <>void __sort(float(*__first),float(*__last),class::std::__1::__less<float,float>&__comp)
                                                                                                  ^
                                                                                                  ;
vec.cpp:12221:103: error: expected ';' at end of declaration
template <>void __sort(double(*__first),double(*__last),class::std::__1::__less<double,double>&__comp)
                                                                                                      ^
                                                                                                      ;
vec.cpp:12222:123: error: expected ';' at end of declaration
template <>void __sort(long double(*__first),long double(*__last),class::std::__1::__less<long double,long double>&__comp)
                                                                                                                          ^
                                                                                                                          ;
vec.cpp:12224:12: error: expected unqualified-id
(std::__1::typename __comp_ref_type<__xcodeml_template_type_0_1>::type(__first,__last,__xcodeml_identity<typename __comp_ref_type<__xcodeml_template_type_0_1>::type>::t(__comp)));
           ^
vec.cpp:12226:128: error: expected ';' at end of declaration
template <>void sort(unsigned long(*__first),unsigned long(*__last),class::std::__1::__less<unsigned long,unsigned long>__comp)
                                                                                                                               ^
                                                                                                                               ;
vec.cpp:12227:140: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0>void sort(__xcodeml_template_type_0_0 __first,__xcodeml_template_type_0_0 __last){(std::__1::(__first,__last,__xcodeml_identity<__less<typename iterator_traits<__xcodeml_template_type_0_0>::value_type,typename iterator_traits<__xcodeml_template_type_0_0>::value_type> >::t()));
                                                                                                                                           ^
vec.cpp:12231:68: error: expected ')'
template<typename __xcodeml_template_type_0_0>void sort(__wrap_iter<__xcodeml_template_type_0_0(*)>,__wrap_iter<__xcodeml_template_type_0_0(*)>){(std::__1::((__first.base()),(__last.base())));
                                                                   ^
vec.cpp:12231:56: note: to match this '('
template<typename __xcodeml_template_type_0_0>void sort(__wrap_iter<__xcodeml_template_type_0_0(*)>,__wrap_iter<__xcodeml_template_type_0_0(*)>){(std::__1::((__first.base()),(__last.base())));
                                                       ^
vec.cpp:12231:68: error: variable has incomplete type 'std::__1::__wrap_iter'
template<typename __xcodeml_template_type_0_0>void sort(__wrap_iter<__xcodeml_template_type_0_0(*)>,__wrap_iter<__xcodeml_template_type_0_0(*)>){(std::__1::((__first.base()),(__last.base())));
                                                                   ^
vec.cpp:7076:17: note: forward declaration of 'std::__1::__wrap_iter'
template<>class __wrap_iter template<>class __wrap_iter;
                ^
vec.cpp:12231:157: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0>void sort(__wrap_iter<__xcodeml_template_type_0_0(*)>,__wrap_iter<__xcodeml_template_type_0_0(*)>){(std::__1::((__first.base()),(__last.base())));
                                                                                                                                                            ^
vec.cpp:12231:159: error: use of undeclared identifier '__first'
template<typename __xcodeml_template_type_0_0>void sort(__wrap_iter<__xcodeml_template_type_0_0(*)>,__wrap_iter<__xcodeml_template_type_0_0(*)>){(std::__1::((__first.base()),(__last.base())));
                                                                                                                                                              ^
vec.cpp:12231:176: error: use of undeclared identifier '__last'
template<typename __xcodeml_template_type_0_0>void sort(__wrap_iter<__xcodeml_template_type_0_0(*)>,__wrap_iter<__xcodeml_template_type_0_0(*)>){(std::__1::((__first.base()),(__last.base())));
                                                                                                                                                                               ^
vec.cpp:12233:105: error: expected ')'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>void sort(__wrap_iter<__xcodeml_template_type_0_0(*)>,__wrap_iter<__xcodeml_template_type_0_0(*)>,__xcodeml_template_type_0_1 __comp){typedef typename add_lvalue_reference<__xcodeml_template_type_0_1>::type _Comp_ref;
                                                                                                        ^
vec.cpp:12233:93: note: to match this '('
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>void sort(__wrap_iter<__xcodeml_template_type_0_0(*)>,__wrap_iter<__xcodeml_template_type_0_0(*)>,__xcodeml_template_type_0_1 __comp){typedef typename add_lvalue_reference<__xcodeml_template_type_0_1>::type _Comp_ref;
                                                                                            ^
vec.cpp:12233:105: error: variable has incomplete type 'std::__1::__wrap_iter'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>void sort(__wrap_iter<__xcodeml_template_type_0_0(*)>,__wrap_iter<__xcodeml_template_type_0_0(*)>,__xcodeml_template_type_0_1 __comp){typedef typename add_lvalue_reference<__xcodeml_template_type_0_1>::type _Comp_ref;
                                                                                                        ^
vec.cpp:7076:17: note: forward declaration of 'std::__1::__wrap_iter'
template<>class __wrap_iter template<>class __wrap_iter;
                ^
vec.cpp:12234:12: error: no member named '__xcodeml_template_type_0_0' in namespace 'std::__1'
(std::__1::__xcodeml_template_type_0_0(*)typename add_lvalue_reference<__xcodeml_template_type_0_1>::type((__first.base()),(__last.base()),__comp));
 ~~~~~~~~~~^
vec.cpp:12234:41: error: expected expression
(std::__1::__xcodeml_template_type_0_0(*)typename add_lvalue_reference<__xcodeml_template_type_0_1>::type((__first.base()),(__last.base()),__comp));
                                        ^
vec.cpp:12237:89: error: expected unqualified-id
typename iterator_traits<__xcodeml_template_type_0_1>::difference_type __len=(std::__1::(__first,__last));
                                                                                        ^
vec.cpp:12238:106: error: expected unqualified-id
while((__len,0)){{typename iterator_traits<__xcodeml_template_type_0_1>::difference_type __l2=(std::__1::(__len));
                                                                                                         ^
vec.cpp:12240:12: error: expected unqualified-id
(std::__1::(__m,__l2));
           ^
vec.cpp:12250:256: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>__xcodeml_template_type_0_0 lower_bound(__xcodeml_template_type_0_0 __first,__xcodeml_template_type_0_0 __last,__xcodeml_template_type_0_1 const&__value_){return(std::__1::(__first,__last,__value_,__xcodeml_identity<__less<typename iterator_traits<__xcodeml_template_type_0_0>::value_type,__xcodeml_template_type_0_1> >::t()));
                                                                                                                                                                                                                                                               ^
vec.cpp:12253:89: error: expected unqualified-id
typename iterator_traits<__xcodeml_template_type_0_1>::difference_type __len=(std::__1::(__first,__last));
                                                                                        ^
vec.cpp:12254:106: error: expected unqualified-id
while((__len,0)){{typename iterator_traits<__xcodeml_template_type_0_1>::difference_type __l2=(std::__1::(__len));
                                                                                                         ^
vec.cpp:12256:12: error: expected unqualified-id
(std::__1::(__m,__l2));
           ^
vec.cpp:12266:256: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>__xcodeml_template_type_0_0 upper_bound(__xcodeml_template_type_0_0 __first,__xcodeml_template_type_0_0 __last,__xcodeml_template_type_0_1 const&__value_){return(std::__1::(__first,__last,__value_,__xcodeml_identity<__less<__xcodeml_template_type_0_1,typename iterator_traits<__xcodeml_template_type_0_0>::value_type> >::t()));
                                                                                                                                                                                                                                                               ^
vec.cpp:12268:182: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>pair<__xcodeml_template_type_0_1,__xcodeml_template_type_0_1>{typedef typename iterator_traits<__xcodeml_template_type_0_1>::difference_type difference_type;
                                                                                                                                                                                     ^
vec.cpp:12456:95: error: no template named '__stable_sort_switch'
if((__len,static_cast<typename iterator_traits<__xcodeml_template_type_0_1>::difference_type>(__stable_sort_switch<typename iterator_traits<__xcodeml_template_type_0_1>::value_type>::value))){{(__xcodeml_template_type_0_0(__first,__last,__comp));
                                                                                              ^
vec.cpp:12462:110: error: expected unqualified-id
unique_ptr<typename iterator_traits<__xcodeml_template_type_0_1>::value_type,class::std::__1::__destruct_n&> =__buff __d;
                                                                                                             ^
vec.cpp:12477:81: error: expected unqualified-id
pair<typename iterator_traits<__xcodeml_template_type_0_0>::value_type(*),long> =0 0;
                                                                                ^
vec.cpp:12478:95: error: no class named '__return_temporary_buffer' in namespace 'std::__1'
unique_ptr<typename iterator_traits<__xcodeml_template_type_0_0>::value_type,class::std::__1::__return_temporary_buffer>;
                                                                                  ~~~~~~~~~~~~^
vec.cpp:12479:95: error: no template named '__stable_sort_switch'
if((__len,static_cast<typename iterator_traits<__xcodeml_template_type_0_0>::difference_type>(__stable_sort_switch<typename iterator_traits<__xcodeml_template_type_0_0>::value_type>::value))){{(__buf=(std::__1::typename iterator_traits<__xcodeml_template_type_0_0>::value_type(__len)));
                                                                                              ^
vec.cpp:12479:195: error: use of undeclared identifier '__buf'
if((__len,static_cast<typename iterator_traits<__xcodeml_template_type_0_0>::difference_type>(__stable_sort_switch<typename iterator_traits<__xcodeml_template_type_0_0>::value_type>::value))){{(__buf=(std::__1::typename iterator_traits<__xcodeml_template_type_0_0>::value_type(__len)));
                                                                                                                                                                                                  ^
vec.cpp:12479:212: error: expected unqualified-id
if((__len,static_cast<typename iterator_traits<__xcodeml_template_type_0_0>::difference_type>(__stable_sort_switch<typename iterator_traits<__xcodeml_template_type_0_0>::value_type>::value))){{(__buf=(std::__1::typename iterator_traits<__xcodeml_template_type_0_0>::value_type(__len)));
                                                                                                                                                                                                                   ^
vec.cpp:12480:2: error: use of undeclared identifier '__h'
(__h.reset(__buf.first));
 ^
vec.cpp:12480:12: error: use of undeclared identifier '__buf'
(__h.reset(__buf.first));
           ^
vec.cpp:12483:90: error: use of undeclared identifier '__buf'
(typename __comp_ref_type<__xcodeml_template_type_0_1>::type(__first,__last,__comp,__len,__buf.first,__buf.second));
                                                                                         ^
vec.cpp:12483:102: error: use of undeclared identifier '__buf'
(typename __comp_ref_type<__xcodeml_template_type_0_1>::type(__first,__last,__comp,__len,__buf.first,__buf.second));
                                                                                                     ^
vec.cpp:12485:147: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0>void stable_sort(__xcodeml_template_type_0_0 __first,__xcodeml_template_type_0_0 __last){(std::__1::(__first,__last,__xcodeml_identity<__less<typename iterator_traits<__xcodeml_template_type_0_0>::value_type,typename iterator_traits<__xcodeml_template_type_0_0>::value_type> >::t()));
                                                                                                                                                  ^
vec.cpp:12504:178: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0>__xcodeml_template_type_0_0 is_heap_until(__xcodeml_template_type_0_0 __first,__xcodeml_template_type_0_0 __last){return(std::__1::(__first,__last,__xcodeml_identity<__less<typename iterator_traits<__xcodeml_template_type_0_0>::value_type,typename iterator_traits<__xcodeml_template_type_0_0>::value_type> >::t()));
                                                                                                                                                                                 ^
vec.cpp:12506:222: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool is_heap(__xcodeml_template_type_0_0 __first,__xcodeml_template_type_0_0 __last,__xcodeml_template_type_0_1 __comp){return((std::__1::(__first,__last,__comp)),__last);
                                                                                                                                                                                                                             ^
vec.cpp:12508:149: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0>bool is_heap(__xcodeml_template_type_0_0 __first,__xcodeml_template_type_0_0 __last){return(std::__1::(__first,__last,__xcodeml_identity<__less<typename iterator_traits<__xcodeml_template_type_0_0>::value_type,typename iterator_traits<__xcodeml_template_type_0_0>::value_type> >::t()));
                                                                                                                                                    ^
vec.cpp:12513:120: error: expected unqualified-id
if((__comp((*__ptr),(*(--__last))))){{typename iterator_traits<__xcodeml_template_type_0_1>::value_type __t=(std::__1::((*__last)));
                                                                                                                       ^
vec.cpp:12514:27: error: expected unqualified-id
do{{((*__last)=(std::__1::((*__ptr))));
                          ^
vec.cpp:12520:23: error: expected unqualified-id
((*__last)=(std::__1::(__t)));
                      ^
vec.cpp:12527:145: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0>void push_heap(__xcodeml_template_type_0_0 __first,__xcodeml_template_type_0_0 __last){(std::__1::(__first,__last,__xcodeml_identity<__less<typename iterator_traits<__xcodeml_template_type_0_0>::value_type,typename iterator_traits<__xcodeml_template_type_0_0>::value_type> >::t()));
                                                                                                                                                ^
vec.cpp:12539:84: error: expected unqualified-id
typename iterator_traits<__xcodeml_template_type_0_1>::value_type __top=(std::__1::((*__start)));
                                                                                   ^
vec.cpp:12540:28: error: expected unqualified-id
do{{((*__start)=(std::__1::((*__child_i))));
                           ^
vec.cpp:12549:24: error: expected unqualified-id
((*__start)=(std::__1::(__top)));
                       ^
vec.cpp:12558:144: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0>void pop_heap(__xcodeml_template_type_0_0 __first,__xcodeml_template_type_0_0 __last){(std::__1::(__first,__last,__xcodeml_identity<__less<typename iterator_traits<__xcodeml_template_type_0_0>::value_type,typename iterator_traits<__xcodeml_template_type_0_0>::value_type> >::t()));
                                                                                                                                               ^
vec.cpp:12569:145: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0>void make_heap(__xcodeml_template_type_0_0 __first,__xcodeml_template_type_0_0 __last){(std::__1::(__first,__last,__xcodeml_identity<__less<typename iterator_traits<__xcodeml_template_type_0_0>::value_type,typename iterator_traits<__xcodeml_template_type_0_0>::value_type> >::t()));
                                                                                                                                                ^
vec.cpp:12577:145: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0>void sort_heap(__xcodeml_template_type_0_0 __first,__xcodeml_template_type_0_0 __last){(std::__1::(__first,__last,__xcodeml_identity<__less<typename iterator_traits<__xcodeml_template_type_0_0>::value_type,typename iterator_traits<__xcodeml_template_type_0_0>::value_type> >::t()));
                                                                                                                                                ^
vec.cpp:12590:185: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0>void partial_sort(__xcodeml_template_type_0_0 __first,__xcodeml_template_type_0_0 __middle,__xcodeml_template_type_0_0 __last){(std::__1::(__first,__middle,__last,__xcodeml_identity<__less<typename iterator_traits<__xcodeml_template_type_0_0>::value_type,typename iterator_traits<__xcodeml_template_type_0_0>::value_type> >::t()));
                                                                                                                                                                                        ^
vec.cpp:12606:304: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>__xcodeml_template_type_0_1 partial_sort_copy(__xcodeml_template_type_0_0 __first,__xcodeml_template_type_0_0 __last,__xcodeml_template_type_0_1 __result_first,__xcodeml_template_type_0_1 __result_last){return(std::__1::(__first,__last,__result_first,__result_last,__xcodeml_identity<__less<typename iterator_traits<__xcodeml_template_type_0_1>::value_type,typename iterator_traits<__xcodeml_template_type_0_1>::value_type> >::t()));
                                                                                                                                                                                                                                                                                                               ^
vec.cpp:12616:12: error: no member named '__xcodeml_template_type_0_0' in namespace 'std::__1'
(std::__1::__xcodeml_template_type_0_0(__first,(++__m),(--__last),__comp));
 ~~~~~~~~~~^
vec.cpp:12625:35: error: no member named '__xcodeml_template_type_0_0' in namespace 'std::__1'
unsigned int __n_swaps=(std::__1::__xcodeml_template_type_0_0(__first,__m,(--__lm1),__comp));
                        ~~~~~~~~~~^
vec.cpp:12671:14: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
if((__n_swaps==0)){{if((__nth,__i)){{(__j=(__m=__first));
    ~~~~~~~~~^~~
vec.cpp:12671:14: note: remove extraneous parentheses around the comparison to silence this warning
if((__n_swaps==0)){{if((__nth,__i)){{(__j=(__m=__first));
   ~         ^  ~
vec.cpp:12671:14: note: use '=' to turn this equality comparison into an assignment
if((__n_swaps==0)){{if((__nth,__i)){{(__j=(__m=__first));
             ^~
             =
vec.cpp:12691:181: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0>void nth_element(__xcodeml_template_type_0_0 __first,__xcodeml_template_type_0_0 __nth,__xcodeml_template_type_0_0 __last){(std::__1::(__first,__nth,__last,__xcodeml_identity<__less<typename iterator_traits<__xcodeml_template_type_0_0>::value_type,typename iterator_traits<__xcodeml_template_type_0_0>::value_type> >::t()));
                                                                                                                                                                                    ^
vec.cpp:12701:262: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool includes(__xcodeml_template_type_0_0 __first1,__xcodeml_template_type_0_0 __last1,__xcodeml_template_type_0_1 __first2,__xcodeml_template_type_0_1 __last2){return(std::__1::(__first1,__last1,__first2,__last2,__xcodeml_identity<__less<typename iterator_traits<__xcodeml_template_type_0_0>::value_type,typename iterator_traits<__xcodeml_template_type_0_1>::value_type> >::t()));
                                                                                                                                                                                                                                                                     ^
vec.cpp:12703:498: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3>__xcodeml_template_type_0_3 __set_union(__xcodeml_template_type_0_1 __first1,__xcodeml_template_type_0_1 __last1,__xcodeml_template_type_0_2 __first2,__xcodeml_template_type_0_2 __last2,__xcodeml_template_type_0_3 __result,__xcodeml_template_type_0_0 __comp){{;for(;(__first1,__last1);(++__result)){{if((__first2,__last2)){return(std::__1::(__first1,__last1,__result));};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 ^
vec.cpp:12711:18: error: expected unqualified-id
return(std::__1::(__first2,__last2,__result));
                 ^
vec.cpp:12716:360: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>__xcodeml_template_type_0_2 set_union(__xcodeml_template_type_0_0 __first1,__xcodeml_template_type_0_0 __last1,__xcodeml_template_type_0_1 __first2,__xcodeml_template_type_0_1 __last2,__xcodeml_template_type_0_2 __result){return(std::__1::(__first1,__last1,__first2,__last2,__result,__xcodeml_identity<__less<typename iterator_traits<__xcodeml_template_type_0_0>::value_type,typename iterator_traits<__xcodeml_template_type_0_1>::value_type> >::t()));
                                                                                                                                                                                                                                                                                                                                                                       ^
vec.cpp:12730:367: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>__xcodeml_template_type_0_2 set_intersection(__xcodeml_template_type_0_0 __first1,__xcodeml_template_type_0_0 __last1,__xcodeml_template_type_0_1 __first2,__xcodeml_template_type_0_1 __last2,__xcodeml_template_type_0_2 __result){return(std::__1::(__first1,__last1,__first2,__last2,__result,__xcodeml_identity<__less<typename iterator_traits<__xcodeml_template_type_0_0>::value_type,typename iterator_traits<__xcodeml_template_type_0_1>::value_type> >::t()));
                                                                                                                                                                                                                                                                                                                                                                              ^
vec.cpp:12732:489: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3>__xcodeml_template_type_0_3 __set_difference(__xcodeml_template_type_0_1 __first1,__xcodeml_template_type_0_1 __last1,__xcodeml_template_type_0_2 __first2,__xcodeml_template_type_0_2 __last2,__xcodeml_template_type_0_3 __result,__xcodeml_template_type_0_0 __comp){while((__first1,__last1)){{if((__first2,__last2)){return(std::__1::(__first1,__last1,__result));};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        ^
vec.cpp:12745:365: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>__xcodeml_template_type_0_2 set_difference(__xcodeml_template_type_0_0 __first1,__xcodeml_template_type_0_0 __last1,__xcodeml_template_type_0_1 __first2,__xcodeml_template_type_0_1 __last2,__xcodeml_template_type_0_2 __result){return(std::__1::(__first1,__last1,__first2,__last2,__result,__xcodeml_identity<__less<typename iterator_traits<__xcodeml_template_type_0_0>::value_type,typename iterator_traits<__xcodeml_template_type_0_1>::value_type> >::t()));
                                                                                                                                                                                                                                                                                                                                                                            ^
vec.cpp:12747:499: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2,typename __xcodeml_template_type_0_3>__xcodeml_template_type_0_3 __set_symmetric_difference(__xcodeml_template_type_0_1 __first1,__xcodeml_template_type_0_1 __last1,__xcodeml_template_type_0_2 __first2,__xcodeml_template_type_0_2 __last2,__xcodeml_template_type_0_3 __result,__xcodeml_template_type_0_0 __comp){while((__first1,__last1)){{if((__first2,__last2)){return(std::__1::(__first1,__last1,__result));};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  ^
vec.cpp:12757:18: error: expected unqualified-id
return(std::__1::(__first2,__last2,__result));
                 ^
vec.cpp:12762:375: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1,typename __xcodeml_template_type_0_2>__xcodeml_template_type_0_2 set_symmetric_difference(__xcodeml_template_type_0_0 __first1,__xcodeml_template_type_0_0 __last1,__xcodeml_template_type_0_1 __first2,__xcodeml_template_type_0_1 __last2,__xcodeml_template_type_0_2 __result){return(std::__1::(__first1,__last1,__first2,__last2,__result,__xcodeml_identity<__less<typename iterator_traits<__xcodeml_template_type_0_0>::value_type,typename iterator_traits<__xcodeml_template_type_0_1>::value_type> >::t()));
                                                                                                                                                                                                                                                                                                                                                                                      ^
vec.cpp:12772:277: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool lexicographical_compare(__xcodeml_template_type_0_0 __first1,__xcodeml_template_type_0_0 __last1,__xcodeml_template_type_0_1 __first2,__xcodeml_template_type_0_1 __last2){return(std::__1::(__first1,__last1,__first2,__last2,__xcodeml_identity<__less<typename iterator_traits<__xcodeml_template_type_0_0>::value_type,typename iterator_traits<__xcodeml_template_type_0_1>::value_type> >::t()));
                                                                                                                                                                                                                                                                                    ^
vec.cpp:12780:12: error: expected unqualified-id
(std::__1::(__ip1,__last));
           ^
vec.cpp:12783:31: error: expected unqualified-id
if((__i,__first)){{(std::__1::(__first,__last));
                              ^
vec.cpp:12791:158: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0>bool next_permutation(__xcodeml_template_type_0_0 __first,__xcodeml_template_type_0_0 __last){return(std::__1::(__first,__last,__xcodeml_identity<__less<typename iterator_traits<__xcodeml_template_type_0_0>::value_type,typename iterator_traits<__xcodeml_template_type_0_0>::value_type> >::t()));
                                                                                                                                                             ^
vec.cpp:12799:12: error: expected unqualified-id
(std::__1::(__ip1,__last));
           ^
vec.cpp:12802:31: error: expected unqualified-id
if((__i,__first)){{(std::__1::(__first,__last));
                              ^
vec.cpp:12810:158: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0>bool prev_permutation(__xcodeml_template_type_0_0 __first,__xcodeml_template_type_0_0 __last){return(std::__1::(__first,__last,__xcodeml_identity<__less<typename iterator_traits<__xcodeml_template_type_0_0>::value_type,typename iterator_traits<__xcodeml_template_type_0_0>::value_type> >::t()));
                                                                                                                                                             ^
vec.cpp:12841:64: error: expected member name or ';' after declaration specifiers
public:__bit_iterator<__xcodeml_template_type_0_0,0,expression>{return __xcodeml_identity<__bit_iterator<__xcodeml_template_type_0_0,0,expression> >::t(this->__seg_,static_cast<unsigned int>(((this->__mask_))));
                                                               ^
vec.cpp:12850:179: error: use of undeclared identifier '__x'
template<typename __xcodeml_template_type_0_0>void swap(__bit_reference<__xcodeml_template_type_0_0,expression>,__bit_reference<__xcodeml_template_type_0_0,expression>){bool __t=__x;
                                                                                                                                                                                  ^
vec.cpp:12851:2: error: use of undeclared identifier '__x'
(__x=__y);
 ^
vec.cpp:12851:6: error: use of undeclared identifier '__y'
(__x=__y);
     ^
vec.cpp:12852:2: error: use of undeclared identifier '__y'
(__y=__t);
 ^
vec.cpp:12854:216: error: use of undeclared identifier '__x'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>void swap(__bit_reference<__xcodeml_template_type_0_0,expression>,__bit_reference<__xcodeml_template_type_0_1,expression>){bool __t=__x;
                                                                                                                                                                                                                       ^
vec.cpp:12855:2: error: use of undeclared identifier '__x'
(__x=__y);
 ^
vec.cpp:12855:6: error: use of undeclared identifier '__y'
(__x=__y);
     ^
vec.cpp:12856:2: error: use of undeclared identifier '__y'
(__y=__t);
 ^
vec.cpp:12858:132: error: use of undeclared identifier '__x'
template<typename __xcodeml_template_type_0_0>void swap(__bit_reference<__xcodeml_template_type_0_0,expression>,bool&__y){bool __t=__x;
                                                                                                                                   ^
vec.cpp:12859:2: error: use of undeclared identifier '__x'
(__x=__y);
 ^
vec.cpp:12863:6: error: use of undeclared identifier '__y'
(__x=__y);
     ^
vec.cpp:12864:2: error: use of undeclared identifier '__y'
(__y=__t);
 ^
vec.cpp:12876:64: error: expected member name or ';' after declaration specifiers
public:__bit_iterator<__xcodeml_template_type_0_0,1,expression>{return __xcodeml_identity<__bit_iterator<__xcodeml_template_type_0_0,1,expression> >::t(this->__seg_,static_cast<unsigned int>(((this->__mask_))));
                                                               ^
vec.cpp:12873:94: error: use of undeclared identifier '__x'
public:__bit_const_reference(__bit_reference<__xcodeml_template_type_0_0,expression>):__seg_(__x.__seg_),__mask_(__x.__mask_){}
                                                                                             ^
vec.cpp:12873:114: error: use of undeclared identifier '__x'
public:__bit_const_reference(__bit_reference<__xcodeml_template_type_0_0,expression>):__seg_(__x.__seg_),__mask_(__x.__mask_){}
                                                                                                                 ^
vec.cpp:12884:126: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0,bool _IsConst>__bit_iterator<__xcodeml_template_type_0_0,expression,expression>{typedef __bit_iterator<__xcodeml_template_type_0_0,expression,expression>;
                                                                                                                             ^
vec.cpp:13305:103: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0>__bit_iterator<__xcodeml_template_type_0_0,0,expression>{typedef __bit_iterator<__xcodeml_template_type_0_0,0,expression>;
                                                                                                      ^
vec.cpp:13523:8: warning: typedef requires a name [-Wmissing-declarations]
public:typedef allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>;
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:13535:8: warning: declaration does not declare anything [-Wmissing-declarations]
public:__compressed_pair<typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::pointer,__xcodeml_template_type_0_1>;
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:13588:87: error: expected ';' at end of declaration list
public:template<typename __xcodeml_template_type_1_0>void emplace_back(void/*__args*/)
                                                                                      ^
                                                                                      ;
vec.cpp:13595:91: error: member 'type' declared as a template
public:template<typename __xcodeml_template_type_1_0>typename enable_if<expression,void>::type __construct_at_end(__xcodeml_template_type_1_0 __first,__xcodeml_template_type_1_0 __last)
       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                     ^
vec.cpp:13595:95: error: expected ';' at end of declaration list
public:template<typename __xcodeml_template_type_1_0>typename enable_if<expression,void>::type __construct_at_end(__xcodeml_template_type_1_0 __first,__xcodeml_template_type_1_0 __last)
                                                                                              ^
                                                                                              ;
vec.cpp:13568:245: error: expected expression
public:typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::size_type capacity()const{return static_cast<typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::size_type>(((()),this->__first_));
                                                                                                                                                                                                                                                    ^
vec.cpp:13572:249: error: expected expression
public:typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::size_type __back_spare()const{return static_cast<typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::size_type>(((()),this->__end_));
                                                                                                                                                                                                                                                        ^
vec.cpp:13608:106: error: expected expression
private:void __move_assign_alloc(class __split_buffer&__c,class::std::__1::integral_constant<bool,1>){((())=(std::__1::((__c.__alloc()))));
                                                                                                         ^
vec.cpp:13608:120: error: expected unqualified-id
private:void __move_assign_alloc(class __split_buffer&__c,class::std::__1::integral_constant<bool,1>){((())=(std::__1::((__c.__alloc()))));
                                                                                                                       ^
vec.cpp:13637:14: error: template 'allocator' cannot be referenced with a class specifier
public:class allocator const&__alloc()const;
             ^
vec.cpp:8587:53: note: declared here
template<typename __xcodeml_template_type_0_0>class allocator{public:
                                                    ^
vec.cpp:13677:87: error: expected ';' at end of declaration list
public:template<typename __xcodeml_template_type_0_0>void emplace_back(void/*__args*/)
                                                                                      ^
                                                                                      ;
vec.cpp:13682:91: error: member 'type' declared as a template
public:template<typename __xcodeml_template_type_0_0>typename enable_if<expression,void>::type __construct_at_end(__xcodeml_template_type_0_0 __first,__xcodeml_template_type_0_0 __last)
       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                     ^
vec.cpp:13682:95: error: expected ';' at end of declaration list
public:template<typename __xcodeml_template_type_0_0>typename enable_if<expression,void>::type __construct_at_end(__xcodeml_template_type_0_0 __first,__xcodeml_template_type_0_0 __last)
                                                                                              ^
                                                                                              ;
vec.cpp:13645:175: error: 'allocator_traits' is not a class, namespace, or enumeration
public:__split_buffer(unsigned long __cap,unsigned long __start,class::std::__1::allocator<int>&__a):__split_buffer_common(),__end_cap_(nullptr){(this->__first_=((__cap!=0)?(allocator_traits::allocate((this->__alloc()),__cap)):nullptr));
                                                                                                                                                                              ^
vec.cpp:8453:53: note: 'allocator_traits' declared here
template<typename __xcodeml_template_type_0_0>class allocator_traits{public:typedef __xcodeml_template_type_0_0 allocator_type;
                                                    ^
vec.cpp:13650:21: error: 'allocator_traits' is not a class, namespace, or enumeration
if(this->__first_){(allocator_traits::deallocate((this->__alloc()),this->__first_,(this->capacity())));};
                    ^
vec.cpp:8453:53: note: 'allocator_traits' declared here
template<typename __xcodeml_template_type_0_0>class allocator_traits{public:typedef __xcodeml_template_type_0_0 allocator_type;
                                                    ^
vec.cpp:13689:127: error: 'allocator_traits' is not a class, namespace, or enumeration
public:void __destruct_at_end(int(*__new_last),class::std::__1::integral_constant<bool,0>){while((__new_last!=this->__end_)){(allocator_traits::destroy((this->__alloc()),(__to_raw_pointer((--this->__end_)))));};
                                                                                                                              ^
vec.cpp:8453:53: note: 'allocator_traits' declared here
template<typename __xcodeml_template_type_0_0>class allocator_traits{public:typedef __xcodeml_template_type_0_0 allocator_type;
                                                    ^
vec.cpp:13699:6: error: '__split_buffer' is not a class, namespace, or enumeration
bool __split_buffer::__invariants()const{if((this->__first_,nullptr)){{if((this->__begin_,nullptr)){return false;};
     ^
vec.cpp:13516:90: note: '__split_buffer' declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __split_buffer:private __split_buffer_common<1>{private:
                                                                                         ^
vec.cpp:13708:6: error: '__split_buffer' is not a class, namespace, or enumeration
void __split_buffer::__construct_at_end(typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::size_type __n){typename remove_reference<__xcodeml_template_type_0_1>::type&__a=(this.__alloc());
     ^
vec.cpp:13516:90: note: '__split_buffer' declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __split_buffer:private __split_buffer_common<1>{private:
                                                                                         ^
vec.cpp:13708:93: error: use of undeclared identifier '__xcodeml_template_type_0_1'
void __split_buffer::__construct_at_end(typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::size_type __n){typename remove_reference<__xcodeml_template_type_0_1>::type&__a=(this.__alloc());
                                                                                            ^
vec.cpp:13708:123: error: no type named 'type' in the global namespace
void __split_buffer::__construct_at_end(typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::size_type __n){typename remove_reference<__xcodeml_template_type_0_1>::type&__a=(this.__alloc());
                                                                                                                        ~~^
vec.cpp:13708:93: error: use of undeclared identifier '__xcodeml_template_type_0_1'
void __split_buffer::__construct_at_end(typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::size_type __n){typename remove_reference<__xcodeml_template_type_0_1>::type&__a=(this.__alloc());
                                                                                            ^
vec.cpp:13708:123: error: no type named 'type' in the global namespace
void __split_buffer::__construct_at_end(typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::size_type __n){typename remove_reference<__xcodeml_template_type_0_1>::type&__a=(this.__alloc());
                                                                                                                        ~~^
vec.cpp:13708:130: error: parameter declarator cannot be qualified
void __split_buffer::__construct_at_end(typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::size_type __n){typename remove_reference<__xcodeml_template_type_0_1>::type&__a=(this.__alloc());
                                                                                                                               ~~^
vec.cpp:13708:140: error: expected ')'
void __split_buffer::__construct_at_end(typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::size_type __n){typename remove_reference<__xcodeml_template_type_0_1>::type&__a=(this.__alloc());
                                                                                                                                           ^
vec.cpp:13708:40: note: to match this '('
void __split_buffer::__construct_at_end(typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::size_type __n){typename remove_reference<__xcodeml_template_type_0_1>::type&__a=(this.__alloc());
                                       ^
vec.cpp:13714:6: error: '__split_buffer' is not a class, namespace, or enumeration
void __split_buffer::__construct_at_end(typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::size_type __n,__xcodeml_template_type_0_0 const&__x){typename remove_reference<__xcodeml_template_type_0_1>::type&__a=(this.__alloc());
     ^
vec.cpp:13516:90: note: '__split_buffer' declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __split_buffer:private __split_buffer_common<1>{private:
                                                                                         ^
vec.cpp:13714:93: error: use of undeclared identifier '__xcodeml_template_type_0_1'
void __split_buffer::__construct_at_end(typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::size_type __n,__xcodeml_template_type_0_0 const&__x){typename remove_reference<__xcodeml_template_type_0_1>::type&__a=(this.__alloc());
                                                                                            ^
vec.cpp:13714:123: error: no type named 'type' in the global namespace
void __split_buffer::__construct_at_end(typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::size_type __n,__xcodeml_template_type_0_0 const&__x){typename remove_reference<__xcodeml_template_type_0_1>::type&__a=(this.__alloc());
                                                                                                                        ~~^
vec.cpp:13714:93: error: use of undeclared identifier '__xcodeml_template_type_0_1'
void __split_buffer::__construct_at_end(typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::size_type __n,__xcodeml_template_type_0_0 const&__x){typename remove_reference<__xcodeml_template_type_0_1>::type&__a=(this.__alloc());
                                                                                            ^
vec.cpp:13714:123: error: no type named 'type' in the global namespace
void __split_buffer::__construct_at_end(typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::size_type __n,__xcodeml_template_type_0_0 const&__x){typename remove_reference<__xcodeml_template_type_0_1>::type&__a=(this.__alloc());
                                                                                                                        ~~^
vec.cpp:13714:130: error: parameter declarator cannot be qualified
void __split_buffer::__construct_at_end(typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::size_type __n,__xcodeml_template_type_0_0 const&__x){typename remove_reference<__xcodeml_template_type_0_1>::type&__a=(this.__alloc());
                                                                                                                               ~~^
vec.cpp:13714:140: error: expected ')'
void __split_buffer::__construct_at_end(typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::size_type __n,__xcodeml_template_type_0_0 const&__x){typename remove_reference<__xcodeml_template_type_0_1>::type&__a=(this.__alloc());
                                                                                                                                           ^
vec.cpp:13714:40: note: to match this '('
void __split_buffer::__construct_at_end(typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::size_type __n,__xcodeml_template_type_0_0 const&__x){typename remove_reference<__xcodeml_template_type_0_1>::type&__a=(this.__alloc());
                                       ^
vec.cpp:13720:84: error: definition or redeclaration of 'type' cannot name the global scope
template<typename __xcodeml_template_type_1_0>typename enable_if<expression,void>::type __split_buffer::__construct_at_end(__xcodeml_template_type_1_0 __first,__xcodeml_template_type_1_0 __last){typename remove_reference<__xcodeml_template_type_0_1>::type&__a=(this.__alloc());
                                                                                 ~~^
vec.cpp:13720:88: error: expected ';' at end of declaration
template<typename __xcodeml_template_type_1_0>typename enable_if<expression,void>::type __split_buffer::__construct_at_end(__xcodeml_template_type_1_0 __first,__xcodeml_template_type_1_0 __last){typename remove_reference<__xcodeml_template_type_0_1>::type&__a=(this.__alloc());
                                                                                       ^
                                                                                       ;
vec.cpp:13720:89: error: '__split_buffer' is not a class, namespace, or enumeration
template<typename __xcodeml_template_type_1_0>typename enable_if<expression,void>::type __split_buffer::__construct_at_end(__xcodeml_template_type_1_0 __first,__xcodeml_template_type_1_0 __last){typename remove_reference<__xcodeml_template_type_0_1>::type&__a=(this.__alloc());
                                                                                        ^
vec.cpp:13516:90: note: '__split_buffer' declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __split_buffer:private __split_buffer_common<1>{private:
                                                                                         ^
vec.cpp:13720:124: error: unknown type name '__xcodeml_template_type_1_0'
template<typename __xcodeml_template_type_1_0>typename enable_if<expression,void>::type __split_buffer::__construct_at_end(__xcodeml_template_type_1_0 __first,__xcodeml_template_type_1_0 __last){typename remove_reference<__xcodeml_template_type_0_1>::type&__a=(this.__alloc());
                                                                                                                           ^
vec.cpp:13720:160: error: unknown type name '__xcodeml_template_type_1_0'
template<typename __xcodeml_template_type_1_0>typename enable_if<expression,void>::type __split_buffer::__construct_at_end(__xcodeml_template_type_1_0 __first,__xcodeml_template_type_1_0 __last){typename remove_reference<__xcodeml_template_type_0_1>::type&__a=(this.__alloc());
                                                                                                                                                               ^
vec.cpp:13731:84: error: definition or redeclaration of 'type' cannot name the global scope
template<typename __xcodeml_template_type_1_0>typename enable_if<expression,void>::type __split_buffer::__construct_at_end(__xcodeml_template_type_1_0 __first,__xcodeml_template_type_1_0 __last){typename remove_reference<__xcodeml_template_type_0_1>::type&__a=(this.__alloc());
                                                                                 ~~^
vec.cpp:13731:88: error: expected ';' at end of declaration
template<typename __xcodeml_template_type_1_0>typename enable_if<expression,void>::type __split_buffer::__construct_at_end(__xcodeml_template_type_1_0 __first,__xcodeml_template_type_1_0 __last){typename remove_reference<__xcodeml_template_type_0_1>::type&__a=(this.__alloc());
                                                                                       ^
                                                                                       ;
vec.cpp:13731:89: error: '__split_buffer' is not a class, namespace, or enumeration
template<typename __xcodeml_template_type_1_0>typename enable_if<expression,void>::type __split_buffer::__construct_at_end(__xcodeml_template_type_1_0 __first,__xcodeml_template_type_1_0 __last){typename remove_reference<__xcodeml_template_type_0_1>::type&__a=(this.__alloc());
                                                                                        ^
vec.cpp:13516:90: note: '__split_buffer' declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __split_buffer:private __split_buffer_common<1>{private:
                                                                                         ^
vec.cpp:13731:124: error: unknown type name '__xcodeml_template_type_1_0'
template<typename __xcodeml_template_type_1_0>typename enable_if<expression,void>::type __split_buffer::__construct_at_end(__xcodeml_template_type_1_0 __first,__xcodeml_template_type_1_0 __last){typename remove_reference<__xcodeml_template_type_0_1>::type&__a=(this.__alloc());
                                                                                                                           ^
vec.cpp:13731:160: error: unknown type name '__xcodeml_template_type_1_0'
template<typename __xcodeml_template_type_1_0>typename enable_if<expression,void>::type __split_buffer::__construct_at_end(__xcodeml_template_type_1_0 __first,__xcodeml_template_type_1_0 __last){typename remove_reference<__xcodeml_template_type_0_1>::type&__a=(this.__alloc());
                                                                                                                                                               ^
vec.cpp:13736:6: error: '__split_buffer' is not a class, namespace, or enumeration
void __split_buffer::__destruct_at_begin(typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::pointer __new_begin,class::std::__1::integral_constant<bool,0>){while((this->__begin_,__new_begin)){(allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::.destroy((()),(((this->__begin_++)))));};
     ^
vec.cpp:13516:90: note: '__split_buffer' declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __split_buffer:private __split_buffer_common<1>{private:
                                                                                         ^
vec.cpp:13736:94: error: use of undeclared identifier '__xcodeml_template_type_0_1'
void __split_buffer::__destruct_at_begin(typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::pointer __new_begin,class::std::__1::integral_constant<bool,0>){while((this->__begin_,__new_begin)){(allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::.destroy((()),(((this->__begin_++)))));};
                                                                                             ^
vec.cpp:13736:124: error: no type named 'type' in the global namespace
void __split_buffer::__destruct_at_begin(typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::pointer __new_begin,class::std::__1::integral_constant<bool,0>){while((this->__begin_,__new_begin)){(allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::.destroy((()),(((this->__begin_++)))));};
                                                                                                                         ~~^
vec.cpp:13736:94: error: use of undeclared identifier '__xcodeml_template_type_0_1'
void __split_buffer::__destruct_at_begin(typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::pointer __new_begin,class::std::__1::integral_constant<bool,0>){while((this->__begin_,__new_begin)){(allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::.destroy((()),(((this->__begin_++)))));};
                                                                                             ^
vec.cpp:13736:124: error: no type named 'type' in the global namespace
void __split_buffer::__destruct_at_begin(typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::pointer __new_begin,class::std::__1::integral_constant<bool,0>){while((this->__begin_,__new_begin)){(allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::.destroy((()),(((this->__begin_++)))));};
                                                                                                                         ~~^
vec.cpp:13736:131: error: parameter declarator cannot be qualified
void __split_buffer::__destruct_at_begin(typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::pointer __new_begin,class::std::__1::integral_constant<bool,0>){while((this->__begin_,__new_begin)){(allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::.destroy((()),(((this->__begin_++)))));};
                                                                                                                                ~~^
vec.cpp:13736:139: error: expected ')'
void __split_buffer::__destruct_at_begin(typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::pointer __new_begin,class::std::__1::integral_constant<bool,0>){while((this->__begin_,__new_begin)){(allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::.destroy((()),(((this->__begin_++)))));};
                                                                                                                                          ^
vec.cpp:13736:41: note: to match this '('
void __split_buffer::__destruct_at_begin(typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::pointer __new_begin,class::std::__1::integral_constant<bool,0>){while((this->__begin_,__new_begin)){(allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::.destroy((()),(((this->__begin_++)))));};
                                        ^
vec.cpp:13738:6: error: '__split_buffer' is not a class, namespace, or enumeration
void __split_buffer::__destruct_at_begin(typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::pointer __new_begin,class::std::__1::integral_constant<bool,1>){(this->__begin_=__new_begin);
     ^
vec.cpp:13516:90: note: '__split_buffer' declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __split_buffer:private __split_buffer_common<1>{private:
                                                                                         ^
vec.cpp:13738:94: error: use of undeclared identifier '__xcodeml_template_type_0_1'
void __split_buffer::__destruct_at_begin(typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::pointer __new_begin,class::std::__1::integral_constant<bool,1>){(this->__begin_=__new_begin);
                                                                                             ^
vec.cpp:13738:124: error: no type named 'type' in the global namespace
void __split_buffer::__destruct_at_begin(typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::pointer __new_begin,class::std::__1::integral_constant<bool,1>){(this->__begin_=__new_begin);
                                                                                                                         ~~^
vec.cpp:13738:94: error: use of undeclared identifier '__xcodeml_template_type_0_1'
void __split_buffer::__destruct_at_begin(typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::pointer __new_begin,class::std::__1::integral_constant<bool,1>){(this->__begin_=__new_begin);
                                                                                             ^
vec.cpp:13738:124: error: no type named 'type' in the global namespace
void __split_buffer::__destruct_at_begin(typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::pointer __new_begin,class::std::__1::integral_constant<bool,1>){(this->__begin_=__new_begin);
                                                                                                                         ~~^
vec.cpp:13738:131: error: parameter declarator cannot be qualified
void __split_buffer::__destruct_at_begin(typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::pointer __new_begin,class::std::__1::integral_constant<bool,1>){(this->__begin_=__new_begin);
                                                                                                                                ~~^
vec.cpp:13738:139: error: expected ')'
void __split_buffer::__destruct_at_begin(typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::pointer __new_begin,class::std::__1::integral_constant<bool,1>){(this->__begin_=__new_begin);
                                                                                                                                          ^
vec.cpp:13738:41: note: to match this '('
void __split_buffer::__destruct_at_begin(typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::pointer __new_begin,class::std::__1::integral_constant<bool,1>){(this->__begin_=__new_begin);
                                        ^
vec.cpp:13740:6: error: '__split_buffer' is not a class, namespace, or enumeration
void __split_buffer::__destruct_at_end(typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::pointer __new_last,class::std::__1::integral_constant<bool,0>){while((__new_last,this->__end_)){(allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::.destroy((()),(((--this->__end_)))));};
     ^
vec.cpp:13516:90: note: '__split_buffer' declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __split_buffer:private __split_buffer_common<1>{private:
                                                                                         ^
vec.cpp:13740:92: error: use of undeclared identifier '__xcodeml_template_type_0_1'
void __split_buffer::__destruct_at_end(typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::pointer __new_last,class::std::__1::integral_constant<bool,0>){while((__new_last,this->__end_)){(allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::.destroy((()),(((--this->__end_)))));};
                                                                                           ^
vec.cpp:13740:122: error: no type named 'type' in the global namespace
void __split_buffer::__destruct_at_end(typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::pointer __new_last,class::std::__1::integral_constant<bool,0>){while((__new_last,this->__end_)){(allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::.destroy((()),(((--this->__end_)))));};
                                                                                                                       ~~^
vec.cpp:13740:92: error: use of undeclared identifier '__xcodeml_template_type_0_1'
void __split_buffer::__destruct_at_end(typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::pointer __new_last,class::std::__1::integral_constant<bool,0>){while((__new_last,this->__end_)){(allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::.destroy((()),(((--this->__end_)))));};
                                                                                           ^
vec.cpp:13740:122: error: no type named 'type' in the global namespace
void __split_buffer::__destruct_at_end(typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::pointer __new_last,class::std::__1::integral_constant<bool,0>){while((__new_last,this->__end_)){(allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::.destroy((()),(((--this->__end_)))));};
                                                                                                                       ~~^
vec.cpp:13740:129: error: parameter declarator cannot be qualified
void __split_buffer::__destruct_at_end(typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::pointer __new_last,class::std::__1::integral_constant<bool,0>){while((__new_last,this->__end_)){(allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::.destroy((()),(((--this->__end_)))));};
                                                                                                                              ~~^
vec.cpp:13740:137: error: expected ')'
void __split_buffer::__destruct_at_end(typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::pointer __new_last,class::std::__1::integral_constant<bool,0>){while((__new_last,this->__end_)){(allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::.destroy((()),(((--this->__end_)))));};
                                                                                                                                        ^
vec.cpp:13740:39: note: to match this '('
void __split_buffer::__destruct_at_end(typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::pointer __new_last,class::std::__1::integral_constant<bool,0>){while((__new_last,this->__end_)){(allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::.destroy((()),(((--this->__end_)))));};
                                      ^
vec.cpp:13742:6: error: '__split_buffer' is not a class, namespace, or enumeration
void __split_buffer::__destruct_at_end(typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::pointer __new_last,class::std::__1::integral_constant<bool,1>){(this->__end_=__new_last);
     ^
vec.cpp:13516:90: note: '__split_buffer' declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __split_buffer:private __split_buffer_common<1>{private:
                                                                                         ^
vec.cpp:13742:92: error: use of undeclared identifier '__xcodeml_template_type_0_1'
void __split_buffer::__destruct_at_end(typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::pointer __new_last,class::std::__1::integral_constant<bool,1>){(this->__end_=__new_last);
                                                                                           ^
vec.cpp:13742:122: error: no type named 'type' in the global namespace
void __split_buffer::__destruct_at_end(typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::pointer __new_last,class::std::__1::integral_constant<bool,1>){(this->__end_=__new_last);
                                                                                                                       ~~^
vec.cpp:13742:92: error: use of undeclared identifier '__xcodeml_template_type_0_1'
void __split_buffer::__destruct_at_end(typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::pointer __new_last,class::std::__1::integral_constant<bool,1>){(this->__end_=__new_last);
                                                                                           ^
vec.cpp:13742:122: error: no type named 'type' in the global namespace
void __split_buffer::__destruct_at_end(typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::pointer __new_last,class::std::__1::integral_constant<bool,1>){(this->__end_=__new_last);
                                                                                                                       ~~^
vec.cpp:13742:129: error: parameter declarator cannot be qualified
void __split_buffer::__destruct_at_end(typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::pointer __new_last,class::std::__1::integral_constant<bool,1>){(this->__end_=__new_last);
                                                                                                                              ~~^
vec.cpp:13742:137: error: expected ')'
void __split_buffer::__destruct_at_end(typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::pointer __new_last,class::std::__1::integral_constant<bool,1>){(this->__end_=__new_last);
                                                                                                                                        ^
vec.cpp:13742:39: note: to match this '('
void __split_buffer::__destruct_at_end(typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::pointer __new_last,class::std::__1::integral_constant<bool,1>){(this->__end_=__new_last);
                                      ^
vec.cpp:13744:1: error: '__split_buffer' is not a class, namespace, or enumeration
__split_buffer::__split_buffer(typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::size_type __cap,typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::size_type __start,typename remove_reference<__xcodeml_template_type_0_1>::type&__a):__end_cap_(nullptr __a){(this->__first_=((__cap,0)?(allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::.allocate((()),__cap)):nullptr));
^
vec.cpp:13516:90: note: '__split_buffer' declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __split_buffer:private __split_buffer_common<1>{private:
                                                                                         ^
vec.cpp:13744:84: error: use of undeclared identifier '__xcodeml_template_type_0_1'
__split_buffer::__split_buffer(typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::size_type __cap,typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::size_type __start,typename remove_reference<__xcodeml_template_type_0_1>::type&__a):__end_cap_(nullptr __a){(this->__first_=((__cap,0)?(allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::.allocate((()),__cap)):nullptr));
                                                                                   ^
vec.cpp:13744:114: error: no type named 'type' in the global namespace
__split_buffer::__split_buffer(typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::size_type __cap,typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::size_type __start,typename remove_reference<__xcodeml_template_type_0_1>::type&__a):__end_cap_(nullptr __a){(this->__first_=((__cap,0)?(allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::.allocate((()),__cap)):nullptr));
                                                                                                               ~~^
vec.cpp:13744:84: error: use of undeclared identifier '__xcodeml_template_type_0_1'
__split_buffer::__split_buffer(typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::size_type __cap,typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::size_type __start,typename remove_reference<__xcodeml_template_type_0_1>::type&__a):__end_cap_(nullptr __a){(this->__first_=((__cap,0)?(allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::.allocate((()),__cap)):nullptr));
                                                                                   ^
vec.cpp:13744:114: error: no type named 'type' in the global namespace
__split_buffer::__split_buffer(typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::size_type __cap,typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::size_type __start,typename remove_reference<__xcodeml_template_type_0_1>::type&__a):__end_cap_(nullptr __a){(this->__first_=((__cap,0)?(allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::.allocate((()),__cap)):nullptr));
                                                                                                               ~~^
vec.cpp:13744:121: error: parameter declarator cannot be qualified
__split_buffer::__split_buffer(typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::size_type __cap,typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::size_type __start,typename remove_reference<__xcodeml_template_type_0_1>::type&__a):__end_cap_(nullptr __a){(this->__first_=((__cap,0)?(allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::.allocate((()),__cap)):nullptr));
                                                                                                                      ~~^
vec.cpp:13744:131: error: expected ')'
__split_buffer::__split_buffer(typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::size_type __cap,typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::size_type __start,typename remove_reference<__xcodeml_template_type_0_1>::type&__a):__end_cap_(nullptr __a){(this->__first_=((__cap,0)?(allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::.allocate((()),__cap)):nullptr));
                                                                                                                                  ^
vec.cpp:13744:31: note: to match this '('
__split_buffer::__split_buffer(typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::size_type __cap,typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::size_type __start,typename remove_reference<__xcodeml_template_type_0_1>::type&__a):__end_cap_(nullptr __a){(this->__first_=((__cap,0)?(allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::.allocate((()),__cap)):nullptr));
                              ^
vec.cpp:13748:1: error: '__split_buffer' is not a class, namespace, or enumeration
__split_buffer::__split_buffer():__first_(nullptr),__begin_(nullptr),__end_(nullptr),__end_cap_(nullptr){}
^
vec.cpp:13516:90: note: '__split_buffer' declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __split_buffer:private __split_buffer_common<1>{private:
                                                                                         ^
vec.cpp:13749:1: error: '__split_buffer' is not a class, namespace, or enumeration
__split_buffer::__split_buffer(typename remove_reference<__xcodeml_template_type_0_1>::type&__a):__first_(nullptr),__begin_(nullptr),__end_(nullptr),__end_cap_(nullptr __a){}
^
vec.cpp:13516:90: note: '__split_buffer' declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __split_buffer:private __split_buffer_common<1>{private:
                                                                                         ^
vec.cpp:13749:58: error: use of undeclared identifier '__xcodeml_template_type_0_1'
__split_buffer::__split_buffer(typename remove_reference<__xcodeml_template_type_0_1>::type&__a):__first_(nullptr),__begin_(nullptr),__end_(nullptr),__end_cap_(nullptr __a){}
                                                         ^
vec.cpp:13749:58: error: use of undeclared identifier '__xcodeml_template_type_0_1'
vec.cpp:13749:88: error: parameter declarator cannot be qualified
__split_buffer::__split_buffer(typename remove_reference<__xcodeml_template_type_0_1>::type&__a):__first_(nullptr),__begin_(nullptr),__end_(nullptr),__end_cap_(nullptr __a){}
                                                                                     ~~^
vec.cpp:13749:92: error: expected ')'
__split_buffer::__split_buffer(typename remove_reference<__xcodeml_template_type_0_1>::type&__a):__first_(nullptr),__begin_(nullptr),__end_(nullptr),__end_cap_(nullptr __a){}
                                                                                           ^
vec.cpp:13749:31: note: to match this '('
__split_buffer::__split_buffer(typename remove_reference<__xcodeml_template_type_0_1>::type&__a):__first_(nullptr),__begin_(nullptr),__end_(nullptr),__end_cap_(nullptr __a){}
                              ^
vec.cpp:13750:1: error: '__split_buffer' is not a class, namespace, or enumeration
__split_buffer::__split_buffer(typename remove_reference<__xcodeml_template_type_0_1>::type const&__a):__first_(nullptr),__begin_(nullptr),__end_(nullptr),__end_cap_(nullptr __a){}
^
vec.cpp:13516:90: note: '__split_buffer' declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __split_buffer:private __split_buffer_common<1>{private:
                                                                                         ^
vec.cpp:13750:58: error: use of undeclared identifier '__xcodeml_template_type_0_1'
__split_buffer::__split_buffer(typename remove_reference<__xcodeml_template_type_0_1>::type const&__a):__first_(nullptr),__begin_(nullptr),__end_(nullptr),__end_cap_(nullptr __a){}
                                                         ^
vec.cpp:13750:58: error: use of undeclared identifier '__xcodeml_template_type_0_1'
vec.cpp:13750:88: error: parameter declarator cannot be qualified
__split_buffer::__split_buffer(typename remove_reference<__xcodeml_template_type_0_1>::type const&__a):__first_(nullptr),__begin_(nullptr),__end_(nullptr),__end_cap_(nullptr __a){}
                                                                                     ~~^
vec.cpp:13750:93: error: expected ')'
__split_buffer::__split_buffer(typename remove_reference<__xcodeml_template_type_0_1>::type const&__a):__first_(nullptr),__begin_(nullptr),__end_(nullptr),__end_cap_(nullptr __a){}
                                                                                            ^
vec.cpp:13750:31: note: to match this '('
__split_buffer::__split_buffer(typename remove_reference<__xcodeml_template_type_0_1>::type const&__a):__first_(nullptr),__begin_(nullptr),__end_(nullptr),__end_cap_(nullptr __a){}
                              ^
vec.cpp:13751:1: error: '__split_buffer' is not a class, namespace, or enumeration
__split_buffer::~__split_buffer(){(this->clear());
^
vec.cpp:13516:90: note: '__split_buffer' declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __split_buffer:private __split_buffer_common<1>{private:
                                                                                         ^
vec.cpp:13754:1: error: '__split_buffer' is not a class, namespace, or enumeration
__split_buffer::__split_buffer(class __split_buffer(*__c)):__first_((std::__1::(__c.__first_))),__begin_((std::__1::(__c.__begin_))),__end_((std::__1::(__c.__end_))),__end_cap_((std::__1::(__c.__end_cap_))){(__c.__first_=nullptr);
^
vec.cpp:13516:90: note: '__split_buffer' declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __split_buffer:private __split_buffer_common<1>{private:
                                                                                         ^
vec.cpp:13754:38: error: template '__split_buffer' cannot be referenced with a class specifier
__split_buffer::__split_buffer(class __split_buffer(*__c)):__first_((std::__1::(__c.__first_))),__begin_((std::__1::(__c.__begin_))),__end_((std::__1::(__c.__end_))),__end_cap_((std::__1::(__c.__end_cap_))){(__c.__first_=nullptr);
                                     ^
vec.cpp:13516:90: note: declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __split_buffer:private __split_buffer_common<1>{private:
                                                                                         ^
vec.cpp:13759:1: error: '__split_buffer' is not a class, namespace, or enumeration
__split_buffer::__split_buffer(class __split_buffer(*__c),typename remove_reference<__xcodeml_template_type_0_1>::type const&__a):__end_cap_(__xcodeml_identity<class::std::__1::__second_tag>::t()__a){if((__a,(__c.__alloc()))){{(this->__first_=__c.__first_);
^
vec.cpp:13516:90: note: '__split_buffer' declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __split_buffer:private __split_buffer_common<1>{private:
                                                                                         ^
vec.cpp:13759:38: error: template '__split_buffer' cannot be referenced with a class specifier
__split_buffer::__split_buffer(class __split_buffer(*__c),typename remove_reference<__xcodeml_template_type_0_1>::type const&__a):__end_cap_(__xcodeml_identity<class::std::__1::__second_tag>::t()__a){if((__a,(__c.__alloc()))){{(this->__first_=__c.__first_);
                                     ^
vec.cpp:13516:90: note: declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __split_buffer:private __split_buffer_common<1>{private:
                                                                                         ^
vec.cpp:13759:85: error: use of undeclared identifier '__xcodeml_template_type_0_1'
__split_buffer::__split_buffer(class __split_buffer(*__c),typename remove_reference<__xcodeml_template_type_0_1>::type const&__a):__end_cap_(__xcodeml_identity<class::std::__1::__second_tag>::t()__a){if((__a,(__c.__alloc()))){{(this->__first_=__c.__first_);
                                                                                    ^
vec.cpp:13759:115: error: parameter declarator cannot be qualified
__split_buffer::__split_buffer(class __split_buffer(*__c),typename remove_reference<__xcodeml_template_type_0_1>::type const&__a):__end_cap_(__xcodeml_identity<class::std::__1::__second_tag>::t()__a){if((__a,(__c.__alloc()))){{(this->__first_=__c.__first_);
                                                                                                                ~~^
vec.cpp:13759:120: error: expected ')'
__split_buffer::__split_buffer(class __split_buffer(*__c),typename remove_reference<__xcodeml_template_type_0_1>::type const&__a):__end_cap_(__xcodeml_identity<class::std::__1::__second_tag>::t()__a){if((__a,(__c.__alloc()))){{(this->__first_=__c.__first_);
                                                                                                                       ^
vec.cpp:13759:31: note: to match this '('
__split_buffer::__split_buffer(class __split_buffer(*__c),typename remove_reference<__xcodeml_template_type_0_1>::type const&__a):__end_cap_(__xcodeml_identity<class::std::__1::__second_tag>::t()__a){if((__a,(__c.__alloc()))){{(this->__first_=__c.__first_);
                              ^
vec.cpp:13775:7: error: template '__split_buffer' cannot be referenced with a class specifier
class __split_buffer&__split_buffer::operator=(class __split_buffer(*__c)){(this->clear());
      ^
vec.cpp:13516:90: note: declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __split_buffer:private __split_buffer_common<1>{private:
                                                                                         ^
vec.cpp:13775:22: error: '__split_buffer' is not a class, namespace, or enumeration
class __split_buffer&__split_buffer::operator=(class __split_buffer(*__c)){(this->clear());
                     ^
vec.cpp:13516:90: note: '__split_buffer' declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __split_buffer:private __split_buffer_common<1>{private:
                                                                                         ^
vec.cpp:13775:54: error: template '__split_buffer' cannot be referenced with a class specifier
class __split_buffer&__split_buffer::operator=(class __split_buffer(*__c)){(this->clear());
                                                     ^
vec.cpp:13516:90: note: declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __split_buffer:private __split_buffer_common<1>{private:
                                                                                         ^
vec.cpp:13785:6: error: '__split_buffer' is not a class, namespace, or enumeration
void __split_buffer::swap(class __split_buffer&__x){(std::__1::(this->__first_,__x.__first_));
     ^
vec.cpp:13516:90: note: '__split_buffer' declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __split_buffer:private __split_buffer_common<1>{private:
                                                                                         ^
vec.cpp:13785:33: error: template '__split_buffer' cannot be referenced with a class specifier
void __split_buffer::swap(class __split_buffer&__x){(std::__1::(this->__first_,__x.__first_));
                                ^
vec.cpp:13516:90: note: declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __split_buffer:private __split_buffer_common<1>{private:
                                                                                         ^
vec.cpp:13791:6: error: '__split_buffer' is not a class, namespace, or enumeration
void __split_buffer::reserve(typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::size_type __n){if((__n,(this->capacity()))){{__split_buffer<__xcodeml_template_type_0_0,typename remove_reference<__xcodeml_template_type_0_1>::type&> =__n 0(());
     ^
vec.cpp:13516:90: note: '__split_buffer' declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __split_buffer:private __split_buffer_common<1>{private:
                                                                                         ^
vec.cpp:13791:82: error: use of undeclared identifier '__xcodeml_template_type_0_1'
void __split_buffer::reserve(typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::size_type __n){if((__n,(this->capacity()))){{__split_buffer<__xcodeml_template_type_0_0,typename remove_reference<__xcodeml_template_type_0_1>::type&> =__n 0(());
                                                                                 ^
vec.cpp:13791:112: error: no type named 'type' in the global namespace
void __split_buffer::reserve(typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::size_type __n){if((__n,(this->capacity()))){{__split_buffer<__xcodeml_template_type_0_0,typename remove_reference<__xcodeml_template_type_0_1>::type&> =__n 0(());
                                                                                                             ~~^
vec.cpp:13791:82: error: use of undeclared identifier '__xcodeml_template_type_0_1'
void __split_buffer::reserve(typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::size_type __n){if((__n,(this->capacity()))){{__split_buffer<__xcodeml_template_type_0_0,typename remove_reference<__xcodeml_template_type_0_1>::type&> =__n 0(());
                                                                                 ^
vec.cpp:13791:112: error: no type named 'type' in the global namespace
void __split_buffer::reserve(typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::size_type __n){if((__n,(this->capacity()))){{__split_buffer<__xcodeml_template_type_0_0,typename remove_reference<__xcodeml_template_type_0_1>::type&> =__n 0(());
                                                                                                             ~~^
vec.cpp:13791:119: error: parameter declarator cannot be qualified
void __split_buffer::reserve(typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::size_type __n){if((__n,(this->capacity()))){{__split_buffer<__xcodeml_template_type_0_0,typename remove_reference<__xcodeml_template_type_0_1>::type&> =__n 0(());
                                                                                                                    ~~^
vec.cpp:13791:129: error: expected ')'
void __split_buffer::reserve(typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::size_type __n){if((__n,(this->capacity()))){{__split_buffer<__xcodeml_template_type_0_0,typename remove_reference<__xcodeml_template_type_0_1>::type&> =__n 0(());
                                                                                                                                ^
vec.cpp:13791:29: note: to match this '('
void __split_buffer::reserve(typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::size_type __n){if((__n,(this->capacity()))){{__split_buffer<__xcodeml_template_type_0_0,typename remove_reference<__xcodeml_template_type_0_1>::type&> =__n 0(());
                            ^
vec.cpp:13799:6: error: '__split_buffer' is not a class, namespace, or enumeration
void __split_buffer::shrink_to_fit(){if(((this->capacity()),(this->size()))){{try{__split_buffer<__xcodeml_template_type_0_0,typename remove_reference<__xcodeml_template_type_0_1>::type&> =(this->size())0(());
     ^
vec.cpp:13516:90: note: '__split_buffer' declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __split_buffer:private __split_buffer_common<1>{private:
                                                                                         ^
vec.cpp:13810:6: error: '__split_buffer' is not a class, namespace, or enumeration
void __split_buffer::push_front(__xcodeml_template_type_0_0 const&__x){if((this->__begin_,this->__first_)){{if((this->__end_,(()))){{typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::difference_type __d=((()),this->__end_);
     ^
vec.cpp:13516:90: note: '__split_buffer' declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __split_buffer:private __split_buffer_common<1>{private:
                                                                                         ^
vec.cpp:13826:6: error: '__split_buffer' is not a class, namespace, or enumeration
void __split_buffer::push_front(__xcodeml_template_type_0_0(*__x)){if((this->__begin_,this->__first_)){{if((this->__end_,(()))){{typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::difference_type __d=((()),this->__end_);
     ^
vec.cpp:13516:90: note: '__split_buffer' declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __split_buffer:private __split_buffer_common<1>{private:
                                                                                         ^
vec.cpp:13842:6: error: '__split_buffer' is not a class, namespace, or enumeration
void __split_buffer::push_back(__xcodeml_template_type_0_0 const&__x){if((this->__end_,(()))){{if((this->__begin_,this->__first_)){{typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::difference_type __d=(this->__begin_,this->__first_);
     ^
vec.cpp:13516:90: note: '__split_buffer' declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __split_buffer:private __split_buffer_common<1>{private:
                                                                                         ^
vec.cpp:13858:6: error: '__split_buffer' is not a class, namespace, or enumeration
void __split_buffer::push_back(__xcodeml_template_type_0_0(*__x)){if((this->__end_,(()))){{if((this->__begin_,this->__first_)){{typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::difference_type __d=(this->__begin_,this->__first_);
     ^
vec.cpp:13516:90: note: '__split_buffer' declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __split_buffer:private __split_buffer_common<1>{private:
                                                                                         ^
vec.cpp:13874:52: error: '__split_buffer' is not a class, namespace, or enumeration
template<typename __xcodeml_template_type_1_0>void __split_buffer::emplace_back(void/*__args*/){if((this->__end_,(()))){{if((this->__begin_,this->__first_)){{typename allocator_traits<typename remove_reference<__xcodeml_template_type_0_1>::type>::difference_type __d=(this->__begin_,this->__first_);
                                                   ^
vec.cpp:13516:90: note: '__split_buffer' declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __split_buffer:private __split_buffer_common<1>{private:
                                                                                         ^
vec.cpp:13901:6: error: '__vector_base_common' is not a class, namespace, or enumeration
void __vector_base_common::__throw_length_error()const{(std::__1::__throw_length_error("vector"));
     ^
vec.cpp:13894:49: note: '__vector_base_common' declared here
namespace std{namespace __1{template<bool>class __vector_base_common{protected:
                                                ^
vec.cpp:13903:6: error: '__vector_base_common' is not a class, namespace, or enumeration
void __vector_base_common::__throw_out_of_range()const{(std::__1::__throw_out_of_range("vector"));
     ^
vec.cpp:13894:49: note: '__vector_base_common' declared here
namespace std{namespace __1{template<bool>class __vector_base_common{protected:
                                                ^
vec.cpp:13913:8: warning: typedef requires a name [-Wmissing-declarations]
public:typedef allocator_traits<__xcodeml_template_type_0_1>;
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:13926:11: warning: declaration does not declare anything [-Wmissing-declarations]
protected:__compressed_pair<typename allocator_traits<__xcodeml_template_type_0_1>::pointer,__xcodeml_template_type_0_1>;
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:13941:182: error: expected expression
protected:typename allocator_traits<__xcodeml_template_type_0_1>::size_type capacity()const{return static_cast<typename allocator_traits<__xcodeml_template_type_0_1>::size_type>(((()),this->__begin_));
                                                                                                                                                                                     ^
vec.cpp:13944:127: error: expected a type
protected:void __copy_assign_alloc(class __vector_base const&__c){((__c,__xcodeml_identity<integral_constant<bool,expression> >::t()));
                                                                                                                              ^
vec.cpp:13944:130: error: no member named 't' in the global namespace
protected:void __copy_assign_alloc(class __vector_base const&__c){((__c,__xcodeml_identity<integral_constant<bool,expression> >::t()));
                                                                                                                               ~~^
vec.cpp:13946:121: error: expected a type
protected:void __move_assign_alloc(class __vector_base&__c){((__c,__xcodeml_identity<integral_constant<bool,expression> >::t()));
                                                                                                                        ^
vec.cpp:13946:124: error: no member named 't' in the global namespace
protected:void __move_assign_alloc(class __vector_base&__c){((__c,__xcodeml_identity<integral_constant<bool,expression> >::t()));
                                                                                                                         ~~^
vec.cpp:13949:114: error: expected expression
private:void __copy_assign_alloc(class __vector_base const&__c,class::std::__1::integral_constant<bool,1>){if(((()),(__c.__alloc()))){{(this->clear());
                                                                                                                 ^
vec.cpp:13950:49: error: expected unqualified-id
(allocator_traits<__xcodeml_template_type_0_1>::.deallocate((()),this->__begin_,(this->capacity())));
                                                ^
vec.cpp:13950:63: error: expected expression
(allocator_traits<__xcodeml_template_type_0_1>::.deallocate((()),this->__begin_,(this->capacity())));
                                                              ^
vec.cpp:13951:34: error: expected expression
(this->__begin_=(this->__end_=((())=nullptr)));
                                 ^
vec.cpp:13953:4: error: expected expression
((())=(__c.__alloc()));
   ^
vec.cpp:13956:105: error: expected expression
private:void __move_assign_alloc(class __vector_base&__c,class::std::__1::integral_constant<bool,1>){((())=(std::__1::((__c.__alloc()))));
                                                                                                        ^
vec.cpp:13956:119: error: expected unqualified-id
private:void __move_assign_alloc(class __vector_base&__c,class::std::__1::integral_constant<bool,1>){((())=(std::__1::((__c.__alloc()))));
                                                                                                                      ^
vec.cpp:13979:17: error: template 'allocator' cannot be referenced with a class specifier
protected:class allocator const&__alloc()const{return(this->__end_cap_.second());
                ^
vec.cpp:8587:53: note: declared here
template<typename __xcodeml_template_type_0_0>class allocator{public:
                                                    ^
vec.cpp:13989:2: error: 'allocator_traits' is not a class, namespace, or enumeration
(allocator_traits::deallocate((this->__alloc()),this->__begin_,(this->capacity())));
 ^
vec.cpp:8453:53: note: 'allocator_traits' declared here
template<typename __xcodeml_template_type_0_0>class allocator_traits{public:typedef __xcodeml_template_type_0_0 allocator_type;
                                                    ^
vec.cpp:13997:40: error: 'allocator_traits' is not a class, namespace, or enumeration
while((__new_last!=__soon_to_be_end)){(allocator_traits::destroy((this->__alloc()),(std::__1::__to_raw_pointer((--__soon_to_be_end)))));};
                                       ^
vec.cpp:8453:53: note: 'allocator_traits' declared here
template<typename __xcodeml_template_type_0_0>class allocator_traits{public:typedef __xcodeml_template_type_0_0 allocator_type;
                                                    ^
vec.cpp:14009:6: error: '__vector_base' is not a class, namespace, or enumeration
void __vector_base::__destruct_at_end(typename allocator_traits<__xcodeml_template_type_0_1>::pointer __new_last){typename allocator_traits<__xcodeml_template_type_0_1>::pointer __soon_to_be_end=this->__end_;
     ^
vec.cpp:13911:90: note: '__vector_base' declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __vector_base:protected __vector_base_common<1>{public:
                                                                                         ^
vec.cpp:14009:65: error: use of undeclared identifier '__xcodeml_template_type_0_1'
void __vector_base::__destruct_at_end(typename allocator_traits<__xcodeml_template_type_0_1>::pointer __new_last){typename allocator_traits<__xcodeml_template_type_0_1>::pointer __soon_to_be_end=this->__end_;
                                                                ^
vec.cpp:14009:65: error: use of undeclared identifier '__xcodeml_template_type_0_1'
vec.cpp:14009:95: error: parameter declarator cannot be qualified
void __vector_base::__destruct_at_end(typename allocator_traits<__xcodeml_template_type_0_1>::pointer __new_last){typename allocator_traits<__xcodeml_template_type_0_1>::pointer __soon_to_be_end=this->__end_;
                                                                                            ~~^
vec.cpp:14009:103: error: expected ')'
void __vector_base::__destruct_at_end(typename allocator_traits<__xcodeml_template_type_0_1>::pointer __new_last){typename allocator_traits<__xcodeml_template_type_0_1>::pointer __soon_to_be_end=this->__end_;
                                                                                                      ^
vec.cpp:14009:38: note: to match this '('
void __vector_base::__destruct_at_end(typename allocator_traits<__xcodeml_template_type_0_1>::pointer __new_last){typename allocator_traits<__xcodeml_template_type_0_1>::pointer __soon_to_be_end=this->__end_;
                                     ^
vec.cpp:14013:1: error: '__vector_base' is not a class, namespace, or enumeration
__vector_base::__vector_base():__begin_(nullptr),__end_(nullptr),__end_cap_(nullptr){}
^
vec.cpp:13911:90: note: '__vector_base' declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __vector_base:protected __vector_base_common<1>{public:
                                                                                         ^
vec.cpp:14014:1: error: '__vector_base' is not a class, namespace, or enumeration
__vector_base::__vector_base(__xcodeml_template_type_0_1 const&__a):__begin_(nullptr),__end_(nullptr),__end_cap_(nullptr __a){}
^
vec.cpp:13911:90: note: '__vector_base' declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __vector_base:protected __vector_base_common<1>{public:
                                                                                         ^
vec.cpp:14014:30: error: unknown type name '__xcodeml_template_type_0_1'
__vector_base::__vector_base(__xcodeml_template_type_0_1 const&__a):__begin_(nullptr),__end_(nullptr),__end_cap_(nullptr __a){}
                             ^
vec.cpp:14015:1: error: '__vector_base' is not a class, namespace, or enumeration
__vector_base::__vector_base(__xcodeml_template_type_0_1(*__a)):__begin_(nullptr),__end_(nullptr),__end_cap_(nullptr(std::(__a))){}
^
vec.cpp:13911:90: note: '__vector_base' declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __vector_base:protected __vector_base_common<1>{public:
                                                                                         ^
vec.cpp:14016:1: error: '__vector_base' is not a class, namespace, or enumeration
__vector_base::~__vector_base(){if((this->__begin_,nullptr)){{(this->clear());
^
vec.cpp:13911:90: note: '__vector_base' declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class __vector_base:protected __vector_base_common<1>{public:
                                                                                         ^
vec.cpp:14021:9: warning: typedef requires a name [-Wmissing-declarations]
private:typedef __vector_base<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>;
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:14022:9: warning: typedef requires a name [-Wmissing-declarations]
private:typedef allocator<__xcodeml_template_type_0_0>;
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:14034:27: error: expected member name or ';' after declaration specifiers
public:typedef __wrap_iter<typename __vector_base<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>::pointer>;
       ~~~~~~~~~~~~~~~~~~~^
vec.cpp:14035:27: error: expected member name or ';' after declaration specifiers
public:typedef __wrap_iter<typename __vector_base<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>::const_pointer>;
       ~~~~~~~~~~~~~~~~~~~^
vec.cpp:14036:44: error: expected '>'
public:typedef reverse_iterator<__wrap_iter<typename __vector_base<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>::pointer> >;
                                           ^
vec.cpp:14036:44: error: expected member name or ';' after declaration specifiers
public:typedef reverse_iterator<__wrap_iter<typename __vector_base<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>::pointer> >;
       ~~~~~~~                             ^
vec.cpp:14037:44: error: expected '>'
public:typedef reverse_iterator<__wrap_iter<typename __vector_base<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>::const_pointer> >;
                                           ^
vec.cpp:14037:44: error: expected member name or ';' after declaration specifiers
public:typedef reverse_iterator<__wrap_iter<typename __vector_base<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>::const_pointer> >;
       ~~~~~~~                             ^
vec.cpp:14047:157: error: parameter declarator cannot be qualified
public:template<typename __xcodeml_template_type_1_0>vector(__xcodeml_template_type_1_0 __first,typename enable_if<expression,__xcodeml_template_type_1_0>::type __last)
                                                                                                                                                          ~~^
vec.cpp:14047:162: error: expected ')'
public:template<typename __xcodeml_template_type_1_0>vector(__xcodeml_template_type_1_0 __first,typename enable_if<expression,__xcodeml_template_type_1_0>::type __last)
                                                                                                                                                                 ^
vec.cpp:14047:60: note: to match this '('
public:template<typename __xcodeml_template_type_1_0>vector(__xcodeml_template_type_1_0 __first,typename enable_if<expression,__xcodeml_template_type_1_0>::type __last)
                                                           ^
vec.cpp:14047:169: error: expected ';' at end of declaration list
public:template<typename __xcodeml_template_type_1_0>vector(__xcodeml_template_type_1_0 __first,typename enable_if<expression,__xcodeml_template_type_1_0>::type __last)
                                                                                                                                                                        ^
                                                                                                                                                                        ;
vec.cpp:14064:91: error: member 'type' declared as a template
public:template<typename __xcodeml_template_type_1_0>typename enable_if<expression,void>::type assign(__xcodeml_template_type_1_0 __first,__xcodeml_template_type_1_0 __last)
       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                     ^
vec.cpp:14064:95: error: expected ';' at end of declaration list
public:template<typename __xcodeml_template_type_1_0>typename enable_if<expression,void>::type assign(__xcodeml_template_type_1_0 __first,__xcodeml_template_type_1_0 __last)
                                                                                              ^
                                                                                              ;
vec.cpp:14071:19: error: expected member name or ';' after declaration specifiers
public:__wrap_iter<typename __vector_base<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>::pointer>;
       ~~~~~~~~~~~^
vec.cpp:14072:19: error: expected member name or ';' after declaration specifiers
public:__wrap_iter<typename __vector_base<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>::const_pointer>;
       ~~~~~~~~~~~^
vec.cpp:14073:19: error: expected member name or ';' after declaration specifiers
public:__wrap_iter<typename __vector_base<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>::pointer>;
       ~~~~~~~~~~~^
vec.cpp:14074:19: error: expected member name or ';' after declaration specifiers
public:__wrap_iter<typename __vector_base<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>::const_pointer>;
       ~~~~~~~~~~~^
vec.cpp:14075:36: error: expected '>'
public:reverse_iterator<__wrap_iter<typename __vector_base<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>::pointer> >{return __xcodeml_identity<reverse_iterator<__wrap_iter<typename __vector_base<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>::pointer> > >::t((()));
                                   ^
vec.cpp:14075:36: error: expected member name or ';' after declaration specifiers
vec.cpp:14124:87: error: expected ';' at end of declaration list
public:template<typename __xcodeml_template_type_1_0>void emplace_back(void/*__args*/)
                                                                                      ^
                                                                                      ;
vec.cpp:14126:19: error: expected member name or ';' after declaration specifiers
public:__wrap_iter<typename __vector_base<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>::pointer>;
       ~~~~~~~~~~~^
vec.cpp:14127:19: error: expected member name or ';' after declaration specifiers
public:__wrap_iter<typename __vector_base<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>::pointer>;
       ~~~~~~~~~~~^
vec.cpp:14128:65: error: expected member name or ';' after declaration specifiers
public:template<typename __xcodeml_template_type_1_0>__wrap_iter<typename __vector_base<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>::pointer>
                                                     ~~~~~~~~~~~^
vec.cpp:14130:177: error: member 'pointer' declared as a template
public:template<typename __xcodeml_template_type_1_0>typename enable_if<expression,__wrap_iter<typename __vector_base<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>::pointer> >::type insert(__wrap_iter<typename __vector_base<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>::const_pointer>,__xcodeml_template_type_1_0 __first,__xcodeml_template_type_1_0 __last)
       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                                                                                                           ^
vec.cpp:14130:184: error: expected ';' at end of declaration list
public:template<typename __xcodeml_template_type_1_0>typename enable_if<expression,__wrap_iter<typename __vector_base<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>::pointer> >::type insert(__wrap_iter<typename __vector_base<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>::const_pointer>,__xcodeml_template_type_1_0 __first,__xcodeml_template_type_1_0 __last)
                                                                                                                                                                                       ^
                                                                                                                                                                                       ;
vec.cpp:14135:19: error: expected member name or ';' after declaration specifiers
public:__wrap_iter<typename __vector_base<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>::pointer>;
       ~~~~~~~~~~~^
vec.cpp:14153:92: error: member 'type' declared as a template
private:template<typename __xcodeml_template_type_1_0>typename enable_if<expression,void>::type __construct_at_end(__xcodeml_template_type_1_0 __first,__xcodeml_template_type_1_0 __last,typename __vector_base<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>::size_type __n)
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                     ^
vec.cpp:14153:96: error: expected ';' at end of declaration list
private:template<typename __xcodeml_template_type_1_0>typename enable_if<expression,void>::type __construct_at_end(__xcodeml_template_type_1_0 __first,__xcodeml_template_type_1_0 __last,typename __vector_base<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>::size_type __n)
                                                                                               ^
                                                                                               ;
vec.cpp:14156:20: error: expected member name or ';' after declaration specifiers
private:__wrap_iter<typename __vector_base<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>::pointer>;
        ~~~~~~~~~~~^
vec.cpp:14157:20: error: expected member name or ';' after declaration specifiers
private:__wrap_iter<typename __vector_base<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>::const_pointer>;
        ~~~~~~~~~~~^
vec.cpp:14168:116: error: expected ';' at end of declaration list
private:template<typename __xcodeml_template_type_1_0>void __push_back_slow_path(__xcodeml_template_type_1_0(*__x))
                                                                                                                   ^
                                                                                                                   ;
vec.cpp:14042:54: error: expected class member or base class name
public:vector(__xcodeml_template_type_0_1 const&__a):(__a){}
                                                     ^
vec.cpp:14061:81: error: use of undeclared identifier '__il'
public:class vector&operator=(initializer_list<__xcodeml_template_type_0_0>){(((__il.begin()),(__il.end())));
                                                                                ^
vec.cpp:14061:96: error: use of undeclared identifier '__il'
public:class vector&operator=(initializer_list<__xcodeml_template_type_0_0>){(((__il.begin()),(__il.end())));
                                                                                               ^
vec.cpp:14067:70: error: use of undeclared identifier '__il'
public:void assign(initializer_list<__xcodeml_template_type_0_0>){(((__il.begin()),(__il.end())));
                                                                     ^
vec.cpp:14067:85: error: use of undeclared identifier '__il'
public:void assign(initializer_list<__xcodeml_template_type_0_0>){(((__il.begin()),(__il.end())));
                                                                                    ^
vec.cpp:14069:68: error: member reference base type 'const vector<__xcodeml_template_type_0_0, __xcodeml_template_type_0_1> *' is not a structure or union
public:__xcodeml_template_type_0_1 get_allocator()const{return(this.__alloc());
                                                               ~~~~^~~~~~~~
vec.cpp:14105:13: error: member reference base type 'vector<__xcodeml_template_type_0_0, __xcodeml_template_type_0_1> *' is not a structure or union
return(*this.__begin_);
        ~~~~^~~~~~~~~
vec.cpp:14108:13: error: member reference base type 'const vector<__xcodeml_template_type_0_0, __xcodeml_template_type_0_1> *' is not a structure or union
return(*this.__begin_);
        ~~~~^~~~~~~~~
vec.cpp:14111:14: error: member reference base type 'vector<__xcodeml_template_type_0_0, __xcodeml_template_type_0_1> *' is not a structure or union
return(*(this.__end_,1));
         ~~~~^~~~~~~
vec.cpp:14114:14: error: member reference base type 'const vector<__xcodeml_template_type_0_0, __xcodeml_template_type_0_1> *' is not a structure or union
return(*(this.__end_,1));
         ~~~~^~~~~~~
vec.cpp:14116:62: error: expected unqualified-id
public:__xcodeml_template_type_0_0(*data()){return(std::__1::(this.__begin_));
                                                             ^
vec.cpp:14116:67: error: member reference base type 'vector<__xcodeml_template_type_0_0, __xcodeml_template_type_0_1> *' is not a structure or union
public:__xcodeml_template_type_0_0(*data()){return(std::__1::(this.__begin_));
                                                              ~~~~^~~~~~~~~
vec.cpp:14118:73: error: expected unqualified-id
public:__xcodeml_template_type_0_0 const(*data()const){return(std::__1::(this.__begin_));
                                                                        ^
vec.cpp:14118:78: error: member reference base type 'const vector<__xcodeml_template_type_0_0, __xcodeml_template_type_0_1> *' is not a structure or union
public:__xcodeml_template_type_0_0 const(*data()const){return(std::__1::(this.__begin_));
                                                                         ~~~~^~~~~~~~~
vec.cpp:14120:124: error: no member named '__xcodeml_template_type_1_0' in namespace 'std::__1'
public:template<typename __xcodeml_template_type_1_0>void __emplace_back(__xcodeml_template_type_1_0(*__arg)){(((std::__1::__xcodeml_template_type_1_0(__arg))));
                                                                                                                 ~~~~~~~~~~^
vec.cpp:14137:74: error: expected unqualified-id
(__vector_base<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>::.clear());
                                                                         ^
vec.cpp:14165:74: error: expected unqualified-id
(__vector_base<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>::.__destruct_at_end(__new_last));
                                                                         ^
vec.cpp:14186:6: error: 'vector' is not a class, namespace, or enumeration
void vector::__swap_out_circular_buffer(__split_buffer<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1&>){(this->__annotate_delete());
     ^
vec.cpp:14020:90: note: 'vector' declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class vector:private __vector_base<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>{private:
                                                                                         ^
vec.cpp:14195:82: error: definition or redeclaration of 'pointer' cannot name the global scope
typename __vector_base<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>::pointer vector::__swap_out_circular_buffer(__split_buffer<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1&>,typename __vector_base<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>::pointer __p){(this->__annotate_delete());
                                                                               ~~^
vec.cpp:14195:82: error: no member named 'pointer' in the global namespace
typename __vector_base<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>::pointer vector::__swap_out_circular_buffer(__split_buffer<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1&>,typename __vector_base<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>::pointer __p){(this->__annotate_delete());
                                                                               ~~^
vec.cpp:14195:89: error: expected ';' after top level declarator
typename __vector_base<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>::pointer vector::__swap_out_circular_buffer(__split_buffer<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1&>,typename __vector_base<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>::pointer __p){(this->__annotate_delete());
                                                                                        ^
                                                                                        ;
vec.cpp:14195:90: error: 'vector' is not a class, namespace, or enumeration
typename __vector_base<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>::pointer vector::__swap_out_circular_buffer(__split_buffer<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1&>,typename __vector_base<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>::pointer __p){(this->__annotate_delete());
                                                                                         ^
vec.cpp:14020:90: note: 'vector' declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class vector:private __vector_base<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>{private:
                                                                                         ^
vec.cpp:14606:8: warning: typedef requires a name [-Wmissing-declarations]
public:typedef allocator_traits<__xcodeml_template_type_0_0>;
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:14614:109: error: expected a type
public:typedef reverse_iterator<__bit_iterator<class vector<bool,__xcodeml_template_type_0_0>,0,expression> >;
                                                                                                            ^
vec.cpp:14615:109: error: expected a type
public:typedef reverse_iterator<__bit_iterator<class vector<bool,__xcodeml_template_type_0_0>,1,expression> >;
                                                                                                            ^
vec.cpp:14618:9: warning: typedef requires a name [-Wmissing-declarations]
private:typedef allocator_traits<typename __rebind_alloc_helper<allocator_traits<__xcodeml_template_type_0_0>,typename allocator_traits<__xcodeml_template_type_0_0>::size_type>::type>;
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:14623:9: warning: declaration does not declare anything [-Wmissing-declarations]
private:__compressed_pair<typename allocator_traits<__xcodeml_template_type_0_0>::size_type,typename __rebind_alloc_helper<allocator_traits<__xcodeml_template_type_0_0>,typename allocator_traits<__xcodeml_template_type_0_0>::size_type>::type>;
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:14626:8: warning: typedef requires a name [-Wmissing-declarations]
public:typedef __bit_const_reference<class vector<bool,__xcodeml_template_type_0_0> >;
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:14636:63: error: type name requires a specifier or qualifier
private:static unsigned int const __bits_per_word=static_cast<>(((sizeof(typename allocator_traits<__xcodeml_template_type_0_0>::size_type))*8));
                                                              ^
vec.cpp:14649:175: error: C++ requires a type specifier for all declarations
public:template<typename __xcodeml_template_type_1_0>vector(__xcodeml_template_type_1_0 __first,__xcodeml_template_type_1_0 __last,typename enable_if<expression,void>::type(*))
                                                                                                                                                                              ^
vec.cpp:14649:169: error: parameter declarator cannot be qualified
public:template<typename __xcodeml_template_type_1_0>vector(__xcodeml_template_type_1_0 __first,__xcodeml_template_type_1_0 __last,typename enable_if<expression,void>::type(*))
                                                                                                                                                                      ~~^
vec.cpp:14649:177: error: expected ';' at end of declaration list
public:template<typename __xcodeml_template_type_1_0>vector(__xcodeml_template_type_1_0 __first,__xcodeml_template_type_1_0 __last,typename enable_if<expression,void>::type(*))
                                                                                                                                                                                ^
                                                                                                                                                                                ;
vec.cpp:14664:91: error: member 'type' declared as a template
public:template<typename __xcodeml_template_type_1_0>typename enable_if<expression,void>::type assign(__xcodeml_template_type_1_0 __first,__xcodeml_template_type_1_0 __last)
       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                     ^
vec.cpp:14664:95: error: expected ';' at end of declaration list
public:template<typename __xcodeml_template_type_1_0>typename enable_if<expression,void>::type assign(__xcodeml_template_type_1_0 __first,__xcodeml_template_type_1_0 __last)
                                                                                              ^
                                                                                              ;
vec.cpp:14680:83: error: expected member name or ';' after declaration specifiers
public:__bit_iterator<class vector<bool,__xcodeml_template_type_0_0>,0,expression>{return((0));
                                                                                  ^
vec.cpp:14709:8: warning: declaration does not declare anything [-Wmissing-declarations]
public:__bit_const_reference<class vector<bool,__xcodeml_template_type_0_0> >;
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vec.cpp:14710:82: error: expected member name or ';' after declaration specifiers
public:__bit_reference<class vector<bool,__xcodeml_template_type_0_0>,expression>{return((0));
                                                                                 ^
vec.cpp:14723:129: error: expected member name or ';' after declaration specifiers
public:template<typename __xcodeml_template_type_1_0>__bit_iterator<class vector<bool,__xcodeml_template_type_0_0>,0,expression>{return((position,__xcodeml_identity<bool>::t((std::__1::__xcodeml_template_type_1_0(__args)))));
                                                                                                                                ^
vec.cpp:14728:145: error: expected member name or ';' after declaration specifiers
public:template<typename __xcodeml_template_type_1_0>typename enable_if<expression,__bit_iterator<class vector<bool,__xcodeml_template_type_0_0>,0,expression> >::type insert(__bit_iterator<class vector<bool,__xcodeml_template_type_0_0>,1,expression>,__xcodeml_template_type_1_0 __first,__xcodeml_template_type_1_0 __last)
                                                                                                                                                ^
vec.cpp:14750:92: error: member 'type' declared as a template
private:template<typename __xcodeml_template_type_1_0>typename enable_if<expression,void>::type __construct_at_end(__xcodeml_template_type_1_0 __first,__xcodeml_template_type_1_0 __last)
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                     ^
vec.cpp:14750:96: error: expected ';' at end of declaration list
private:template<typename __xcodeml_template_type_1_0>typename enable_if<expression,void>::type __construct_at_end(__xcodeml_template_type_1_0 __first,__xcodeml_template_type_1_0 __last)
                                                                                               ^
                                                                                               ;
vec.cpp:14752:83: error: expected member name or ';' after declaration specifiers
private:__bit_reference<class vector<bool,__xcodeml_template_type_0_0>,expression>{return __xcodeml_identity<__bit_reference<class vector<bool,__xcodeml_template_type_0_0>,expression> >::t((this->__begin_,(__pos/__bits_per_word)),(__xcodeml_identity<typename allocator_traits<__xcodeml_template_type_0_0>::size_type>::t(1),(__pos%__bits_per_word)));
                                                                                  ^
vec.cpp:14780:15: error: no template named '__bit_array'
public:friend __bit_array<class vector<bool,__xcodeml_template_type_0_0> >;
              ^
vec.cpp:14669:120: error: member reference base type 'const vector<bool, type-parameter-0-0> *' is not a structure or union
public:__xcodeml_template_type_0_0 get_allocator()const{return __xcodeml_identity<__xcodeml_template_type_0_0>::t((this.__alloc()));
                                                                                                                   ~~~~^~~~~~~~
vec.cpp:14672:126: error: expected expression
public:typename allocator_traits<__xcodeml_template_type_0_0>::size_type capacity()const{return(__internal_cap_to_external((())));
                                                                                                                             ^
vec.cpp:14719:144: error: no member named '__xcodeml_template_type_1_0' in namespace 'std::__1'
public:template<typename __xcodeml_template_type_1_0>void emplace_back(void/*__args*/){(this->push_back(__xcodeml_identity<bool>::t((std::__1::__xcodeml_template_type_1_0(__args)))));
                                                                                                                                     ~~~~~~~~~~^
vec.cpp:14719:172: error: use of undeclared identifier '__args'
public:template<typename __xcodeml_template_type_1_0>void emplace_back(void/*__args*/){(this->push_back(__xcodeml_identity<bool>::t((std::__1::__xcodeml_template_type_1_0(__args)))));
                                                                                                                                                                           ^
vec.cpp:14737:187: error: expected unqualified-id
public:static void swap(__bit_reference<class vector<bool,__xcodeml_template_type_0_0>,expression>,__bit_reference<class vector<bool,__xcodeml_template_type_0_0>,expression>){(std::__1::(__x,__y));
                                                                                                                                                                                          ^
vec.cpp:14737:188: error: use of undeclared identifier '__x'
public:static void swap(__bit_reference<class vector<bool,__xcodeml_template_type_0_0>,expression>,__bit_reference<class vector<bool,__xcodeml_template_type_0_0>,expression>){(std::__1::(__x,__y));
                                                                                                                                                                                           ^
vec.cpp:14737:192: error: use of undeclared identifier '__y'
public:static void swap(__bit_reference<class vector<bool,__xcodeml_template_type_0_0>,expression>,__bit_reference<class vector<bool,__xcodeml_template_type_0_0>,expression>){(std::__1::(__x,__y));
                                                                                                                                                                                               ^
vec.cpp:14770:146: error: expected a type
private:void __move_assign_alloc(class vector<bool,__xcodeml_template_type_0_0>&__c){((__c,__xcodeml_identity<integral_constant<bool,expression> >::t()));
                                                                                                                                                 ^
vec.cpp:14770:149: error: no member named 't' in the global namespace
private:void __move_assign_alloc(class vector<bool,__xcodeml_template_type_0_0>&__c){((__c,__xcodeml_identity<integral_constant<bool,expression> >::t()));
                                                                                                                                                  ~~^
vec.cpp:14772:132: error: expected expression
private:void __move_assign_alloc(class vector<bool,__xcodeml_template_type_0_0>&__c,class::std::__1::integral_constant<bool,1>){((())=(std::__1::((__c.__alloc()))));
                                                                                                                                   ^
vec.cpp:14772:146: error: expected unqualified-id
private:void __move_assign_alloc(class vector<bool,__xcodeml_template_type_0_0>&__c,class::std::__1::integral_constant<bool,1>){((())=(std::__1::((__c.__alloc()))));
                                                                                                                                                 ^
vec.cpp:14784:6: error: 'vector' is not a class, namespace, or enumeration
void vector::__invalidate_all_iterators(){}
     ^
vec.cpp:14020:90: note: 'vector' declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class vector:private __vector_base<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>{private:
                                                                                         ^
vec.cpp:14785:6: error: 'vector' is not a class, namespace, or enumeration
void vector::__vallocate(typename allocator_traits<__xcodeml_template_type_0_0>::size_type __n){if((__n,(this->max_size()))){(this.__throw_length_error());};
     ^
vec.cpp:14020:90: note: 'vector' declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class vector:private __vector_base<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>{private:
                                                                                         ^
vec.cpp:14785:82: error: parameter declarator cannot be qualified
void vector::__vallocate(typename allocator_traits<__xcodeml_template_type_0_0>::size_type __n){if((__n,(this->max_size()))){(this.__throw_length_error());};
                                                                               ~~^
vec.cpp:14785:92: error: expected ')'
void vector::__vallocate(typename allocator_traits<__xcodeml_template_type_0_0>::size_type __n){if((__n,(this->max_size()))){(this.__throw_length_error());};
                                                                                           ^
vec.cpp:14785:25: note: to match this '('
void vector::__vallocate(typename allocator_traits<__xcodeml_template_type_0_0>::size_type __n){if((__n,(this->max_size()))){(this.__throw_length_error());};
                        ^
vec.cpp:14791:6: error: 'vector' is not a class, namespace, or enumeration
void vector::__vdeallocate(){if((this.__begin_,nullptr)){{(allocator_traits<typename __rebind_alloc_helper<allocator_traits<__xcodeml_template_type_0_0>,typename allocator_traits<__xcodeml_template_type_0_0>::size_type>::type>::.deallocate((this.__alloc()),this.__begin_,(())));
     ^
vec.cpp:14020:90: note: 'vector' declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class vector:private __vector_base<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>{private:
                                                                                         ^
vec.cpp:14797:57: error: definition or redeclaration of 'size_type' cannot name the global scope
typename allocator_traits<__xcodeml_template_type_0_0>::size_type vector::max_size()const{typename allocator_traits<__xcodeml_template_type_0_0>::size_type __amax=(allocator_traits<typename __rebind_alloc_helper<allocator_traits<__xcodeml_template_type_0_0>,typename allocator_traits<__xcodeml_template_type_0_0>::size_type>::type>::.max_size((())));
                                                      ~~^
vec.cpp:14797:57: error: no member named 'size_type' in the global namespace
typename allocator_traits<__xcodeml_template_type_0_0>::size_type vector::max_size()const{typename allocator_traits<__xcodeml_template_type_0_0>::size_type __amax=(allocator_traits<typename __rebind_alloc_helper<allocator_traits<__xcodeml_template_type_0_0>,typename allocator_traits<__xcodeml_template_type_0_0>::size_type>::type>::.max_size((())));
                                                      ~~^
vec.cpp:14797:66: error: expected ';' after top level declarator
typename allocator_traits<__xcodeml_template_type_0_0>::size_type vector::max_size()const{typename allocator_traits<__xcodeml_template_type_0_0>::size_type __amax=(allocator_traits<typename __rebind_alloc_helper<allocator_traits<__xcodeml_template_type_0_0>,typename allocator_traits<__xcodeml_template_type_0_0>::size_type>::type>::.max_size((())));
                                                                 ^
                                                                 ;
vec.cpp:14797:67: error: 'vector' is not a class, namespace, or enumeration
typename allocator_traits<__xcodeml_template_type_0_0>::size_type vector::max_size()const{typename allocator_traits<__xcodeml_template_type_0_0>::size_type __amax=(allocator_traits<typename __rebind_alloc_helper<allocator_traits<__xcodeml_template_type_0_0>,typename allocator_traits<__xcodeml_template_type_0_0>::size_type>::type>::.max_size((())));
                                                                  ^
vec.cpp:14020:90: note: 'vector' declared here
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>class vector:private __vector_base<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>{private:
                                                                                         ^
vec.cpp:15096:325: error: use of undeclared identifier '__x'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator==(vector<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>,vector<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>){typename vector<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>::size_type const __sz=(__x.size());
                                                                                                                                                                                                                                                                                                                                    ^
vec.cpp:15097:15: error: use of undeclared identifier '__y'
return((__sz,(__y.size()))&&(std::__1::((__x.begin()),(__x.end()),(__y.begin()))));
              ^
vec.cpp:15097:40: error: expected unqualified-id
return((__sz,(__y.size()))&&(std::__1::((__x.begin()),(__x.end()),(__y.begin()))));
                                       ^
vec.cpp:15097:42: error: use of undeclared identifier '__x'
return((__sz,(__y.size()))&&(std::__1::((__x.begin()),(__x.end()),(__y.begin()))));
                                         ^
vec.cpp:15097:56: error: use of undeclared identifier '__x'
return((__sz,(__y.size()))&&(std::__1::((__x.begin()),(__x.end()),(__y.begin()))));
                                                       ^
vec.cpp:15097:68: error: use of undeclared identifier '__y'
return((__sz,(__y.size()))&&(std::__1::((__x.begin()),(__x.end()),(__y.begin()))));
                                                                   ^
vec.cpp:15099:238: error: use of undeclared identifier '__x'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator!=(vector<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>,vector<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>){return(!(__x,__y));
                                                                                                                                                                                                                                             ^
vec.cpp:15099:242: error: use of undeclared identifier '__y'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator!=(vector<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>,vector<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>){return(!(__x,__y));
                                                                                                                                                                                                                                                 ^
vec.cpp:15101:245: error: expected unqualified-id
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator<(vector<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>,vector<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>){return(std::__1::((__x.begin()),(__x.end()),(__y.begin()),(__y.end())));
                                                                                                                                                                                                                                                    ^
vec.cpp:15101:247: error: use of undeclared identifier '__x'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator<(vector<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>,vector<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>){return(std::__1::((__x.begin()),(__x.end()),(__y.begin()),(__y.end())));
                                                                                                                                                                                                                                                      ^
vec.cpp:15101:261: error: use of undeclared identifier '__x'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator<(vector<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>,vector<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>){return(std::__1::((__x.begin()),(__x.end()),(__y.begin()),(__y.end())));
                                                                                                                                                                                                                                                                    ^
vec.cpp:15101:273: error: use of undeclared identifier '__y'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator<(vector<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>,vector<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>){return(std::__1::((__x.begin()),(__x.end()),(__y.begin()),(__y.end())));
                                                                                                                                                                                                                                                                                ^
vec.cpp:15101:287: error: use of undeclared identifier '__y'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator<(vector<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>,vector<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>){return(std::__1::((__x.begin()),(__x.end()),(__y.begin()),(__y.end())));
                                                                                                                                                                                                                                                                                              ^
vec.cpp:15103:235: error: use of undeclared identifier '__y'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator>(vector<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>,vector<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>){return(__y,__x);
                                                                                                                                                                                                                                          ^
vec.cpp:15103:239: error: use of undeclared identifier '__x'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator>(vector<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>,vector<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>){return(__y,__x);
                                                                                                                                                                                                                                              ^
vec.cpp:15105:238: error: use of undeclared identifier '__x'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator>=(vector<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>,vector<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>){return(!(__x,__y));
                                                                                                                                                                                                                                             ^
vec.cpp:15105:242: error: use of undeclared identifier '__y'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator>=(vector<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>,vector<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>){return(!(__x,__y));
                                                                                                                                                                                                                                                 ^
vec.cpp:15107:238: error: use of undeclared identifier '__y'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator<=(vector<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>,vector<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>){return(!(__y,__x));
                                                                                                                                                                                                                                             ^
vec.cpp:15107:242: error: use of undeclared identifier '__x'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>bool operator<=(vector<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>,vector<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>){return(!(__y,__x));
                                                                                                                                                                                                                                                 ^
vec.cpp:15109:224: error: use of undeclared identifier '__x'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>void swap(vector<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>,vector<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>){(__x.swap(__y));
                                                                                                                                                                                                                               ^
vec.cpp:15109:233: error: use of undeclared identifier '__y'
template<typename __xcodeml_template_type_0_0,typename __xcodeml_template_type_0_1>void swap(vector<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>,vector<__xcodeml_template_type_0_0,__xcodeml_template_type_0_1>){(__x.swap(__y));
                                                                                                                                                                                                                                        ^
vec.cpp:15143:15: error: no class named 'pthread_mutex' in the global namespace
public:class::pthread_mutex(*_fl_mutex);
            ~~^
vec.cpp:15147:15: error: no class named 'pthread' in the global namespace
public:class::pthread(*_fl_owner);
            ~~^
vec.cpp:15192:63: error: no class named '__va_list_tag' in the global namespace
extern"C"{int vfprintf(class::__sFILE(*),char const(*),class::__va_list_tag(*));};
                                                            ~~^
vec.cpp:15193:44: error: no class named '__va_list_tag' in the global namespace
extern"C"{int vprintf(char const(*),class::__va_list_tag(*));};
                                         ~~^
vec.cpp:15194:53: error: no class named '__va_list_tag' in the global namespace
extern"C"{int vsprintf(char(*),char const(*),class::__va_list_tag(*));};
                                                  ~~^
vec.cpp:15196:68: error: no class named '__va_list_tag' in the global namespace
extern"C"{int vsnprintf(char(*),unsigned long,char const(*),class::__va_list_tag(*));};
                                                                 ~~^
vec.cpp:15197:62: error: no class named '__va_list_tag' in the global namespace
extern"C"{int vfscanf(class::__sFILE(*),char const(*),class::__va_list_tag(*));};
                                                           ~~^
vec.cpp:15198:43: error: no class named '__va_list_tag' in the global namespace
extern"C"{int vscanf(char const(*),class::__va_list_tag(*));};
                                        ~~^
vec.cpp:15199:58: error: no class named '__va_list_tag' in the global namespace
extern"C"{int vsscanf(char const(*),char const(*),class::__va_list_tag(*));};
                                                       ~~^
vec.cpp:15225:49: error: no class named '__va_list_tag' in the global namespace
extern"C"{int vdprintf(int,char const(*),class::__va_list_tag(*));};
                                              ~~^
vec.cpp:15237:57: error: no class named '__va_list_tag' in the global namespace
extern"C"{int vasprintf(char(*(*)),char const(*),class::__va_list_tag(*));};
                                                      ~~^
vec.cpp:15264:14: error: cannot initialize a parameter of type 'int (*)' with an rvalue of type 'int'
(a.push_back(1));
             ^
vec.cpp:532:28: note: passing argument to parameter '__x' here
public:void push_back(int(*__x)){if((this->__end_<(this->__end_cap()))){{class::std::__1::vector<int,class::std::__1::allocator<int> >::__RAII_IncreaseAnnotator __annotator((*this),1);
                           ^
100 warnings and 3425 errors generated.
